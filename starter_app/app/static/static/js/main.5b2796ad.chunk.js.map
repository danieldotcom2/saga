{"version":3,"sources":["components/utils/HomeContext.js","store/activities.js","store/current_patient.js","components/ProviderCalendar.js","components/DepCalendar.js","pages/Schedule.js","pages/DepSchedule.js","components/utils/routes.js","store/auth.js","pages/SignUpPage.js","components/utils/ThemeContext.js","components/DashboardComponent.js","pages/Dashboard.js","pages/LoginPage.js","components/ScheduleSelector.js","components/utils/PatientSearchContext.js","components/PatientSearchResults.js","components/NavBar.js","components/PatientPreviewCard.js","pages/Orders.js","components/ActivityTab.js","pages/PatientSearch.js","components/PatientPhoneNumbers.js","components/PatientAddressInfo.js","components/BasicPatientAttributes.js","components/utils/PatientChartContext.js","components/NewMedicationForm.js","components/newMentalProblemForm.js","components/NewPhysicalProblemForm.js","components/NewOrderForm.js","components/PatientOrdersList.js","components/PatientEncountersList.js","components/PatientMedicationsList.js","components/PatientMentalProblemList.js","components/PatientMentalProblems.js","components/PatientPhysicalProblemList.js","components/PatientEncounters.js","components/PatientOrders.js","components/PatientNotes.js","components/ChartReviewInfo.js","components/SelectedOrderPreviewCard.js","components/ChartReviewTabs.js","components/PatientMedications.js","components/ChartReview.js","components/PatientPhysicalProblems.js","components/PatientAllProblems.js","components/ChartReviewBasicAttributes.js","pages/PatientChart.js","components/OrderList.js","pages/DepartmentSchedule.js","components/MobileBottomNav.js","components/MobileBottomMenu.js","components/utils/RegistrationContext.js","components/RegistrationBasicInfoForm.js","components/RegistrationBiometricInfo.js","pages/Registration.js","pages/HomePage.js","App.js","store/configureStore.js","index.js","store/orders.js","store/encounters.js","components/utils/WeekContext.js"],"names":["HomeContext","createContext","OPEN_TAB","OPEN_CHART","CLOSE_TAB","closeTab","tabName","index","console","log","type","loadActivities","dispatch","a","Cookies","get","fetch","res","ok","json","data","loadUserActvities","activities","openPatientChart","patientId","openChart","patient","openPatientRegistration","openPatientCheckin","openDepartmentSchedule","department","openTab","activity","activitiesReducer","state","open_tabs","action","newState","Object","assign","opentabs","id","name","openTabs","push","tabs","splice","currentTabs","lastName","firstName","SET_PATIENT","ADD_ORDER","ADD_MED","ADD_PROBLEM","UPDATE_MED","UPDATE_PROB","UPDATE_ORDER","setPatient","setCurrentPatient","createMedication","medication","csrfToken","jsonMed","JSON","stringify","method","headers","body","addMedication","updateMedication","updateMed","updateProblem","problem","updateProb","createProblem","jsonProb","addProblem","updateOrder","order","jsonOrd","updateOrd","addOrder","currentPatientReducer","orders","medications","problems","encounters","meds","probs","ResponsiveReactGridLayout","WidthProvider","RGL","DragFromOutsideLayout","props","useDispatch","context","useContext","WeekContext","homeContext","useState","mounted","setMounted","events","layouts","useSelector","useEffect","some","setSelectedTab","hoverEncounter","setHoverEncounter","layout","onLayoutChange","updateLayout","onDrop","layoutItem","event","alert","measureBeforeMount","useCSSTransforms","compactType","preventCollision","isDroppable","className","map","l","i","startHour","parseInt","y","endHour","h","startMin","endMin","static","key","style","backgroundColor","title","onMouseLeave","onMouseEnter","encounter","borderRadius","cursor","display","flexDirection","justifyContent","padding","alignItems","marginBottom","alignContent","marginTop","marginLeft","fontSize","fullName","fontWeight","onClick","color","height","width","background","position","opacity","overflow","border","src","picture","draggable","unselectable","onDragStart","e","dataTransfer","setData","dayIndex","x","dayAndMonth","weekDays","split","day","Number","month","encounterStart","Date","encounterEnd","setLoading","setEncounterToCreate","encounter_type_id","patient_id","start","end","date","DepSchedule","defaultProps","rowHeight","margin","verticalCompact","cols","schedule","setSchedule","currentDate","getDate","getWeekNumber","d","UTC","getFullYear","getMonth","setUTCDate","getUTCDate","getUTCDay","yearStart","getUTCFullYear","weekNo","Math","ceil","getDates","startDate","stopDate","dateArray","addDays","currDate","days","valueOf","setDate","getDateRangeOfWeek","d1","numOfdaysPastSinceLastMonday","eval","getDay","currWeek","weekNoToday","weeksInTheFuture","rangeIsFrom","hey","startArray","rangeIsTo","weekRangeString","range","dates","yearAndWeek","currentWeek","setCurrentWeek","currViewInfo","weekDates","slice","setWeekDays","encountersByWeek","by_week","setEncounters","loading","hours","currentTimeIndicator","currentTimeIndicatorCard","w","currentTime","hour","getHours","minutes","getMinutes","hourMark","generateLayout","eventLayout","values","forEach","newEncounterCard","minW","maxW","dateStartArr","pop","newStartDateNoTZ","join","encStartTime","dateEndArr","newEndDateNoTZ","encEndTime","endMinutes","endHourMark","encountersToDisplay","setEncountersToDisplay","oldLayout","setOldLayout","setEvents","difference","filter","el","newEvents","Provider","value","outline","gridColumnStart","gridColumnEnd","gridRowStart","gridRowEnd","gridTemplateColumns","gridTemplateRows","boxShadow","gridGap","borderTop","borderBottom","encounterToCreate","createEncounter","jsonEncounter","ProtectedRoute","Component","component","path","currentUserId","exact","render","to","AuthRoute","login","username","password","setUser","errors","registerErrors","user","logout","removeUser","signup","email","useStylesSignUpTextField","makeStyles","theme","root","paddingLeft","paddingTop","paddingBottom","transition","transitions","create","focused","SignUpTextField","classes","TextField","InputProps","disableUnderline","useStyles","container","logo","textDecoration","fontFamily","Button","logInButton","textTransform","SignupPage","setUsername","setPassword","confirmPassword","setConfirmPassword","setEmail","userToCreate","setUserToCreate","setErrors","authErrors","auth","validateUser","justifySelf","Container","fixed","maxWidth","Divider","err","onSubmit","preventDefault","InputLabelProps","size","placeholder","onChange","target","ThemeContext","DashboardComponent","Dashboard","setActivities","themeContext","changeThemes","themes","setThemes","allActivities","role_activities","user_activities","backgroundImage","marginRight","useStylesLoginTextField","LoginTextField","spacing","signUpButton","ColorButton","withStyles","paddingRight","LoginPage","handleSubmit","document","location","reload","demoProviderLogin","demoSchedulerLogin","StyledMenu","paper","Menu","elevation","getContentAnchorEl","anchorOrigin","vertical","horizontal","transformOrigin","iconStyle","StyledMenuItem","palette","common","white","MenuItem","letterSpacing","ScheduleSelector","anchorEl","setAnchorEl","departments","setDepartments","response","getDepartmentNames","aria-controls","aria-haspopup","variant","currentTarget","keepMounted","open","Boolean","onClose","openSchedule","ListItemText","primary","PatientSearchContext","PatientSearchResults","wrapperRef","useRef","ref","handleClickOutside","current","contains","setPatientSearchTerm","setDisplayPatientSearchResults","addEventListener","removeEventListener","useOutsideAlerter","List","zIndex","patientSearchResults","ListItem","button","dob","main","flexGrow","breakpoints","up","search","shape","fade","searchIcon","pointerEvents","inputRoot","mobileInputInput","inputInput","appbar","toolbar","left","orange","getContrastText","deepOrange","purple","deepPurple","icon","modal","shadows","input","Navbar","currentUser","setCurrentUser","React","modalOpen","setModalOpen","loadingPicture","setLoadingPicture","patientSearchTerm","setPatientSearchResults","displayPatientSearchResults","form","handleModalOpen","handleClose","handleModalClose","handleClick","handleProfileFormSubmit","searchPatients","searchTerm","patients","length","submit","FormData","then","medium","AppBar","Toolbar","minHeight","fontStyle","InputBase","inputProps","IconButton","Avatar","provider","first_name","last_name","Modal","aria-labelledby","aria-describedby","closeAfterTransition","BackdropComponent","Backdrop","BackdropProps","timeout","Fade","in","alignSelf","accept","multiple","htmlFor","fullWidth","small","down","PatientPreviewCard","PlaceOrders","tabStyle","transform","ActivityTab","selectedTabName","borderTopLeftRadius","borderTopRightRadius","activityName","stopPropagation","closeThisTab","PatientSearch","selectedPatient","PatientPhoneNumbers","home_phone","mobile_phone","work_phone","imageStyle","hieght","PatientAddressInfo","address_line_one","address_line_two","address_line_three","address_city","address_state","address_zip","BasicPatientAttributes","PatientChartContext","GreenCheckbox","green","checked","Checkbox","popover","NewMedicationForm","provider_id","dxSearchTerm","setDxSearchTerm","dxSearchResults","setDxSearchResults","dxPerformSearch","setDxPerformSearch","searchingForMeds","setSearchingForMeds","selectedMedicationIndex","setSelectedMedicationIndex","displayMedicationQuestions","setDisplayMedicationQuestions","newMedInstructions","setNewMedInstructions","blueCheck","setBlueCheck","yellowCheck","setYellowCheck","greenCheck","setGreenCheck","greenAnchorEl","setGreenAnchorEl","displayImage","setDisplayImage","greenOpen","handleGreenPopoverClose","searchDxs","results","transitionProperty","textAlign","FormControlLabel","aria-owns","undefined","control","label","Popover","disableRestoreFocus","Input","autoFocus","endAdornment","InputAdornment","aria-label","edge","autoCapitalize","focusRipple","maxHeight","CircularProgress","TextareaAutosize","rowsMax","rows","rowsMin","alginSelf","medicationName","instructions","cui","dx","problemName","createOrder","note","order_type","status","NewItemColorButton","GreenColorButton","BlueColorButton","colorSpash","child","large","rippleVisible","animation","easing","easeInOut","top","right","bottom","fill","stroke","divider","strokeWidth","boxSizing","PatientProblemList","selectedIndex","setSelectedIndex","previewCui","setPreviewCui","selectedItemDefinitions","setSelectedItemDefinitions","selectedMed","setSelectedMed","selectedMedProviderId","setSelectedMedProviderId","setProvider","formModalOpen","setFormModalOpen","modalForm","setModalForm","showInstructionEdit","setShowInstructionEdit","selectedMedInstructions","setSelectedMedInstructions","definitions","def","source","rootSource","searchForCui","providerId","searchForDoc","rippleClasses","handleFormModalOpen","med","created_at","light","ButtonBase","TouchRippleProps","colorSplash","selected","handleListItemClick","newMed","patientInstructionsDark","patientInstructions","full_name","specialty","Slide","direction","modalPaper","autooverflow","NewOrderForm","NewPhysicalProblemForm","notedDate","PatientMedicationsList","setMedsArray","PatientPhysicalProblems","PatientOrders","PatientNotes","ToolBoxItem","Responsive","this","onTakeItem","bind","item","ChartReviewInfo","SelectedOrderPreviewCard","flexDirction","TabPanel","children","other","role","hidden","Box","p","Typography","a11yProps","ChartReviewTabs","setValue","Tabs","newValue","indicatorColor","textColor","scrollButtons","Tab","PatientOrdersList","PatientEncountersList","accordion","PatientMedications","text","secondary","whiteSpace","AllProblems","metricContainerStyle","metricTextStyle","ChartReviewBasicAttributes","beats_per_minute","weight","bmi","appBar","drawer","flexShrink","drawerPaper","drawerContainer","content","PatientChart","currentPatient","currentPatientTab","borderRight","borderLeft","rootList","borderColor","localizer","momentLocalizer","moment","DndCalendar","withDragAndDrop","Calendar","DepartmentSchedule","selectedOrder","setSelectedOrder","setOpen","setOrders","draggedEvent","setDraggedEvent","calendarLoading","setCalendarLoading","setDepartment","slideIn","setSlideIn","resourceMap","setResourceMap","getDepartment","selectDepartment","departmento","dept","encs","eventEnd","eventStart","patient_full_name","resourceId","resource_id","ordObj","resMap","resources","resource","resourceTitle","handleDragStart","evt","effectAllowed","dragImage","createElement","setAttribute","appendChild","innerHTML","setDragImage","removeOrderFromList","prevOrders","newEvent","idList","max","allDay","isAllDay","Grid","lg","md","xs","sm","Accordion","AccordionSummary","expandIcon","onDragEnd","AccordionDetails","startAccessor","selectable","popup","step","min","scrollToTime","onEventDrop","nextEvents","existingEvent","endAccessor","onEventResize","defaultView","views","dragFromOutsideItem","onDropFromOutside","createNewEncounter","defaultDate","toDate","resourceIdAccessor","resourceTitleAccessor","eventPropGetter","isSelected","MobileBottomNav","BottomNavigation","showLabels","BottomNavigationAction","list","fullList","MobileBottomMenu","setState","toggleDrawer","anchor","Fragment","SwipeableDrawer","onOpen","RegistrationContext","RegistrationBasicInfoForm","regContext","setFirstName","setLastName","FormLabel","birthday","setBirthday","FormControl","RadioGroup","sex","setSex","Radio","addressLineOne","setAddressLineOne","addressLineTwo","setAddressLineTwo","addressCity","setAddressCity","addressState","setAddressState","addressZip","setAddressZip","homePhone","setHomePhone","mobilePhone","setMobilePhone","workPhone","setWorkPhone","RegistrationBiometricInfo","setWeight","setHeight","setBmi","heartRate","setHeartRate","smoker","setSmoker","occupation","setOccupation","actionsContainer","resetContainer","Registration","activeStep","setActiveStep","addressLineThree","setAddressLineThree","setPicture","creatingPatient","setCreatingPatient","patientToCreate","setPatientToCreate","createPatient","jsonPatient","handleNext","steps","handleCreateNewPatient","prevActiveStep","handleBack","contextObject","Stepper","orientation","Step","StepLabel","StepContent","getStepContent","disabled","Paper","square","paperDark","paperLight","sharp","duration","leavingScreen","appBarShift","enteringScreen","menuButton","hide","drawerOpen","drawerClose","overflowX","mixins","HomePage","setSideBarDisplay","useTheme","setTabs","setSelectedTabName","includes","NavBar","listStyleType","mountOnEnter","unmountOnExit","App","storeEnhancer","loadUser","darkTheme","createMuiTheme","overrides","MuiCssBaseline","lightTheme","ThemeProvider","CssBaseline","SignUpPage","Home","rootReducer","combineReducers","currentErrors","errorIds","keys","errorId","applyMiddleware","thunk","initialState","store","createStore","ReactDOM","StrictMode","getElementById","jsonOrder","makeOrder","removeAppointmentOrder"],"mappings":"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","file":"static/js/main.5b2796ad.chunk.js","sourcesContent":["import { createContext } from 'react';\n\nconst HomeContext = createContext();\n\nexport default HomeContext;","import Cookies from 'js-cookie'\n\nconst LOAD_ACTIVITES = 'activities/LOAD_ACTIVITIES'\nconst OPEN_TAB = 'activities/OPEN_TAB'\nconst OPEN_CHART = 'activities/OPEN_CHART'\nconst CLOSE_TAB = 'activities/CLOSE_TAB'\nconst OPEN_DEPARTMENT_SCHEDULE = 'activities/OPEN_DEPARTMENT_SCHEDULE'\nconst OPEN_PATIENT_REGISTRATION = 'activities/OPEN_PATIENT_REGISTRATION'\nconst OPEN_PATIENT_CHECKIN = 'activities/OPEN_PATIENT_CHECKIN'\nexport const closeTab = (tabName,index) => {\n    console.log(\"given index close tab: \",index)\n    return {\n        type:CLOSE_TAB,\n        tabName,\n        index\n    }\n}\n\nexport const loadActivities = () => async (dispatch) => {\n    const csrfToken = Cookies.get(\"XSRF-TOKEN\");\n    const res = await fetch('/api/activity/user_activities')\n    if (res.ok) {\n        const data = await res.json()\n        dispatch(loadUserActvities(data))\n    }\n}\n\nexport const loadUserActvities = (activities) => {\n    return {\n        type: LOAD_ACTIVITES,\n        activities\n    }\n}\n\nexport const openPatientChart = (patientId) => async (dispatch) => {\n    const res = await fetch(`/api/patients/id/${patientId}`)\n    const data = await res.json()\n    console.log(data)\n    dispatch(openChart(data.patient))\n}\n\nexport const openPatientRegistration = () => {\n    return {\n        type: OPEN_PATIENT_REGISTRATION,\n    }\n}\n\nexport const openPatientCheckin = () => {\n    return {\n        type: OPEN_PATIENT_CHECKIN,\n    }\n}\n\n// export const openDepartmentSchedule = (departmentId) => async (dispatch) => {\n//     const res = await fetch(`/api/orders/department/${departmentId}`)\n//     const data = await res.json()\n//     console.log(data)\n    \n//     dispatch(openDepartmentSched(department))\n// }\n\nexport const openDepartmentSchedule = (department) => {\n    return {\n        type: OPEN_DEPARTMENT_SCHEDULE,\n        department\n    }\n}\n\nexport const openChart=(patient)=>{\n    return {\n        type:OPEN_CHART,\n        patient\n    }\n}\n\nexport const openTab = (activity) => {\n    return {\n        type: OPEN_TAB,\n        activity,\n    }\n}\n\nexport default function activitiesReducer(state = {open_tabs:[]} ,action) {\n    let newState = Object.assign({},state);\n    const opentabs = [...state.open_tabs]\n    switch (action.type){\n        case LOAD_ACTIVITES:\n            newState = action.activities\n            newState[\"open_tabs\"] = [{id:0,name:\"dashboard\"}]\n            return action.activities\n        case OPEN_TAB:\n            const openTabs = [...state.open_tabs]\n            newState.open_tabs = openTabs\n            newState.open_tabs.push(action.activity)\n            return newState\n        case CLOSE_TAB: \n            let tabs = [...state.open_tabs]\n            console.log(\"the index used to delete a tab\",action.index)\n            tabs.splice(action.index,1)\n            console.log(\"after deletion tabs: \",tabs)\n            newState.open_tabs = tabs\n            return newState\n        case OPEN_CHART:\n            const currentTabs = [...state.open_tabs]\n            newState.open_tabs = currentTabs\n            newState.open_tabs.push({id:5, patient:action.patient, name:action.patient.lastName + \", \" + action.patient.firstName})\n            return newState\n        case OPEN_DEPARTMENT_SCHEDULE:\n            newState.open_tabs = opentabs\n            newState.open_tabs.push({id:6, department:action.department, name:action.department.name})\n            return newState\n        case OPEN_PATIENT_REGISTRATION:\n            newState.open_tabs = opentabs\n            newState.open_tabs.push({id:8, name:\"Patient Registration\"})\n            return newState\n        case OPEN_PATIENT_CHECKIN:\n            newState.open_tabs = opentabs\n            newState.open_tabs.push({id:9, name:\"Patient Check-in\"})\n            return newState\n        // case UPDATE_CHART_ORDERS: \n        //     const tabs = [...state.opentabs]\n        //     newState.openTabs = tabs\n        //     const patient = openTabs.find((patientTab)=>patientTab.name = )\n        default:\n            return state\n    }\n}","import Cookies from 'js-cookie'\n\nconst SET_PATIENT = \"/currentPatient/SET_PATIENT\"\nconst ADD_ORDER = \"/currentPatient/ADD_ORDER\"\nconst ADD_MED = \"/currentPatient/ADD_MED\"\nconst ADD_PROBLEM = \"/currentPatient/ADD_PROBLEM\"\nconst UPDATE_MED = \"/currentPatient/UPDATE_MED\"\nconst UPDATE_PROB = \"/currentPatient/UPDATE_PROB\"\nconst UPDATE_ORDER = \"/currentPatient/UPDATE_ORDER\"\n\n\nexport const setPatient = (patient) => {\n    return {\n        type:SET_PATIENT,\n        patient\n    }\n}\n\nexport const setCurrentPatient = (patient)=> async (dispatch)=> {\n    const res = await fetch(`/api/patients/id/${patient.id}`)\n    const data = await res.json()\n    console.log(data)\n    dispatch(setPatient(data.patient))\n}\n\nexport const createMedication = (medication) => async (dispatch) => {\n    const csrfToken = Cookies.get(\"XSRF-TOKEN\")\n    const jsonMed = JSON.stringify(medication)\n    const res = await fetch('/api/medications/create',{\n        method: \"POST\",\n        headers: {\n            \"Content-Type\": \"application/json\",\n            \"X-CSRF-TOKEN\": csrfToken,\n        },\n        body: jsonMed\n    })\n    const data = await res.json()\n    console.log(data)\n    dispatch(addMedication(data.medication))\n}\n\nexport const updateMedication = (medication) => async (dispatch) => {\n    const csrfToken = Cookies.get(\"XSRF-TOKEN\")\n    const jsonMed = JSON.stringify(medication)\n    const res = await fetch('/api/medications/update',{\n        method: \"PATCH\",\n        headers: {\n            \"Content-Type\": \"application/json\",\n            \"X-CSRF-TOKEN\": csrfToken,\n        },\n        body: jsonMed\n    })\n    const data = await res.json()\n    console.log(data)\n    dispatch(updateMed(data.medication))\n}\n\nexport const updateProblem = (problem) => async (dispatch) => {\n    const csrfToken = Cookies.get(\"XSRF-TOKEN\")\n    const jsonMed = JSON.stringify(problem)\n    const res = await fetch('/api/problems/update',{\n        method: \"PATCH\",\n        headers: {\n            \"Content-Type\": \"application/json\",\n            \"X-CSRF-TOKEN\": csrfToken,\n        },\n        body: jsonMed\n    })\n    const data = await res.json()\n    console.log(data)\n    dispatch(updateProb(data.problem))\n}\n\nexport const updateMed = (medication) => {\n    return {\n        type:UPDATE_MED,\n        medication\n    }\n}\n\nexport const updateProb = (problem) => {\n    return {\n        type:UPDATE_PROB,\n        problem\n    }\n}\n\nexport const createProblem = (problem) => async (dispatch) => {\n    const csrfToken = Cookies.get(\"XSRF-TOKEN\")\n    const jsonProb = JSON.stringify(problem)\n    const res = await fetch('/api/problems/create',{\n        method: \"POST\",\n        headers: {\n            \"Content-Type\": \"application/json\",\n            \"X-CSRF-TOKEN\": csrfToken,\n        },\n        body: jsonProb\n    })\n    const data = await res.json()\n    console.log(data)\n    dispatch(addProblem(data.problem))\n}\n\nexport const addMedication = (medication) => {\n    return {\n        type: ADD_MED,\n        medication\n    }\n}\n\nexport const addProblem = (problem) => {\n    return {\n        type: ADD_PROBLEM,\n        problem\n    }\n}\n\nexport const updateOrder = (order) => async (dispatch) => {\n    const csrfToken = Cookies.get(\"XSRF-TOKEN\")\n    const jsonOrd = JSON.stringify(order)\n    const res = await fetch('/api/orders/update',{\n        method: \"PATCH\",\n        headers: {\n            \"Content-Type\": \"application/json\",\n            \"X-CSRF-TOKEN\": csrfToken,\n        },\n        body: jsonOrd\n    })\n    const data = await res.json()\n    console.log(data)\n    dispatch(updateOrd(data.order))\n}\n\nexport const updateOrd = (order) => {\n    return {\n        type:UPDATE_ORDER,\n        order\n    }\n}\n\nexport const addOrder = (order) => {\n    return {\n        type:ADD_ORDER,\n        order\n    }\n}\n\nexport default function currentPatientReducer(state={orders:{},medications:{},problems:{},encounters:[]},action){\n    const newState = Object.assign({},state)\n    const meds = {...state.medications}\n    const probs = {...state.problems}\n    const orders = {...state.orders}\n    switch (action.type) {\n        case SET_PATIENT:\n            return action.patient\n        case ADD_ORDER:\n            newState.orders = orders\n            newState.orders[action.order.id] = (action.order)\n            return newState\n        case ADD_MED:\n            newState.medications = meds\n            newState.medications[action.medication.id] = action.medication\n            return newState\n        case UPDATE_MED: \n            newState.medications = meds\n            newState.medications[action.medication.id] = action.medication\n            return newState\n        case ADD_PROBLEM: \n            newState.problems = probs\n            newState.problems[action.problem.id] = action.problem\n            return newState\n        case UPDATE_PROB: \n            newState.problems = probs\n            newState.problems[action.problem.id] = action.problem\n            return newState\n        case UPDATE_ORDER: \n            newState.orders = orders\n            newState.orders[action.order.id] = action.order\n            return newState\n        default:\n            return state\n    }\n}","\nimport React, { useContext, useEffect, useState, useRef } from \"react\";\nimport '../styles/schedule.css'\nimport _ from \"lodash\";\nimport RGL, { Responsive, WidthProvider } from \"react-grid-layout\";\nimport WeekContext from \"./utils/WeekContext\";\nimport {openPatientChart} from '../store/activities'\nimport { useDispatch, useSelector } from 'react-redux';\nimport HomeContext from './utils/HomeContext';\nimport Divider from '@material-ui/core/Divider';\nimport ExitToAppTwoToneIcon from '@material-ui/icons/ExitToAppTwoTone';\n\n\nconst ResponsiveReactGridLayout = WidthProvider(RGL)\n\n// const cardStyle = {\n//   '&:hover': {\n//       backgroundColor: \"hsla(0,0%,100%,.32)\",\n//   }\n// }\n\nconst DragFromOutsideLayout=(props)=> {\n  const dispatch = useDispatch()\n  const context = useContext(WeekContext)\n  const homeContext = useContext(HomeContext)\n\n  const [mounted,setMounted] = useState(false)\n  const [layouts,setLayouts] = useState(props.events)\n  const openTabs = useSelector(state=>state.activities.open_tabs)\n\n  useEffect(()=>{\n    setMounted(false)\n  },[])\n\n  const openChart=(patient)=>{\n    if (!openTabs.some(activity=>activity.name === `${patient.lastName}, ${patient.firstName}`)) dispatch(openPatientChart(patient.id))\n    homeContext.setSelectedTab(`${patient.lastName}, ${patient.firstName}`,patient)\n  }\n\n  const [hoverEncounter,setHoverEncounter] = useState({})\n  console.log(hoverEncounter)\n\n  const generateDOM=()=>{\n    return props.events.map((l, i)=>{\n      let startHour = (parseInt(((l.y - 2) / 4)) + 8) % 12\n      let endHour = (parseInt(((l.y + l.h - 2) / 4)) + 8) % 12\n      let startMin = (l.y - 2) % 4 * 15\n      let endMin = ((l.y + l.h) - 2) % 4 * 15\n\n      if (startHour === 0){\n        startHour = 12\n      }\n      if (endHour === 0){\n        endHour = 12\n      }\n      if (startMin === 0){\n        startMin = \"00\"\n      }\n      if (endMin === 0){\n        endMin = \"00\"\n      }\n      if (l.static) {\n        return (\n          <div key={i} className={\"static\"} style={{backgroundColor:\"#f9f9f9\"}}>\n            <span\n              className=\"text\"\n              title=\"Time is unschedulable\"\n            >\n            </span>\n          </div>\n        )\n      }\n      return (\n            <div key={i} className={\"schedule-card-blue\"} onMouseLeave={()=>{setHoverEncounter({})}} onMouseEnter={()=>{setHoverEncounter(l.encounter)}} style={{borderRadius:\"5px\",cursor:\"pointer\",display:\"flex\",flexDirection:\"column\"}}>\n              <div style={{justifyContent:\"space-between\", display:\"flex\",flexDirection:\"row\",padding:\"5px\",alignItems:\"center\",marginBottom:\"0px\",alignContent:\"center\"}}>\n                {/* <img style={{alignSelf:\"normal\",marginRight:\"2px\"}} className=\"patient-photo-schedule\" src={l.encounter.patient ? l.encounter.patient.picture : \"\"}/> */}\n                <div style={{marginTop:\"-6px\",marginLeft:\"6px\"}}>\n                  <strong style={{fontSize:\"13px\"}}>{l.patient.fullName}</strong>\n                {/* <strong style={{fontSize:\"11px\",display:\"block\",borderRadius:\"4px\",background:\"white\",color:\"grey\",width:\"fit-content\",padding:\"2px\",border:\"1px solid grey\"}}>EXAM ROOM B</strong> */}\n                </div>\n                <div style={{fontSize:\"12px\",fontWeight:\"strong\"}}>\n                  <strong>{`${startHour}:${startMin} - ${endHour}:${endMin}`}</strong>\n                </div>\n                </div>\n                <div style={{display: hoverEncounter.id === l.encounter.id ? \"flex\" : \"flex\",borderRadius:\"5px\",display:\"flex\",flexDirection:\"column\",marginRight:\"140px\",marginLeft:\"-50px\",background:\"white\",padding: hoverEncounter.id === l.encounter.id ? \"6px\" : \"\",boxShadow:\"rgba(50, 50, 105, 0.15) 0px 2px 5px 0px, rgba(0, 0, 0, 0.05) 0px 1px 1px 0px\"}}>\n                  <div style={{display:hoverEncounter.id === l.encounter.id ? \"flex\" : \"none\",flexDirection:\"column\"}}>\n                    <div onClick={()=>openChart(l.encounter.patient)} style={{display: hoverEncounter.id === l.encounter.id ? \"flex\" : \"none\",flexDirection:\"row\",justifyContent:\"center\",color:\"white\", borderRadius:\"3px\",padding:\"3px\",height:\"min-content\",width:\"100%\",cursor:\"pointer\",background:\"lightgreen\"}}> open chart <ExitToAppTwoToneIcon style={{marginLeft:\"3px\"}}/> </div>\n                    <div onClick={()=>openChart(l.encounter.patient)} style={{marginTop:\"2px\", display: hoverEncounter.id === l.encounter.id ? \"flex\" : \"none\", flexDirection:\"row\",justifyContent:\"center\",color:\"white\", borderRadius:\"3px\",padding:\"3px\",height:\"min-content\",width:\"100%\",cursor:\"pointer\",background:\"lightgreen\"}}>open encounter</div>\n                  </div>\n                  <div style={{position:\"relative\",display:hoverEncounter.id === l.encounter.id ? \"\" : \"none\",opacity:\"100%\",width:\"160px\",height:\"160px\",overflow:\"hidden\",borderRadius:\"50%\",border:\"2px solid #fff\"}}>\n                    <img src={`${hoverEncounter.patient ? hoverEncounter.patient.picture : \"\"}`} style={{display:hoverEncounter.id === l.encounter.id ? \"flex\" : \"none\"}} className={\"user-photo\"}/>\n                  </div>\n                </div>\n            </div>\n          )\n        }\n      )\n    }\n\n\n  const onDrop = (layout, layoutItem, event) => {\n    alert(`Dropped element props:\\n${JSON.stringify(layoutItem, ['x', 'y', 'w', 'h'], 2)}`);\n  };\n\n    return (\n      <div>\n          \n        {/* <div>\n          Current Breakpoint: {this.state.currentBreakpoint} (\n          {this.props.cols[this.state.currentBreakpoint]} columns)\n        </div>\n        <div>\n          Compaction type:{\" \"}\n          {_.capitalize(this.state.compactType) || \"No Compaction\"}\n        </div>\n        <button onClick={this.onNewLayout}>Generate New Layout</button>\n        <button onClick={this.onCompactTypeChange}>\n          Change Compaction Type\n        </button> */}\n        {/* <div\n          className=\"droppable-element\"\n          draggable={true}\n          unselectable=\"on\"\n          onDragStart={e => e.dataTransfer.setData(\"text/plain\", \"\")}\n        >\n          Droppable Element (Drag me!)\n        </div> */}\n        <ResponsiveReactGridLayout\n          {...props}\n          layout={layouts}\n          // onBreakpointChange={this.onBreakpointChange}\n          onLayoutChange={context.updateLayout}\n          onDrop={onDrop}\n          // WidthProvider option\n          measureBeforeMount={false}\n          useCSSTransforms={mounted}\n          compactType={\"No Compaction\"}\n          preventCollision={true}\n          isDroppable={true}\n          className={\"grid\"}\n        >\n          {generateDOM()}\n        </ResponsiveReactGridLayout>\n      </div>\n    );\n}\n\nexport default DragFromOutsideLayout;","\nimport React, { useContext, useEffect, useState, useRef } from \"react\";\nimport '../styles/schedule.css'\nimport _ from \"lodash\";\nimport RGL, { Responsive, WidthProvider } from \"react-grid-layout\";\nimport WeekContext from \"./utils/WeekContext\";\nimport {openPatientChart} from '../store/activities'\nimport { useDispatch, useSelector } from 'react-redux';\nimport HomeContext from './utils/HomeContext';\nimport Divider from '@material-ui/core/Divider';\nimport ExitToAppTwoToneIcon from '@material-ui/icons/ExitToAppTwoTone';\nimport {createNewEncounter} from '../store/encounters'\n\n\nconst ResponsiveReactGridLayout = WidthProvider(RGL)\n\n// const cardStyle = {\n//   '&:hover': {\n//       backgroundColor: \"hsla(0,0%,100%,.32)\",\n//   }\n// }\n\nconst DragFromOutsideLayout=(props)=> {\n  const dispatch = useDispatch()\n  const context = useContext(WeekContext)\n  const homeContext = useContext(HomeContext)\n\n  const [mounted,setMounted] = useState(false)\n  const [layouts,setLayouts] = useState(props.events)\n  const openTabs = useSelector(state=>state.activities.open_tabs)\n\n  useEffect(()=>{\n    setMounted(false)\n  },[])\n\n  const openChart=(patient)=>{\n    if (!openTabs.some(activity=>activity.name === `${patient.lastName}, ${patient.firstName}`)) dispatch(openPatientChart(patient.id))\n    homeContext.setSelectedTab(`${patient.lastName}, ${patient.firstName}`,patient)\n  }\n\n  const [hoverEncounter,setHoverEncounter] = useState({})\n  console.log(hoverEncounter)\n\n  const generateDOM=()=>{\n    return props.events.map((l, i)=>{\n      let startHour = (parseInt(((l.y - 2) / 4)) + 8) % 12\n      let endHour = (parseInt(((l.y + l.h - 2) / 4)) + 8) % 12\n      let startMin = (l.y - 2) % 4 * 15\n      let endMin = ((l.y + l.h) - 2) % 4 * 15\n\n      if (startHour === 0){\n        startHour = 12\n      }\n      if (endHour === 0){\n        endHour = 12\n      }\n      if (startMin === 0){\n        startMin = \"00\"\n      }\n      if (endMin === 0){\n        endMin = \"00\"\n      }\n      if (l.static) {\n        return (\n          <div key={i} className={\"static\"} style={{backgroundColor:\"#f9f9f9\"}}>\n            <span\n              className=\"text\"\n              title=\"Time is unschedulable\"\n            >\n            </span>\n          </div>\n        )\n      }\n      return (\n            <div key={i} className={\"schedule-card-blue\"} onMouseLeave={()=>{setHoverEncounter({})}} onMouseEnter={()=>{setHoverEncounter(l.encounter)}} style={{borderRadius:\"5px\",cursor:\"pointer\",display:\"flex\",flexDirection:\"column\"}}>\n              <div style={{justifyContent:\"space-between\", display:\"flex\",flexDirection:\"row\",padding:\"5px\",alignItems:\"center\",marginBottom:\"0px\",alignContent:\"center\"}}>\n                {/* <img style={{alignSelf:\"normal\",marginRight:\"2px\"}} className=\"patient-photo-schedule\" src={l.encounter.patient ? l.encounter.patient.picture : \"\"}/> */}\n                <div style={{marginTop:\"-6px\",marginLeft:\"6px\"}}>\n                  <strong style={{fontSize:\"13px\"}}>{l.patient.fullName}</strong>\n                {/* <strong style={{fontSize:\"11px\",display:\"block\",borderRadius:\"4px\",background:\"white\",color:\"grey\",width:\"fit-content\",padding:\"2px\",border:\"1px solid grey\"}}>EXAM ROOM B</strong> */}\n                </div>\n                <div style={{fontSize:\"12px\",fontWeight:\"strong\"}}>\n                  <strong>{`${startHour}:${startMin} - ${endHour}:${endMin}`}</strong>\n                </div>\n                </div>\n                <div style={{display: hoverEncounter.id === l.encounter.id ? \"flex\" : \"flex\",borderRadius:\"5px\",display:\"flex\",flexDirection:\"column\",marginRight:\"140px\",marginLeft:\"-50px\",background:\"white\",padding: hoverEncounter.id === l.encounter.id ? \"6px\" : \"\",boxShadow:\"rgba(50, 50, 105, 0.15) 0px 2px 5px 0px, rgba(0, 0, 0, 0.05) 0px 1px 1px 0px\"}}>\n                  <div style={{display:hoverEncounter.id === l.encounter.id ? \"flex\" : \"none\",flexDirection:\"column\"}}>\n                    <div onClick={()=>openChart(l.encounter.patient)} style={{display: hoverEncounter.id === l.encounter.id ? \"flex\" : \"none\",flexDirection:\"row\",justifyContent:\"center\",color:\"white\", borderRadius:\"3px\",padding:\"3px\",height:\"min-content\",width:\"100%\",cursor:\"pointer\",background:\"lightgreen\"}}> open chart <ExitToAppTwoToneIcon style={{marginLeft:\"3px\"}}/> </div>\n                    <div onClick={()=>openChart(l.encounter.patient)} style={{marginTop:\"2px\", display: hoverEncounter.id === l.encounter.id ? \"flex\" : \"none\", flexDirection:\"row\",justifyContent:\"center\",color:\"white\", borderRadius:\"3px\",padding:\"3px\",height:\"min-content\",width:\"100%\",cursor:\"pointer\",background:\"lightgreen\"}}>open encounter</div>\n                  </div>\n                  <div style={{position:\"relative\",display:hoverEncounter.id === l.encounter.id ? \"\" : \"none\",opacity:\"100%\",width:\"160px\",height:\"160px\",overflow:\"hidden\",borderRadius:\"50%\",border:\"2px solid #fff\"}}>\n                    <img src={`${hoverEncounter.patient ? hoverEncounter.patient.picture : \"\"}`} style={{display:hoverEncounter.id === l.encounter.id ? \"flex\" : \"none\"}} className={\"user-photo\"}/>\n                  </div>\n                </div>\n            </div>\n          )\n        }\n      )\n    }\n\n\n  const onDrop = (layout, l, event) => {\n    console.log(event)\n      console.log(\"layoutItem\",l)\n      let startHour = (parseInt(((l.y - 2) / 4)) + 8)\n      let endHour = (parseInt(((l.y + l.h - 2) / 4)) + 8)\n      let startMin = (l.y - 2) % 4 * 15\n      let endMin = ((l.y + l.h) - 2) % 4 * 15\n\n      if (startHour === 0){\n        startHour = 12\n      }\n      if (endHour === 0){\n        endHour = 12\n      }\n      if (startMin === 0){\n        startMin = \"00\"\n      }\n      if (endMin === 0){\n        endMin = \"00\"\n      }\n      let dayIndex = l.x\n      let dayAndMonth = props.weekDays[dayIndex].split(\"/\")\n      let day = Number(dayAndMonth[1])\n      let month = Number(dayAndMonth[0]) - 1\n      startHour = Number(startHour)\n      startMin = Number(startMin)\n      const encounterStart = new Date(2020, month, day,startHour,startMin)\n      console.log(encounterStart)\n      const encounterEnd = new Date(2020,month,day,startHour + 1,startMin)\n      context.setLoading(true)\n      context.setEncounterToCreate({encounter_type_id:1,patient_id:3,start:encounterStart,end:encounterEnd,date:encounterStart})\n    // alert(`Dropped element props:\\n${JSON.stringify(layoutItem, ['x', 'y', 'w', 'h'], 2)}`);\n  };\n\n    return (\n      <div>\n          \n        {/* <div>\n          Current Breakpoint: {this.state.currentBreakpoint} (\n          {this.props.cols[this.state.currentBreakpoint]} columns)\n        </div>\n        <div>\n          Compaction type:{\" \"}\n          {_.capitalize(this.state.compactType) || \"No Compaction\"}\n        </div>\n        <button onClick={this.onNewLayout}>Generate New Layout</button>\n        <button onClick={this.onCompactTypeChange}>\n          Change Compaction Type\n        </button> */}\n        <div\n          className=\"droppable-element\"\n          draggable={true}\n          id={\"jimmy boy\"}\n          unselectable=\"on\"\n          onDragStart={e => e.dataTransfer.setData(\"text/plain\", \"\")}\n          style={{color:\"black\"}}\n        >\n          Droppable Element (Drag me!)\n        </div>\n        <ResponsiveReactGridLayout\n          {...props}\n          layout={layouts}\n          // onBreakpointChange={this.onBreakpointChange}\n          onLayoutChange={context.updateLayout}\n          onDrop={onDrop}\n          // WidthProvider option\n          measureBeforeMount={false}\n          useCSSTransforms={mounted}\n          compactType={\"No Compaction\"}\n          preventCollision={true}\n          isDroppable={true}\n          className={\"grid\"}\n        >\n          {generateDOM()}\n        </ResponsiveReactGridLayout>\n      </div>\n    );\n}\n\nexport default DragFromOutsideLayout;","import React, { useState, useEffect} from 'react';\nimport { useSelector } from 'react-redux';\nimport ProviderCalendar from '../components/ProviderCalendar'\nimport WeekContext from '../components/utils/WeekContext'\nimport '../styles/schedule.css'\nimport { Transition } from 'react-transition-group';\n\n\nfunction DepSchedule(props) {\n\n    const defaultProps = {\n        className: \"layout\",\n        rowHeight: 9,\n        margin:[1.2,1],\n        onLayoutChange: function() {},\n        preventCollision: true,\n        verticalCompact: false,\n        cols: 5,\n      };\n    \n    const [schedule,setSchedule] = useState(\"\")\n    const currentDate = new Date\n    const date = currentDate.getDate();\n\n    const getWeekNumber =(d)=>{\n    d = new Date(Date.UTC(d.getFullYear(), d.getMonth(), d.getDate()));\n    d.setUTCDate(d.getUTCDate() + 4 - (d.getUTCDay()||7));\n    const yearStart = new Date(Date.UTC(d.getUTCFullYear(),0,1));\n    const weekNo = Math.ceil(( ( (d - yearStart) / 86400000) + 1)/7);\n    return [d.getUTCFullYear(), weekNo];\n    }\n\n    const getDates = (startDate, stopDate) => {\n        const dateArray = []\n        let currentDate = startDate;\n        while (currentDate <= stopDate) {\n            dateArray.push(new Date (currentDate));\n            currentDate = addDays(currentDate, 1);\n        }\n        return dateArray;\n    }\n\n    const addDays = (currDate,days) => {\n        const date = new Date(currDate.valueOf());\n        date.setDate(date.getDate() + days);\n        return date;\n    }    \n\n    function getDateRangeOfWeek(weekNo){\n        const d1 = new Date();\n        const numOfdaysPastSinceLastMonday = eval(d1.getDay());\n        d1.setDate(d1.getDate() - numOfdaysPastSinceLastMonday);\n        const currWeek = getWeekNumber(d1)\n        const weekNoToday = currWeek[1]\n        const weeksInTheFuture = eval( weekNo - weekNoToday );\n        d1.setDate(d1.getDate() + eval( 7 * weeksInTheFuture ));\n        const rangeIsFrom = eval(d1.getMonth()+1) +\"/\" + d1.getDate() + \"/\" + d1.getFullYear();\n        const start = d1\n        const hey = new Date(start)\n        const startArray = [hey]\n        const dateArray = [...startArray]\n        d1.setDate(d1.getDate() + 6);\n        const rangeIsTo = eval(d1.getMonth()+1) +\"/\" + d1.getDate() + \"/\" + d1.getFullYear() ;\n        const end = d1\n        dateArray.push(end)\n        const weekRangeString =  rangeIsFrom + \" to \"+rangeIsTo;\n        return {range:weekRangeString,dates:dateArray}\n    };\n    const yearAndWeek = getWeekNumber(new Date())\n    const [currentWeek,setCurrentWeek] = useState(yearAndWeek[1])\n    console.log(\"CURRENT WEEK:\",currentWeek)\n    const currViewInfo = getDateRangeOfWeek(currentWeek)\n    const range = getDates(currViewInfo.dates[0],currViewInfo.dates[1])\n    const weekDates = range.map(date=>eval(date.getMonth()+1) +\"/\" + date.getDate())\n    const [weekDays,setWeekDays] = useState(weekDates.slice(1,6))\n    const encountersByWeek = useSelector(state=>state.encounters.by_week)\n    const [encounters,setEncounters] = useState(encountersByWeek[currentWeek])\n    const [loading,setLoading] = useState(false)\n    \n    const hours = [\"8am\",\"9am\",\"10am\",\"11am\",\"12pm\",\"1pm\",\"2pm\",\"3pm\",\"4pm\",\"5pm\",\"6pm\"]\n\n    \n    console.log(\"encounters\",encounters)\n\n\n    // const createEncountersByWeekObject=(encounters)=>{\n    //     const encsByWeek = {}\n    //     Object.values(encounters).forEach((encounter,index)=>{\n    //         const newEncounterCard = {x:\"\",y:\"\",w:1,h:\"\",i:`${index + 2}`,minW: 1,maxW:1,encounter,patient:encounter.patient,start:\"\",end:\"\"}\n    //         const dateStartArr = encounter.start.split(\" \")\n    //         console.log(encounter.start)\n    //         dateStartArr.pop()\n    //         const newStartDateNoTZ = dateStartArr.join(\" \")\n    //         const encStartTime = new Date(newStartDateNoTZ)\n    //         const encounterWeekNumber = getWeekNumber(encStartTime)\n    //         console.log(encounterWeekNumber)\n    //         const encWeek = encounterWeekNumber[1]\n    //         encsByWeek[encWeek] ? encsByWeek[encWeek][encounter.id]=encounter : encsByWeek[encWeek] = {[encounter.id]:encounter}\n    //     })\n    //     console.log(encsByWeek)\n    // }\n\n    // const [encountersByWeek, setEncountersByWeek] = useState(createEncountersByWeekObject(encounters))\n\n    const currentTimeIndicator = () => {\n        const currentTimeIndicatorCard = {x:\"\",y:\"\",h:1,w:1,static:true}\n        const currentTime = new Date()\n        const day = currentTime.getDay()\n        currentTimeIndicatorCard.x = day - 1\n        const hour = currentTime.getHours()\n        const minutes = currentTime.getMinutes()\n        currentTime.start = `${hour}:${minutes}`\n        const hourMark = ((4*(hour - 8)) + 2) + (minutes/15)\n        currentTimeIndicatorCard.y = hourMark\n        currentTimeIndicatorCard.x = day - 1\n        return currentTimeIndicatorCard\n    }\n    \n    const generateLayout=(encounters)=>{\n            console.log(\"THESE ARE ENCOUNTERS!!!\",encounters)\n            const eventLayout = [{x:0,y:0,i:\"0\",h:2,w:5,static:true},{x:0,y:44,i:\"1\",h:2,w:5,static:true}]\n            if (!encounters) return eventLayout\n            Object.values(encounters).forEach((encounter,index)=>{\n            const newEncounterCard = {x:\"\",y:\"\",w:1,h:\"\",i:`${index + 2}`,minW: 1,maxW:1,encounter,patient:encounter.patient,start:\"\",end:\"\"}\n            const dateStartArr = encounter.start.split(\" \")\n            console.log(encounter.start)\n            dateStartArr.pop()\n            const newStartDateNoTZ = dateStartArr.join(\" \")\n            const encStartTime = new Date(newStartDateNoTZ)\n            const day = encStartTime.getDay()\n            newEncounterCard.x = day - 1\n            const hour = encStartTime.getHours()\n            const minutes = encStartTime.getMinutes()\n            newEncounterCard.start = `${hour}:${minutes}`\n            console.log(hour,minutes)\n            const hourMark = ((4*(hour - 8)) + 2) + (minutes/15)\n            newEncounterCard.y = hourMark\n            const dateEndArr = encounter.end.split(\" \")\n            dateEndArr.pop()\n            const newEndDateNoTZ = dateEndArr.join(\" \")\n            const encEndTime = new Date(newEndDateNoTZ)\n            const endHour = encEndTime.getHours()\n            const endMinutes = encEndTime.getMinutes()\n            newEncounterCard.end = `${endHour}:${endMinutes}`\n            const endHourMark = ((4*(endHour - 8)) + 2) + (endMinutes/15)\n            newEncounterCard.h = endHourMark - hourMark\n            console.log(\"encCARD!\",newEncounterCard)\n            console.log(\"encStartTime\",encStartTime)\n            eventLayout.push(newEncounterCard)\n        })\n        return eventLayout\n    }\n    const [encountersToDisplay,setEncountersToDisplay] = useState(generateLayout(encounters))\n    console.log(\"DISPPLAY:\",encountersToDisplay)\n    const [oldLayout,setOldLayout] = useState(encountersToDisplay)\n    const [events,setEvents] = useState(encountersToDisplay)\n\n    const updateLayout=(e)=>{\n        const difference = oldLayout.filter((el,index)=>el.x !== e[index].x || el.y !== e[index].y || el.h !== e[index].h)\n        console.log(\"OLD LAYOUT\",oldLayout)\n        setOldLayout(encountersToDisplay)\n        console.log(difference)\n        const newEvents = [...encountersToDisplay]\n        newEvents.forEach((event,index) => {\n            event.x = e[index].x\n            event.y = e[index].y\n            event.w = e[index].w\n            event.h = e[index].h\n        })\n        setEvents(newEvents)\n        console.log(newEvents)\n      }\n\n      useEffect(()=>{\n        if (encountersByWeek) {\n            const currViewInfo = getDateRangeOfWeek(currentWeek - 1)\n            const range = getDates(currViewInfo.dates[0],currViewInfo.dates[1])\n            const weekDates = range.map(date=>eval(date.getMonth()+1) +\"/\" + date.getDate())\n            setWeekDays(weekDates.slice(1,6))\n            setEncounters(encountersByWeek[currentWeek])\n            setEncountersToDisplay(generateLayout(encountersByWeek[currentWeek]))\n            setEvents(generateLayout(encountersByWeek[currentWeek]))\n            setOldLayout(generateLayout(encountersByWeek[currentWeek]))\n            setLoading(false)\n        }\n    },[currentWeek])\n    \n    return (\n        <>\n            <WeekContext.Provider value={{updateLayout}}>\n            <div className={\"provider-schedule\"}>\n            <div style={{display:\"flex\",flexDirection:\"row\",justifyContent:\"right\"}}>\n                    <div style={{display:\"flex\",flexDirection:\"row\", justifyContent:\"right\"}}>\n                    <button className={\"schedule-card\"} style={{background: \"lightsteelblue\", outline:\"none\", color:\"white\", border:\"none\", borderRadius:\"3px\", margin: \"3px\"}} onClick={()=>{\n                        setLoading(true)\n                        setCurrentWeek(currentWeek - 1)\n                        }}>Prev. Week</button>\n                    <button className={\"schedule-card\"} style={{background: \"lightsteelblue\",color:\"white\",outline:\"none\", border:\"none\", borderRadius:\"3px\", margin: \"3px\"}} onClick={()=>{\n                        setLoading(true)\n                        setCurrentWeek(currentWeek + 1)}}>Next Week</button>\n                    </div>\n            </div>\n            {/* <div style={{display:\"grid\", gridTemplateColumns: \"20% 80%\", gridTemplateRows: \"1.5% 98.5%\"}}> */}\n                <div style={{gridColumnStart:\"2\",gridColumnEnd:\"3\",gridRowStart:\"2\",gridRowEnd:\"3\",display:\"grid\", gridTemplateColumns: \"4% 96%\", gridTemplateRows: \"8.5% 91%% .5%\", margin:\"20px\", border:\"2px solid #f9f9f9\", backgroundColor:\"white\",borderRadius:\"7px\",boxShadow: \"rgba(0,0,0,0.1) 0 0 5px\",gridGap: \"1px\"}}>\n                <div style={{gridColumnStart:\"2\",gridColumnEnd:\"3\",gridRowStart:\"1\",gridRowEnd:\"2\", display:\"grid\", gridTemplateColumns: \"1fr 1fr 1fr 1fr 1fr\", gridTemplateRows: \"1fr\"}}>\n                    {weekDays.map((date,index)=>{\n                        return (\n                            <div  key={index} style={{display:\"flex\",alignItems:\"center\",justifyContent:\"center\",gridColumnStart:index + 1,gridColumnEnd:`${index+2}`,gridRowStart:\"1\",gridRowEnd:\"2\"}}>{date}</div>\n                        )\n                    })}\n                </div>\n                <div style={{gridColumnStart:\"1\",fontSize:\"12px\",color:\"grey\",gridColumnEnd:\"2\",gridRowStart:\"2\",gridRowEnd:\"3\", display:\"grid\", gridTemplateColumns: \"1fr\", gridTemplateRows: \"1fr repeat(11,2fr) 1fr\",height:\"100%\"}}>\n                    {hours.map((hour,index)=>{\n                        return (\n                            <div key={index} style={{display:\"flex\",alignItems:\"center\",justifyContent:\"center\",gridColumnStart:1,gridColumnEnd:2,gridRowStart:index + 2,gridRowEnd:index + 3}}>{hour}</div>\n                        )\n                    })}\n                </div>\n                <div style={{gridColumnStart:\"2\",gridColumnEnd:\"3\",gridRowStart:\"2\",gridRowEnd:\"3\"}}>\n                    {loading ? <div className={\"grid\"} style={{display:\"flex\",flexDirection:\"row\",width:\"100%\",height:\"599px\",alignItems:\"center\",justifyContent:\"center\",borderTop:\"24px solid #f9f9f9\",borderBottom:\"24px solid #f9f9f9\"}}></div> : <ProviderCalendar events={events} {...defaultProps}/>}\n                </div>\n                </div>\n                {/* </div> */}\n                </div>\n            </WeekContext.Provider>\n        </>\n    );\n}\nexport default DepSchedule;","import React, { useState, useEffect} from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport ProviderCalendar from '../components/DepCalendar'\nimport WeekContext from '../components/utils/WeekContext'\nimport '../styles/schedule.css'\nimport { Transition } from 'react-transition-group';\nimport {createNewEncounter} from '../store/encounters'\nimport Cookies from 'js-cookie'\n\n\n\nfunction DepSchedule(props) {\n\n    const defaultProps = {\n        className: \"layout\",\n        rowHeight: 9,\n        margin:[1.2,1],\n        onLayoutChange: function() {},\n        preventCollision: true,\n        verticalCompact: false,\n        cols: 5,\n      };\n    \n    const currentDate = new Date\n    const date = currentDate.getDate();\n\n    const getWeekNumber =(d)=>{\n    d = new Date(Date.UTC(d.getFullYear(), d.getMonth(), d.getDate()));\n    d.setUTCDate(d.getUTCDate() + 4 - (d.getUTCDay()||7));\n    const yearStart = new Date(Date.UTC(d.getUTCFullYear(),0,1));\n    const weekNo = Math.ceil(( ( (d - yearStart) / 86400000) + 1)/7);\n    return [d.getUTCFullYear(), weekNo];\n    }\n\n    const getDates = (startDate, stopDate) => {\n        const dateArray = []\n        let currentDate = startDate;\n        while (currentDate <= stopDate) {\n            dateArray.push(new Date (currentDate));\n            currentDate = addDays(currentDate, 1);\n        }\n        return dateArray;\n    }\n\n    const addDays = (currDate,days) => {\n        const date = new Date(currDate.valueOf());\n        date.setDate(date.getDate() + days);\n        return date;\n    }    \n\n    function getDateRangeOfWeek(weekNo){\n        const d1 = new Date();\n        const numOfdaysPastSinceLastMonday = eval(d1.getDay());\n        d1.setDate(d1.getDate() - numOfdaysPastSinceLastMonday);\n        const currWeek = getWeekNumber(d1)\n        const weekNoToday = currWeek[1]\n        const weeksInTheFuture = eval( weekNo - weekNoToday );\n        d1.setDate(d1.getDate() + eval( 7 * weeksInTheFuture ));\n        const rangeIsFrom = eval(d1.getMonth()+1) +\"/\" + d1.getDate() + \"/\" + d1.getFullYear();\n        const start = d1\n        const hey = new Date(start)\n        const startArray = [hey]\n        const dateArray = [...startArray]\n        d1.setDate(d1.getDate() + 6);\n        const rangeIsTo = eval(d1.getMonth()+1) +\"/\" + d1.getDate() + \"/\" + d1.getFullYear() ;\n        const end = d1\n        dateArray.push(end)\n        const weekRangeString =  rangeIsFrom + \" to \"+rangeIsTo;\n        return {range:weekRangeString,dates:dateArray}\n    };\n    const yearAndWeek = getWeekNumber(new Date())\n    const [currentWeek,setCurrentWeek] = useState(yearAndWeek[1])\n    console.log(\"CURRENT WEEK:\",currentWeek)\n    const currViewInfo = getDateRangeOfWeek(currentWeek)\n    const range = getDates(currViewInfo.dates[0],currViewInfo.dates[1])\n    const weekDates = range.map(date=>eval(date.getMonth()+1) +\"/\" + date.getDate())\n    const [weekDays,setWeekDays] = useState(weekDates.slice(1,6))\n    const encountersByWeek = useSelector(state=>state.encounters.by_week)\n    const [encounters,setEncounters] = useState(encountersByWeek[currentWeek])\n    const [loading,setLoading] = useState(false)\n    const dispatch = useDispatch()\n    const hours = [\"8am\",\"9am\",\"10am\",\"11am\",\"12pm\",\"1pm\",\"2pm\",\"3pm\",\"4pm\",\"5pm\",\"6pm\"]\n\n    \n    console.log(\"encounters\",encounters)\n\n\n    // const createEncountersByWeekObject=(encounters)=>{\n    //     const encsByWeek = {}\n    //     Object.values(encounters).forEach((encounter,index)=>{\n    //         const newEncounterCard = {x:\"\",y:\"\",w:1,h:\"\",i:`${index + 2}`,minW: 1,maxW:1,encounter,patient:encounter.patient,start:\"\",end:\"\"}\n    //         const dateStartArr = encounter.start.split(\" \")\n    //         console.log(encounter.start)\n    //         dateStartArr.pop()\n    //         const newStartDateNoTZ = dateStartArr.join(\" \")\n    //         const encStartTime = new Date(newStartDateNoTZ)\n    //         const encounterWeekNumber = getWeekNumber(encStartTime)\n    //         console.log(encounterWeekNumber)\n    //         const encWeek = encounterWeekNumber[1]\n    //         encsByWeek[encWeek] ? encsByWeek[encWeek][encounter.id]=encounter : encsByWeek[encWeek] = {[encounter.id]:encounter}\n    //     })\n    //     console.log(encsByWeek)\n    // }\n\n    // const [encountersByWeek, setEncountersByWeek] = useState(createEncountersByWeekObject(encounters))\n\n    const currentTimeIndicator = () => {\n        const currentTimeIndicatorCard = {x:\"\",y:\"\",h:1,w:1,static:true}\n        const currentTime = new Date()\n        const day = currentTime.getDay()\n        currentTimeIndicatorCard.x = day - 1\n        const hour = currentTime.getHours()\n        const minutes = currentTime.getMinutes()\n        currentTime.start = `${hour}:${minutes}`\n        const hourMark = ((4*(hour - 8)) + 2) + (minutes/15)\n        currentTimeIndicatorCard.y = hourMark\n        currentTimeIndicatorCard.x = day - 1\n        return currentTimeIndicatorCard\n    }\n    \n    const generateLayout=(encounters)=>{\n            const eventLayout = [{x:0,y:0,i:\"0\",h:2,w:5,static:true},{x:0,y:44,i:\"1\",h:2,w:5,static:true}]\n            if (!encounters) return eventLayout\n            Object.values(encounters).forEach((encounter,index)=>{\n            const newEncounterCard = {x:\"\",y:\"\",w:1,h:\"\",i:`${index + 2}`,minW: 1,maxW:1,encounter,patient:encounter.patient,start:\"\",end:\"\"}\n            const dateStartArr = encounter.start.split(\" \")\n            dateStartArr.pop()\n            const newStartDateNoTZ = dateStartArr.join(\" \")\n            const encStartTime = new Date(newStartDateNoTZ)\n            const day = encStartTime.getDay()\n            newEncounterCard.x = day - 1\n            const hour = encStartTime.getHours()\n            const minutes = encStartTime.getMinutes()\n            newEncounterCard.start = `${hour}:${minutes}`\n            console.log(hour,minutes)\n            const hourMark = ((4*(hour - 8)) + 2) + (minutes/15)\n            newEncounterCard.y = hourMark\n            const dateEndArr = encounter.end.split(\" \")\n            dateEndArr.pop()\n            const newEndDateNoTZ = dateEndArr.join(\" \")\n            const encEndTime = new Date(newEndDateNoTZ)\n            const endHour = encEndTime.getHours()\n            const endMinutes = encEndTime.getMinutes()\n            newEncounterCard.end = `${endHour}:${endMinutes}`\n            const endHourMark = ((4*(endHour - 8)) + 2) + (endMinutes/15)\n            newEncounterCard.h = endHourMark - hourMark\n            eventLayout.push(newEncounterCard)\n        })\n        return eventLayout\n    }\n    const [encountersToDisplay,setEncountersToDisplay] = useState(generateLayout(encounters))\n    const [oldLayout,setOldLayout] = useState(generateLayout(encounters))\n    const [events,setEvents] = useState(generateLayout(encounters))\n    const [encounterToCreate,setEncounterToCreate] = useState({})\n\n    useEffect(()=>{\n        const createEncounter = async (encounter) => {\n            const csrfToken = Cookies.get(\"XSRF-TOKEN\")\n            const jsonEncounter = JSON.stringify(encounter)\n            const res = await fetch('/api/encounters/create',{\n                method: \"POST\",\n                headers: {\n                    \"Content-Type\": \"application/json\",\n                    \"X-CSRF-TOKEN\": csrfToken,\n                },\n                body: jsonEncounter\n            })\n            const data = await res.json()\n            console.log(\"NEW ENCOUNTER: \",data)\n            // dispatch(loadDepartmentEncounters) \n            setEvents(generateLayout({...encounters,[data.encounter.id]:data.encounter}))\n            encountersByWeek[currentWeek][data.encounter.id] = data.encounter\n            setLoading(false)\n            }\n        if (encounterToCreate.start) createEncounter(encounterToCreate)\n    },[encounterToCreate])\n\n    const updateLayout=(e)=>{\n        const difference = oldLayout.filter((el,index)=>el.x !== e[index].x || el.y !== e[index].y || el.h !== e[index].h)\n        console.log(\"OLD LAYOUT\",oldLayout)\n        setOldLayout(encountersToDisplay)\n        console.log(difference)\n        const newEvents = [...encountersToDisplay]\n        newEvents.forEach((event,index) => {\n            event.x = e[index].x\n            event.y = e[index].y\n            event.w = e[index].w\n            event.h = e[index].h\n        })\n        setEvents(newEvents)\n      }\n\n      useEffect(()=>{\n        if (encountersByWeek) {\n            const currViewInfo = getDateRangeOfWeek(currentWeek - 1)\n            const range = getDates(currViewInfo.dates[0],currViewInfo.dates[1])\n            const weekDates = range.map(date=>eval(date.getMonth()+1) +\"/\" + date.getDate())\n            setWeekDays(weekDates.slice(1,6))\n            setEncounters(encountersByWeek[currentWeek])\n            setEncountersToDisplay(generateLayout(encountersByWeek[currentWeek]))\n            setEvents(generateLayout(encountersByWeek[currentWeek]))\n            setOldLayout(generateLayout(encountersByWeek[currentWeek]))\n            setLoading(false)\n        }\n    },[currentWeek,encountersByWeek])\n    \n    return (\n        <>\n            <WeekContext.Provider value={{updateLayout,setEvents,setEncounterToCreate,setLoading}}>\n            <div className={\"provider-schedule\"}>\n            <div style={{display:\"flex\",flexDirection:\"row\",justifyContent:\"right\"}}>\n                    <div style={{display:\"flex\",flexDirection:\"row\", justifyContent:\"right\"}}>\n                    <button className={\"schedule-card\"} style={{background: \"lightsteelblue\", outline:\"none\", color:\"white\", border:\"none\", borderRadius:\"3px\", margin: \"3px\"}} onClick={()=>{\n                        setLoading(true)\n                        setCurrentWeek(currentWeek - 1)\n                        }}>Prev. Week</button>\n                    <button className={\"schedule-card\"} style={{background: \"lightsteelblue\",color:\"white\",outline:\"none\", border:\"none\", borderRadius:\"3px\", margin: \"3px\"}} onClick={()=>{\n                        setLoading(true)\n                        setCurrentWeek(currentWeek + 1)}}>Next Week</button>\n                    </div>\n            </div>\n            {/* <div style={{display:\"grid\", gridTemplateColumns: \"20% 80%\", gridTemplateRows: \"1.5% 98.5%\"}}> */}\n                <div style={{gridColumnStart:\"2\",gridColumnEnd:\"3\",gridRowStart:\"2\",gridRowEnd:\"3\",display:\"grid\", gridTemplateColumns: \"4% 96%\", gridTemplateRows: \"8.5% 91%% .5%\", margin:\"20px\", border:\"2px solid #f9f9f9\", backgroundColor:\"white\",borderRadius:\"7px\",boxShadow: \"rgba(0,0,0,0.1) 0 0 5px\",gridGap: \"1px\"}}>\n                <div style={{gridColumnStart:\"2\",gridColumnEnd:\"3\",gridRowStart:\"1\",gridRowEnd:\"2\", display:\"grid\", gridTemplateColumns: \"1fr 1fr 1fr 1fr 1fr\", gridTemplateRows: \"1fr\"}}>\n                    {weekDays.map((date,index)=>{\n                        return (\n                            <div  key={index} style={{display:\"flex\",alignItems:\"center\",justifyContent:\"center\",gridColumnStart:index + 1,gridColumnEnd:`${index+2}`,gridRowStart:\"1\",gridRowEnd:\"2\"}}>{date}</div>\n                        )\n                    })}\n                </div>\n                <div style={{gridColumnStart:\"1\",fontSize:\"12px\",color:\"grey\",gridColumnEnd:\"2\",gridRowStart:\"2\",gridRowEnd:\"3\", display:\"grid\", gridTemplateColumns: \"1fr\", gridTemplateRows: \"1fr repeat(11,2fr) 1fr\",height:\"100%\"}}>\n                    {hours.map((hour,index)=>{\n                        return (\n                            <div key={index} style={{display:\"flex\",alignItems:\"center\",justifyContent:\"center\",gridColumnStart:1,gridColumnEnd:2,gridRowStart:index + 2,gridRowEnd:index + 3}}>{hour}</div>\n                        )\n                    })}\n                </div>\n                <div style={{gridColumnStart:\"2\",gridColumnEnd:\"3\",gridRowStart:\"2\",gridRowEnd:\"3\"}}>\n                    {loading ? <div className={\"grid\"} style={{display:\"flex\",flexDirection:\"row\",width:\"100%\",height:\"599px\",alignItems:\"center\",justifyContent:\"center\",borderTop:\"24px solid #f9f9f9\",borderBottom:\"24px solid #f9f9f9\"}}></div> : <ProviderCalendar events={events} currentWeek={currentWeek} weekDays={weekDays} {...defaultProps}/>}\n                </div>\n                </div>\n                {/* </div> */}\n                </div>\n            </WeekContext.Provider>\n        </>\n    );\n}\nexport default DepSchedule;","import React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\n\nexport const ProtectedRoute = ({ component: Component, path, currentUserId, exact}) => {\n  return (\n    <Route path={path} exact={exact} render={(props) => (\n      currentUserId ? <Component {...props} currentUserId={currentUserId}/> : <Redirect to='/login' />\n    )} />\n  )\n}\n\nexport const AuthRoute = ({ component: Component, path, currentUserId, exact }) => {\n\n    return (\n        <Route\n          path={path}\n          exact={exact}\n          render={(props) =>\n            currentUserId ? <Redirect to={`/`} /> : <Component {...props } />\n        }\n        />\n    );\n};","import Cookies from 'js-cookie'\n\nconst SET_USER = 'auth/SET_USER'\nconst REMOVE_USER = 'auth/REMOVE_USER';\nconst SIGNUP = 'auth/SIGNUP';\nconst REGISTER_ERRORS = 'auth/REGISTER_ERRORS'\nconst CLEAR_ERRORS = 'auth/CLEAR_ERRORS'\n\nexport const login = (username, password) => async dispatch => {\n    if (!username || !password) {\n        return\n    }\n    const csrfToken = Cookies.get(\"XSRF-TOKEN\");\n    const res = await fetch('/api/session/', {\n        method: \"put\",\n        headers: {\n            \"Content-Type\": \"application/json\",\n            \"X-CSRF-TOKEN\": csrfToken,\n        },\n        body: JSON.stringify({ username, password })\n    });\n    const data = await res.json();\n    if (res.ok && !data[\"errors\"]) {\n        dispatch(setUser(data));\n        res.data = data\n    } else {\n        res.errors = data[\"errors\"]\n        dispatch(registerErrors(data[\"errors\"]))\n    }\n    return res;\n};\n\nexport const setUser = (user) =>{\n    return {\n        type: SET_USER,\n        user\n    }\n}\n\nexport const registerErrors = (errors) => {\n    return ({\n        type: REGISTER_ERRORS,\n        errors\n    })\n}\n\nexport const clearErrors = () => {\n    return ({\n        type: CLEAR_ERRORS,\n    })\n}\n\nexport const logout = () => async dispatch => {\n    const res = await fetch('/api/session/logout', {\n        method: \"POST\",\n        headers: {\n            \"Content-Type\": \"application/json\",\n        },\n    });\n\n    if (res.ok) {\n        dispatch(removeUser());\n    }\n\n    return res;\n}\n\nexport const removeUser = () => {\n    return {\n        type: REMOVE_USER\n    }\n}\n\nexport const signup = (username, email, password) => {\n    return async (dispatch) => {\n        if (!username || !password || !email) {\n            return;\n        }\n        const csrfToken = Cookies.get(\"XSRF-TOKEN\");\n        const res = await fetch('/api/session/', {\n            method: \"post\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n                \"X-CSRF-TOKEN\": csrfToken,\n            },\n            body: JSON.stringify({ username, email, password })\n        });\n        const data = await res.json();\n        if (res.ok && !data[\"errors\"]) {\n            console.log(\"data: \",data)\n            dispatch(setUser(data['user']));\n            res.data = data;\n        } else {\n            res.errors = data[\"errors\"]\n            dispatch(registerErrors(data[\"errors\"]))\n        }\n        return res;\n    };\n}\n\nexport default function authReducer(state = { user: { id: null } },action) {\n    const newState = Object.assign({},state);\n    const currentErrors = Object.assign({},state.errors)\n    switch (action.type){\n        case SET_USER:\n            newState.user = action.user\n            return newState\n        case REMOVE_USER:\n            return { user: { id: null } };\n        case REGISTER_ERRORS:\n            console.log(action.errors)\n            newState.errors = currentErrors\n            const errorIds = Object.keys(action.errors)\n            errorIds.forEach(errorId =>{\n                newState.errors[errorId] = action.errors[errorId]\n            })\n            console.log(newState)\n            return newState;\n        case CLEAR_ERRORS:\n            newState.errors = {}\n            return newState\n        default:\n            return state\n    }\n}","import React, { useEffect } from 'react';\nimport {useState} from 'react'\nimport {signup, registerErrors, clearErrors} from '../store/auth'\nimport { useDispatch, useSelector } from 'react-redux';\nimport { NavLink } from 'react-router-dom';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button'\nimport Divider from '@material-ui/core/Divider';\nimport '../styles/SignUpPage.css'\n\nconst useStylesSignUpTextField = makeStyles((theme) => ({\n  root: {\n    border: '2px solid #e2e2e1',\n    overflow: 'hidden',\n    paddingLeft: \"10px\",\n    paddingTop: \"4px\",\n    paddingBottom: \"4px\",\n    marginTop: \"14px\",\n    borderRadius: 4,\n    backgroundColor: '#fcfcfb',\n    transition: theme.transitions.create(['border-color', 'box-shadow']),\n    '&$focused': {\n      border: '2px solid rgb(94, 158, 214)',\n      backgroundColor: '#fff',\n      // boxShadow: `${fade(theme.palette.primary.main, 0.25)} 0 0 0 1px`,\n    },\n  },\n  focused: {},\n}));\n\nfunction SignUpTextField(props) {\n  const classes = useStylesSignUpTextField();\n  return <TextField InputProps={{ classes, disableUnderline: true }} {...props} />;\n}\n\nconst useStyles = makeStyles({\n    container: {\n        display: \"flex\",\n        flexDirection: \"column\",\n        alignItems: \"center\",\n        background: \"white\",\n        height: \"100%\",\n        padding: \"30px\",\n        boxShadow: \"rgba(0,0,0,0.1) 0 0 10px\"\n    },\n    TextField: {\n        margin: \"10px\"\n    },\n    logo: {\n      color: \"#2196f3\",\n      textDecoration: \"none\",\n      fontFamily: \"Brush Script MT\",\n      fontSize: \"80px\",\n      padding: \"0\",\n      margin: \"0\",\n  },\n    Button: {\n        backgroundColor: \"#92b2ff\",\n        color: \"white\",\n        marginTop: \"10px\",\n        textDecoration: \"none\",\n        '&:hover': {\n            backgroundColor: \"#abc4ff\",\n        }\n    },\n    logInButton: {\n        background: \"transparent\",\n        color: \"grey\",\n        border: \"1px solid grey\",\n        textTransform: \"none\",\n        fontSize: \"13px\",\n        margin: \"5px\"\n    }\n})\n//TODO: Validate unique username and email, validate confirm password === password\n\nfunction SignupPage() {\n  const classes = useStyles()\n  const dispatch = useDispatch()\n\n  const [username,setUsername] = useState(\"\")\n  const [password,setPassword] = useState(\"\")\n  const [confirmPassword,setConfirmPassword] = useState(\"\")\n  const [email,setEmail] = useState(\"\")\n  const [userToCreate,setUserToCreate] = useState({})\n  const [errors,setErrors] = useState([])\n  const authErrors = useSelector(state=>state.auth.errors)\n\n  useEffect(()=>{\n    dispatch(clearErrors())\n  },[dispatch])\n\n  useEffect(()=>{\n    const validateUser= async ()=>{\n        const username = userToCreate.username\n        const email = userToCreate.email\n        const password = userToCreate.password\n        await dispatch(signup(username,email,password))\n    }\n    if (userToCreate !== {}){\n        validateUser()\n    }\n  },[userToCreate, dispatch])\n\n  useEffect(()=>{\n    if (authErrors) setErrors(Object.values(authErrors))\n  }, [authErrors])\n\nconst handleSubmit = (e) => {\n    e.preventDefault()\n    if (!username){\n      dispatch(registerErrors({\"8\":\"please enter a username\"}))\n    }\n    if (!email){\n      dispatch(registerErrors({\"10\":\"please enter an email address\"}))\n    }\n    if (!password || !confirmPassword){\n      dispatch(registerErrors({\"11\":\"please enter a password and confirm it\"}))\n    }\n    if (!(password === confirmPassword)){\n      dispatch(registerErrors({\"9\":\"password fields do not match\"}))\n    }\n    if ((password === confirmPassword) && username && email){\n      setUserToCreate({username,email,password})\n    }\n}\n\n  const handleUsernameInput = (e) => {\n      setUsername(e.target.value)\n  }\n\n  const handleEmailInput = (e) => {\n    setEmail(e.target.value)\n  }\n\n  const handlePasswordInput = (e) => {\n    setPassword(e.target.value)\n  }\n\n  const handleConfirmPasswordInput = (e) => {\n      setConfirmPassword(e.target.value)\n  }\n\n  return (\n    <>\n      <div id=\"main-content-sign-up\">\n        <div style={{width:\"100%\", display:\"flex\", justifyContent: \"center\"}}>\n        <div style={{width:\"100%\", color: \"#ff6b6b\", display:\"flex\", justifyContent: \"center\", textDecoration: \"none\", fontFamily: \"Quicksand\", justifySelf: \"center\", fontSize: \"80px\"}}>Saga</div>\n        </div>\n      <Container fixed maxWidth=\"sm\" classes={{root: classes.container}}>\n        <h1 className=\"login-and-signup-header\">create your new account!</h1>\n        <Divider style={{width: \"100%\", margin: \"10px\"}}/>\n        <div style={{color:\"red\", display: \"flex\", flexDirection:\"column\", alignContent:\"center\"}}>\n          {errors ? errors.map((err,i)=>{\n          return(<p style={{marginTop:\"3px\", marginBottom:\"3px\"}} key={i}>{errors[i]}</p>)\n          }): \"\"}\n        </div>\n        <form className='signup-form' method=\"POST\" action=\"/api/session\" onSubmit={handleSubmit}>\n          <SignUpTextField InputLabelProps={{style: {color: \"grey\"}}} type=\"text\" size=\"medium\" placeholder=\"username\" name=\"username\" value={username} onChange={handleUsernameInput} />\n          <SignUpTextField InputLabelProps={{style: {color: \"grey\"}}} type=\"text\" size=\"medium\" placeholder=\"email\" name=\"email\" value={email} onChange={handleEmailInput} />\n          <SignUpTextField InputLabelProps={{style: {color: \"grey\"}}} type=\"password\" size=\"medium\" placeholder=\"password\" name=\"password\" value={password} onChange={handlePasswordInput} />\n          <SignUpTextField InputLabelProps={{style: {color: \"grey\"}}} style={{color:\"red\"}} type=\"password\" size=\"medium\" placeholder=\"confirm password\" name=\"confirmPassword\" value={confirmPassword} onChange={handleConfirmPasswordInput} />\n          <Button size=\"small\" classes={{ root: classes.Button }} type=\"submit\">Sign Up and Log In</Button>\n        </form>\n        <Divider style={{width: \"100%\", margin: \"24px\"}}/>\n        <NavLink id='login-navlink' to=\"/login\"><p id=\"signUpText\">Already have an account?  Log In</p></NavLink>\n      </Container>\n      </div>\n    </>\n  )\n}\n\nexport default SignupPage;\n","import { createContext } from 'react';\n\nconst ThemeContext = createContext();\n\nexport default ThemeContext;","import React, { useContext } from 'react';\nimport Button from '@material-ui/core/Button'\nimport ThemeContext from './utils/ThemeContext';\nimport Brightness4TwoToneIcon from '@material-ui/icons/Brightness4TwoTone';\n\n\nfunction DashboardComponent(props) {\n    const changeThemes = () =>{\n        if (themeContext.themes === \"light\") {\n          themeContext.setThemes(\"dark\")\n        } else if (themeContext.themes === \"dark\") {\n          themeContext.setThemes(\"light\")\n        }\n      }\n\n    const themeContext = useContext(ThemeContext)\n    return (\n        <>\n            <p>{props.activity.name}</p>\n            <div>\n            {themeContext.themes === \"light\" ? <Button onClick={changeThemes} size=\"small\" style={{outline:\"none\",backgroundColor: \"#7f53ac\",backgroundImage: \"linear-gradient(315deg, #7f53ac 0%, #647dee 74%)\",marginRight:\"30px\",color:\"white\",textTransform:\"none\",fontWeight:\"bolder\"}}><Brightness4TwoToneIcon style={{cursor:\"pointer\",color:\"#3badfb\"}}/></Button>\n            :\n            <Button onClick={changeThemes} size=\"small\" style={{outline:\"none\",background:\"linear-gradient(45deg, #FF8E53 30%, #FE6B8B 90%)\",marginRight:\"30px\",color:\"white\",textTransform:\"none\",fontWeight:\"bolder\"}}><Brightness4TwoToneIcon style={{cursor:\"pointer\",color:\"#f7b732\"}}/></Button>}\n          </div>\n        </>\n    );\n}\nexport default DashboardComponent;","import { Button } from '@material-ui/core'\nimport React, { useEffect, useState, useContext } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport {logout} from '../store/auth'\nimport DashboardComponent from '../components/DashboardComponent'\nimport ThemeContext from '../components/utils/ThemeContext';\nimport Brightness4TwoToneIcon from '@material-ui/icons/Brightness4TwoTone';\nimport json2mq from 'json2mq';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\nimport {Breakpoint} from 'react-socks'\nimport { openPatientCheckin, openPatientRegistration } from '../store/activities'\nimport HomeContext from '../components/utils/HomeContext'\n\nconst Dashboard=(props)=>{\n    const [loading,setLoading] = useState(true)\n    const [activities,setActivities] =useState([])\n    const dispatch = useDispatch()\n    const themeContext = useContext(ThemeContext)\n    const homeContext = useContext(HomeContext)\n\n    const handleLogOut = ()=> {\n        dispatch(logout())\n    }\n\n    const handleActivityClick=(name)=>{\n      console.log(name)\n      if (name===\"Patient Registration\") {\n        dispatch(openPatientRegistration())\n        homeContext.setSelectedTab(\"Patient Registration\")\n      } else if (name===\"Patient Check-in\") {\n        dispatch(openPatientCheckin())\n      }\n    }\n\n    function JavaScriptMedia() {\n    const matches = useMediaQuery(\n    json2mq({\n      minWidth: 600,\n    }),\n  );\n\n  return <span>{`{ minWidth: 600 } matches: ${matches}`}</span>;\n    }\n\n    const changeThemes = () =>{\n        if (themeContext.themes === \"light\") {\n          themeContext.setThemes(\"dark\")\n        } else if (themeContext.themes === \"dark\") {\n          themeContext.setThemes(\"light\")\n        }\n      }\n\n    const allActivities = useSelector(state=>state.activities)\n    useEffect(()=>{\n        if (allActivities.role_activities || allActivities.user_activities){\n            setActivities([...Object.values(allActivities.role_activities),...Object.values(allActivities.user_activities)])\n            setLoading(false)\n        }\n    },[allActivities])\n    if (loading) {\n        return (\n            <p>loading...</p>\n        )\n    }\n    return (\n        <>\n        <div style={{margin:\"20px\"}}>\n        <h1>Dashboard</h1>\n        <Button onClick={handleLogOut}>Log out</Button>\n            {activities.map(activity=>{\n              return (\n                <div style={{cursor:\"pointer\"}} onClick={(e)=>handleActivityClick(activity.name)}>{activity.name}</div>\n              )\n            })}\n        </div>\n        <div>\n            {themeContext.themes === \"light\" ? <Button onClick={changeThemes} size=\"small\" style={{outline:\"none\",backgroundColor: \"#7f53ac\",backgroundImage: \"linear-gradient(315deg, #7f53ac 0%, #647dee 74%)\",marginRight:\"30px\",color:\"white\",textTransform:\"none\",fontWeight:\"bolder\"}}><Brightness4TwoToneIcon style={{cursor:\"pointer\",color:\"#3badfb\"}}/></Button>\n            :\n            <Button onClick={changeThemes} size=\"small\" style={{outline:\"none\",background:\"linear-gradient(45deg, #FF8E53 30%, #FE6B8B 90%)\",marginRight:\"30px\",color:\"white\",textTransform:\"none\",fontWeight:\"bolder\"}}><Brightness4TwoToneIcon style={{cursor:\"pointer\",color:\"#f7b732\"}}/></Button>}\n        </div>\n        </>\n    )\n}\n\nexport default Dashboard","import React, { useEffect } from 'react';\nimport {useState} from 'react'\nimport {login, registerErrors, clearErrors} from '../store/auth'\nimport { useDispatch, useSelector } from 'react-redux';\nimport { NavLink } from 'react-router-dom';\nimport {withStyles,makeStyles} from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport TextField from '@material-ui/core/TextField';\nimport Divider from '@material-ui/core/Divider';\nimport Button from '@material-ui/core/Button'\nimport '../styles/LoginPage.css'\n\nconst useStylesLoginTextField = makeStyles((theme) => ({\n    root: {\n      border: '2px solid #e2e2e1',\n      overflow: 'hidden',\n      paddingLeft: \"10px\",\n      paddingTop: \"4px\",\n      paddingBottom: \"4px\",\n      marginTop: \"14px\",\n      borderRadius: 4,\n      backgroundColor: '#fcfcfb',\n      transition: theme.transitions.create(['border-color', 'box-shadow']),\n      '&$focused': {\n        border: '2px solid rgb(94, 158, 214)',\n        backgroundColor: '#fff',\n        // boxShadow: `${fade(theme.palette.primary.main, 0.25)} 0 0 0 1px`,\n      },\n    },\n    focused: {},\n  }));\n\n  function LoginTextField(props) {\n    const classes = useStylesLoginTextField();\n    return <TextField InputProps={{ classes, disableUnderline: true }} {...props} />;\n  }\n\nconst useStyles = makeStyles((theme)=> ({\n    container: {\n        display: \"flex\",\n        flexDirection: \"column\",\n        alignItems: \"center\",\n        background: \"white\",\n        height: \"100%\",\n        padding: \"30px\",\n        boxShadow: \"rgba(0,0,0,0.1) 0 0 10px\"\n    },\n    TextField: {\n        margin: \"10px\",\n        backgroundColor: \"#EDEFF0\",\n        '&:hover': {\n            backgroundColor: '#fff',\n          },\n    },\n    margin: {\n        margin: theme.spacing(1),\n    },\n    Button: {\n        marginTop: \"10px\",\n        backgroundColor: \"#92b2ff\",\n        color: \"white\",\n        '&:hover': {\n            backgroundColor: \"#abc4ff\",\n        }\n    },\n    signUpButton: {\n        background: \"transparent\",\n        color: \"grey\",\n        border: \"1px solid grey\",\n        textTransform: \"none\",\n        textDecoration: \"none\",\n        fontSize: \"13px\",\n        margin: \"5px\"\n    }\n}))\n\nconst ColorButton = withStyles((theme) => ({\n    root: {\n        color: \"white\",\n        paddingRight: \"10px\",\n        paddingLeft: \"10px\",\n        margin: \"4px\",\n        backgroundColor:\"grey\",\n        '&:hover': {\n            backgroundColor: \"#b1f3b1 !important\",\n        },\n    },\n}))(Button);\n\nfunction LoginPage() {\n    const classes = useStyles()\n    const dispatch = useDispatch()\n    // const currentUser = useSelector(state => state.auth.user)\n    const [username,setUsername] = useState(\"\")\n    const [password,setPassword] = useState(\"\")\n    const [errors,setErrors] = useState(\"\")\n    const authErrors = useSelector(state=>state.auth.errors)\n\n    useEffect(()=>{\n        dispatch(clearErrors())\n    },[dispatch])\n\n    useEffect(()=>{\n        if (authErrors) setErrors(Object.values(authErrors))\n    },[authErrors])\n\n\n    const handleSubmit = async (e) => {\n        e.preventDefault()\n        if (!username || !password) {\n            await dispatch(registerErrors({\"1\":\"Please enter a username and password\"}));\n        } else {\n            const res = await dispatch(login(username, password));\n            // console.log(res.errors);\n\n            if (res.errors){\n                await dispatch(registerErrors({\"1\":\"Incorrect username or password!\"}));\n            }\n            else{\n                document.location.reload();\n            }\n        }\n    }\n\n    const demoProviderLogin = async (e) => {\n        e.preventDefault();\n        await dispatch(login('DemoUser', 'password'));\n        document.location.reload();\n    }\n    const demoSchedulerLogin = async (e) => {\n        e.preventDefault();\n        await dispatch(login('Angelo', 'password'));\n        document.location.reload();\n    }\n\n    return (\n        <>\n            <div id=\"main-content-login\">\n                <div style={{width:\"100%\", display:\"flex\", justifyContent: \"center\"}}>\n                    <div style={{width:\"100%\", color: \"#ff6b6b\", display:\"flex\", justifyContent: \"center\", textDecoration: \"none\", fontFamily: \"Quicksand\", justifySelf: \"center\", fontSize: \"80px\"}}>Saga</div>\n                </div>\n                <Container fixed maxWidth=\"sm\"\n                classes={{root: classes.container}}>\n                    <h1 className=\"login-and-signup-header\">welcome back!</h1>\n                    <div style={{display: \"flex\", flexDirection: \"column\"}}>\n                        <ColorButton size=\"small\" onClick={demoProviderLogin}>Login As a Provider</ColorButton>\n                        <ColorButton size=\"small\" onClick={demoSchedulerLogin}>Login As a Scheduler</ColorButton>\n                    </div>\n                    <Divider style={{width: \"100%\", margin: \"10px\"}}/>\n                    <div style={{color:\"red\", display: \"flex\", flexDirection:\"column\"}}>\n                        {errors ? errors.map((err,i)=>{\n                        return(<p style={{marginTop:\"3px\", marginBottom:\"3px\"}} key={i}>{errors[i]}</p>)\n                        }): \"\"}\n                    </div>\n                    <form className='login-form' method=\"PUT\" action=\"/api/session\" onSubmit={handleSubmit}>\n                        <div id='login-form-fields' style={{width:\"100%\", display:\"flex\", flexDirection: \"column\"}}>\n                            <LoginTextField InputLabelProps={{style: {color: \"grey\"}}} type=\"text\" placeholder=\"username\" size=\"medium\" name=\"password\" value={username} onChange={e => setUsername(e.target.value)}/>\n                            <LoginTextField InputLabelProps={{style: {color: \"grey\"}}} type=\"password\" placeholder=\"password\" size=\"medium\" name=\"password\" value={password} onChange={e => setPassword(e.target.value)}/>\n                        </div>\n                        <Button size=\"small\" classes={{ root: classes.Button }} type=\"submit\">Log in</Button>\n                    </form>\n                    <Divider style={{width: \"100%\", margin: \"24px\"}}/>\n                    <NavLink id='signup-navlink' to=\"/signup\"><p className=\"is-white\" id=\"signUpText\">Don't have an account?  Sign Up</p></NavLink>\n                </Container>\n            </div>\n        </>\n\n    )\n\n}\n\nexport default LoginPage;\n","import React, { useContext, useEffect, useState } from 'react'\nimport { withStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport InboxIcon from '@material-ui/icons/MoveToInbox';\nimport DraftsIcon from '@material-ui/icons/Drafts';\nimport SendIcon from '@material-ui/icons/Send';\nimport { useDispatch, useSelector } from 'react-redux';\nimport HomeContext from './utils/HomeContext';\nimport {openDepartmentSchedule} from '../store/activities'\n\nconst StyledMenu = withStyles({\n    paper: {\n      border: '1px solid #d3d4d5',\n      outline:\"none\",\n    },\n  })((props) => (\n    <Menu\n      elevation={0}\n      getContentAnchorEl={null}\n      anchorOrigin={{\n        vertical: 'bottom',\n        horizontal: 'center',\n      }}\n      transformOrigin={{\n        vertical: 'top',\n        horizontal: 'center',\n      }}\n      {...props}\n    />\n  ));\n\n  const iconStyle = {\n    height: \"35px\",\n    width: \"35px\",\n  }\n\n  const StyledMenuItem = withStyles((theme) => ({\n    root: {\n      outline:\"none\",\n      '&:focus': {\n        backgroundColor: \"grey\",\n        '& .MuiListItemIcon-root, & .MuiListItemText-primary': {\n          color: theme.palette.common.white,\n        },\n      },\n    },\n  }))(MenuItem);\n\n  const ColorButton = withStyles((theme) => ({\n    root: {\n        color: \"white\",\n        paddingTop:\"0px\",\n        paddingBottom:\"0px\",\n        letterSpacing:\"1.8px\",\n        margin: \"4px\",\n        borderRadius:\"20px\",\n        paddingLeft:\"0px\",\n        outline:\"none\",\n        textDecoration:\"none\",\n        backgroundColor:\"darkgrey\",\n        '&:hover': {\n            backgroundColor: \"yellowgreen !important\",\n        },\n    },\n    }))(Button);\n\nconst ScheduleSelector = (props) => {\n    const [anchorEl, setAnchorEl] = useState(null);\n    const [departments,setDepartments] = useState([])\n    const [loading,setLoading] = useState(true)\n    const openTabs = useSelector(state=>state.activities.open_tabs)\n\n    const dispatch = useDispatch()\n    const homeContext = useContext(HomeContext)\n\n    const openSchedule=(department)=>{\n        setAnchorEl(null);\n        if (!openTabs.some(activity=>activity.name === `${department.name}`)) dispatch(openDepartmentSchedule(department))\n        homeContext.setSelectedTab(`${department.name}`)\n      }\n\n    const handleClick = (event) => {\n      setAnchorEl(event.currentTarget);\n    };\n\n    const handleClose = () => {\n      setAnchorEl(null);\n    };\n\n    useEffect(()=>{\n        const getDepartmentNames = async () => {\n            const response = await fetch('/api/departments/list')\n            const data = await response.json()\n            setDepartments(data.departments)\n            setLoading(false)\n        }\n        getDepartmentNames()\n    },[])\n\n    return (\n        <>\n            <div>\n                <ColorButton\n                  aria-controls=\"customized-menu\"\n                  aria-haspopup=\"true\"\n                  variant=\"contained\"\n                  color=\"primary\"\n                  onClick={handleClick}\n                >\n                 <img src=\"https://saga-health.s3-us-west-1.amazonaws.com/calendar-flat-2.svg\" style={{...iconStyle, marginRight:\"4px\" }}></img><span style={{textTransform:\"uppercase\",marginRight:\"3px\"}}>Dept. Schedules </span>\n                </ColorButton>\n                <StyledMenu\n                  id=\"customized-menu\"\n                  anchorEl={anchorEl}\n                  keepMounted\n                  open={Boolean(anchorEl)}\n                  onClose={handleClose}\n                >\n                  {departments.map((department)=>{ \n                      return (\n                      <StyledMenuItem onClick={(e)=>openSchedule(department)}>\n                        <ListItemText primary={department.name} />\n                    </StyledMenuItem>\n                )})}\n                </StyledMenu>\n            </div>\n        </>\n    )\n}\n\nexport default ScheduleSelector","import { createContext } from 'react';\n\nconst PatientSearchContext = createContext();\n\nexport default PatientSearchContext;","import React, { useContext, useEffect,useRef} from 'react';\nimport { makeStyles, withStyles} from '@material-ui/core/styles';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Divider from '@material-ui/core/Divider';\nimport ContactIcon from '@material-ui/icons/AccountCircleTwoTone';\nimport DraftsIcon from '@material-ui/icons/Drafts';\nimport PatientSearchContext from './utils/PatientSearchContext';\nimport Button from '@material-ui/core/Button'\nimport HomeContext from './utils/HomeContext';\nimport { useDispatch, useSelector } from 'react-redux';\nimport {openPatientChart} from '../store/activities'\nimport ThemeContext from './utils/ThemeContext';\n\nconst iconStyle = {\n  height: \"25px\",\n  width: \"25px\",\n}\n\nfunction useOutsideAlerter(ref,context) {\n  useEffect(() => {\n    /**\n     * Alert if clicked on outside of element\n     */\n    function handleClickOutside(event) {\n      if (ref.current && !ref.current.contains(event.target)) {\n        context.setPatientSearchTerm(\"\")\n        context.setDisplayPatientSearchResults(false)\n      }\n    }\n    // Bind the event listener\n    document.addEventListener(\"mousedown\", handleClickOutside);\n    return () => {\n      // Unbind the event listener on clean up\n      document.removeEventListener(\"mousedown\", handleClickOutside);\n    };\n  }, [ref]);\n}\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: '100%',\n    backgroundColor: theme.palette.background.paper,\n  },\n}));\n\nconst ColorButton = withStyles((theme) => ({\n  root: {\n      color: \"white\",\n      paddingRight: \"10px\",\n      paddingLeft: \"10px\",\n      outline: \"none\",\n      textDecoration:\"none\",\n      margin: \"4px\",\n      backgroundColor:\"grey\",\n      '&:hover': {\n          backgroundColor: \"#b1f3b1 !important\",\n      },\n  },\n}))(Button);\n\nexport default function PatientSearchResults(props) {\n  const classes = useStyles();\n  const context = useContext(PatientSearchContext)\n  const homeContext = useContext(HomeContext)\n  const themeContext = useContext(ThemeContext)\n  const dispatch = useDispatch()\n  const openTabs = useSelector(state=>state.activities.open_tabs)\n  \n  const handleListItemClick = (event, index) => {\n    // context.setSelectedIndex(index);\n    // context.setSelectedPatient(props.patientSearchResults[index])\n  };\n\n  const openChart=(patient)=>{\n    context.setDisplayPatientSearchResults(false)\n    context.setPatientSearchTerm(\"\")\n    if (!openTabs.some(activity=>activity.name === `${patient.lastName}, ${patient.firstName}`)) dispatch(openPatientChart(patient.id))\n    homeContext.setSelectedTab(`${patient.lastName}, ${patient.firstName}`,patient)\n  }\n\n  const wrapperRef = useRef(null);\n    useOutsideAlerter(wrapperRef,context);\n\n  return (\n      <List ref={wrapperRef} component=\"nav\" style={{backgroundColor:themeContext.themes === \"dark\" ? \"#444444\" : \"white\",position:\"absolute\",zIndex:10}}>\n        {props.patientSearchResults.map((patient,index) => {\n          return(<ListItem\n              button\n              // selected={context.selectedIndex === index}\n              style={{display:\"flex\",flexDirection:\"row\",justifyContent:\"space-between\",color:themeContext.themes === \"dark\" ? \"white\" : \"black\",backgroundColor:themeContext.themes === \"dark\" ? \"#444444\" : \"white\"}}\n            >\n              <div style={{display:\"flex\",flexDirection:\"row\",alignItems:\"center\"}}>\n                  <img style={{...iconStyle}} src=\"https://saga-health.s3-us-west-1.amazonaws.com/folder-open-flat.svg\"/>\n                <div style={{marginLeft:\"4px\",marginRight:\"4px\"}}>{patient.firstName + \" \" + patient.lastName}</div>\n              </div>\n              <div style={{display:\"flex\",flexDirection:\"row\", alignItems:\"center\"}}>\n              <div style={{color:themeContext.themes === \"dark\" ? \"grey\" : \"grey\"}}>DOB: <span style={{color:\"black\"}}>{`${patient.dob.split(\" \")[1]} ${patient.dob.split(\" \")[2]} ${patient.dob.split(\" \")[3]}`}</span></div>\n              <ColorButton size=\"small\" onClick={()=>{openChart(patient)}}>Open Chart</ColorButton>\n              </div>\n            </ListItem>)})}\n      </List>\n  );\n}","import React, {useState,useEffect, useContext,useRef} from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { NavLink,Link, Redirect } from 'react-router-dom';\nimport { AppBar, Toolbar, Box, IconButton, Avatar, Typography, Button } from '@material-ui/core';\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\nimport { logout } from '../store/auth';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem'\nimport {openTab} from '../store/activities'\nimport HomeContext from '../components/utils/HomeContext'\nimport ScheduleTwoToneIcon from '@material-ui/icons/ScheduleTwoTone';\nimport BorderColorTwoToneIcon from '@material-ui/icons/BorderColorTwoTone';\nimport DashboardTwoToneIcon from '@material-ui/icons/DashboardTwoTone';\nimport CalendarTodayIcon from '@material-ui/icons/CalendarToday';\nimport SearchIcon from '@material-ui/icons/Search';\nimport ThemeContext from './utils/ThemeContext';\nimport Brightness4Icon from '@material-ui/icons/Brightness4';\nimport Brightness3Icon from '@material-ui/icons/Brightness3';\nimport Brightness4TwoToneIcon from '@material-ui/icons/Brightness4TwoTone';\nimport ScheduleSelector from './ScheduleSelector';\nimport { deepOrange, deepPurple } from '@material-ui/core/colors';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Modal from '@material-ui/core/Modal';\nimport Backdrop from '@material-ui/core/Backdrop';\nimport Fade from '@material-ui/core/Fade';\nimport PhotoCamera from '@material-ui/icons/PhotoCamera';\nimport InputBase from '@material-ui/core/InputBase';\nimport {Breakpoint} from 'react-socks'\nimport PatientSearchResults from '../components/PatientSearchResults';\nimport { fade} from '@material-ui/core/styles';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport PatientSearchContext from './utils/PatientSearchContext'\n\nconst StyledMenu = withStyles({\n  paper: {\n    border: '1px solid #d3d4d5',\n  },\n})((props) => (\n  <Menu\n    elevation={0}\n    getContentAnchorEl={null}\n    anchorOrigin={{\n      vertical: 'bottom',\n      horizontal: 'center',\n    }}\n    transformOrigin={{\n      vertical: 'top',\n      horizontal: 'center',\n    }}\n    {...props}\n  />\n));\n\nconst StyledMenuItem = withStyles((theme) => ({\n  root: {\n    '&:focus': {\n      backgroundColor: theme.palette.primary.main,\n      '& .MuiListItemIcon-root, & .MuiListItemText-primary': {\n        color: theme.palette.common.white,\n      },\n    },\n  },\n}))(MenuItem);\n\nconst useStyles = makeStyles((theme) => ({\n  title: {\n    flexGrow: 1,\n    display: 'none',\n    [theme.breakpoints.up('sm')]: {\n      display: 'block',\n    },\n  },\n  search: {\n    position: 'relative',\n    borderRadius: theme.shape.borderRadius,\n    backgroundColor: fade(theme.palette.common.white, 0.15),\n    '&:hover': {\n      backgroundColor: fade(theme.palette.common.white, 0.25),\n    },\n    marginLeft: 0,\n    width: '100%',\n    [theme.breakpoints.up('sm')]: {\n      marginLeft: theme.spacing(1),\n      width: 'auto',\n    },\n  },\n  searchIcon: {\n    padding: theme.spacing(0, 2),\n    height: '100%',\n    position: 'absolute',\n    pointerEvents: 'none',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  inputRoot: {\n    color: 'inherit',\n  },\n  mobileInputInput: {\n    padding: theme.spacing(1, 1, 1, 0),\n    // vertical padding + font size from searchIcon\n    paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\n    transition: theme.transitions.create('width'),\n    width: '100%',\n    [theme.breakpoints.up('sm')]: {\n      width: '5ch',\n      '&:focus': {\n        width: '10ch',\n      },\n    },\n  },\n  inputInput: {\n    padding: theme.spacing(1, 1, 1, 0),\n    // vertical padding + font size from searchIcon\n    paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\n    transition: theme.transitions.create('width'),\n    width: '100%',\n    [theme.breakpoints.up('sm')]: {\n      width: '40ch',\n      '&:focus': {\n        width: '50ch',\n      },\n    },\n  },\n  appbar: {\n    backgroundColor: \"rgb(255, 107, 107)\",\n  },\n  toolbar: {\n    display: \"flex\",\n    justifyContent: \"space-between\",\n    padding: \"0px\",\n    height: \"15px\"\n  },\n  left: {\n    display: 'flex',\n  },\n  orange: {\n    color: theme.palette.getContrastText(deepOrange[500]),\n    backgroundColor: deepOrange[500],\n  },\n  purple: {\n    color: theme.palette.getContrastText(deepPurple[500]),\n    backgroundColor: deepPurple[500],\n  },\n  logo: {\n    color: \"white\",\n    textDecoration: \"none\",\n    fontSize: \"18px\",\n    margin: \"2px\",\n  },\n  icon: {\n    fontSize: \"28px\",\n    color: \"rgba(255,255,255,.5)\",\n    opacity: \"white\",\n  },\n  button: {\n    color: \"white\",\n    backgroundColor: \"hsla(0,0%,100%,.3)\",\n    borderRadius: \"5px\",\n    padding: \"5px\",\n    margin: \"2px\",\n  },\n  modal: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  paper: {\n    border: '2px solid #000',\n    boxShadow: theme.shadows[5],\n    padding: theme.spacing(2, 4, 3),},\n  \n  input: {\n      display: 'none',\n    },\n\n}));\n\nconst iconStyle = {\n  height: \"17px\",\n  width: \"17px\",\n  marginRight:\"3px\",\n}\n\nconst buttonStyle = {\n  display: \"flex\",\n  flexDirection:\"row\",\n  padding: \"2px\",\n  alignItems: \"center\",\n  color: \"grey\",\n  borderRadius: \"2px\",\n  margin: \"2px\",\n  cursor: \"pointer\"\n}\n\n\nconst Navbar = (props) => {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const [currentUser,setCurrentUser] = useState(props.currentUser)\n  const [user,setUser] = useState(currentUser)\n  const context = useContext(HomeContext)\n  const [loading,setLoading] = useState(true)\n  const [activities,setActivities] =useState([])\n  const [anchorEl, setAnchorEl] = React.useState(null);\n  const [modalOpen,setModalOpen] = useState(false)\n  const [loadingPicture,setLoadingPicture] = useState(false)\n  const [patientSearchTerm,setPatientSearchTerm] = useState(\"\")\n  const [patientSearchResults,setPatientSearchResults]=useState([])\n  const [displayPatientSearchResults,setDisplayPatientSearchResults]=useState(false)\n\n  const form = useRef(null)\n\n\n  const handleModalOpen = () => {\n    handleClose();\n    setModalOpen(true);\n  };\n\n  const handleModalClose = () => {\n    setModalOpen(false);\n  };\n\n  const handleClick = (event) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n  const openTabs = useSelector(state=>state.activities.open_tabs)\n  const handleLogOut = ()=> {\n      dispatch(logout())\n  }\n  const themeContext = useContext(ThemeContext)\n  const allActivities = useSelector(state=>state.activities)\n  useEffect(()=>{\n      if (allActivities.role_activities || allActivities.user_activities){\n          setActivities([...Object.values(allActivities.role_activities),...Object.values(allActivities.user_activities)])\n          setLoading(false)\n      }\n  },[allActivities])\n\n  const openActivity=(activity)=>{\n      if (!openTabs.includes(activity)){\n        dispatch(openTab(activity))\n      }\n      context.setSelectedTab(activity.name,activity.patient)\n  }\n\n  const handleProfileFormSubmit=(e)=>{\n    e.preventDefault()\n  }\n  const changeThemes = () =>{\n    if (themeContext.themes === \"light\") {\n      themeContext.setThemes(\"dark\")\n    } else if (themeContext.themes === \"dark\") {\n      themeContext.setThemes(\"light\")\n    }\n  }\n\n  useEffect(()=>{\n    const searchPatients= async (searchTerm) => {\n        const response = await fetch(`/api/patients/search/${searchTerm}`)\n        const data = await response.json()\n        setPatientSearchResults(data.patients)\n        return;\n    }\n    if (patientSearchTerm.length > 0) {\n        setDisplayPatientSearchResults(true)\n        searchPatients(patientSearchTerm)\n    }\n  },[patientSearchTerm])\n\n  // useEffect(()=>{\n  //   if (currentUser.picture) {\n  //     setUser(currentUser)\n  //   }\n  //   setLoading(false)\n  // },[currentUser])\n\n  const submit = e => {\n    setLoadingPicture(true)\n    e.preventDefault()\n    const data = new FormData(form.current)\n    fetch(`/api/users/upload-photo/${currentUser.id}`, {\n    method: 'POST',\n    body: data,\n    })\n    .then(res => res.json())\n    .then(json => {\n    console.log(json)\n    setCurrentUser(json.user)\n    setLoadingPicture(false)\n    })\n  }\n  return (\n    <>\n    <PatientSearchContext.Provider value={{setDisplayPatientSearchResults,setPatientSearchTerm}}>\n      <Breakpoint medium up>\n      <div style={{flexGrow:1}}>\n        <AppBar position=\"static\">\n        <Toolbar style={{minHeight:\"0px\",backgroundColor:themeContext.themes === \"dark\" ? \"#444444\" : \"cornflowerblue\"}}>\n            <div style={{display:\"flex\", alignItems:\"center\", flexDirection:\"row\",justifyContent:\"space-between\",width:\"100%\"}}>\n            <div style={{display:\"flex\",flexDirection:\"row\"}}>\n            <div onClick={()=>context.setSelectedTab(\"dashboard\")} style={{display:\"flex\", alignItems:\"center\", cursor:\"pointer\"}} >\n              <p className={classes.logo} style={{textDecoration:\"none\", fontStyle: \"italic\", fontWeight:\"bold\"}}>Saga</p>\n            </div>\n            </div>\n            <div style={{display:\"flex\", alignItems:\"center\", flexDirection:\"row\"}}>\n            <div className={classes.search}>\n            <div className={classes.searchIcon}>\n              <SearchIcon />\n            </div>\n            <InputBase\n              placeholder=\"Patient Search…\"\n              classes={{\n                root: classes.inputRoot,\n                input: classes.inputInput,\n              }}\n              inputProps={{ 'aria-label': 'search' }}\n              value={patientSearchTerm} \n              onChange={(e)=>setPatientSearchTerm(e.target.value)}\n            />\n            <div style={{background: themeContext.themes === \"dark\" ? \"#444444\" : \"white\"}}>\n              {displayPatientSearchResults ? patientSearchResults.length ? <PatientSearchResults patientSearchResults={patientSearchResults}/> : <></> : <></>}\n            </div>\n          </div>\n              <ScheduleSelector/>\n            {themeContext.themes === \"light\" ? <IconButton onClick={changeThemes} style={{height:\"38px\",width:\"38px\",boxShadow:\"0px 3px 1px -2px rgba(0,0,0,0.2), 0px 2px 2px 0px rgba(0,0,0,0.14), 0px 1px 5px 0px rgba(0,0,0,0.12)\",outline:\"none\",background:\"linear-gradient(45deg, #FF8E53 30%, #FE6B8B 90%)\",color:\"white\",marginRight:\"4px\",textTransform:\"none\",fontWeight:\"bolder\"}}><Brightness4TwoToneIcon style={{cursor:\"pointer\",color:\"#f7b732\"}}/></IconButton>\n            :\n            <IconButton onClick={changeThemes} style={{height:\"38px\",width:\"38px\",outline:\"none\",backgroundColor: \"#7f53ac\",backgroundImage: \"linear-gradient(315deg, #7f53ac 0%, #647dee 74%)\",marginRight:\"4px\",color:\"white\",textTransform:\"none\",fontWeight:\"bolder\"}}><Brightness4TwoToneIcon style={{cursor:\"pointer\",color:\"#3badfb\"}}/></IconButton>}\n\n            {currentUser.picture ? <Avatar onClick={handleClick} style={{boxShadow:\"0px 3px 1px -2px rgba(0,0,0,0.2), 0px 2px 2px 0px rgba(0,0,0,0.14), 0px 1px 5px 0px rgba(0,0,0,0.12)\"}} src={`${currentUser.picture}`}/> \n            : currentUser.provider ? <Avatar onClick={handleClick} style={{marginRight:\"30px\",boxShadow:\"0px 3px 1px -2px rgba(0,0,0,0.2), 0px 2px 2px 0px rgba(0,0,0,0.14), 0px 1px 5px 0px rgba(0,0,0,0.12)\"}} className={classes.purple}>{currentUser.provider.first_name[0]+currentUser.provider.last_name[0]}</Avatar> : <Avatar onClick={handleClick} style={{marginRight:\"30px\",boxShadow:\"0px 3px 1px -2px rgba(0,0,0,0.2), 0px 2px 2px 0px rgba(0,0,0,0.14), 0px 1px 5px 0px rgba(0,0,0,0.12)\"}} className={classes.purple}>{currentUser.username[0]}</Avatar>}\n              <StyledMenu\n                id=\"customized-menu\"\n                anchorEl={anchorEl}\n                keepMounted\n                open={Boolean(anchorEl)}\n                onClose={handleClose}\n              >\n                <StyledMenuItem onClick={handleModalOpen}> \n                  <ListItemText primary=\"Profile\" />\n                </StyledMenuItem>\n                <StyledMenuItem>\n                  <ListItemText primary=\"Settings\" />\n                </StyledMenuItem>\n                <StyledMenuItem>\n                  <ListItemText primary=\"Logout\" />\n                </StyledMenuItem>\n            </StyledMenu>\n            </div>\n            </div>\n            </Toolbar>\n          </AppBar>\n        </div>\n      <div>\n      <Modal\n        aria-labelledby=\"transition-modal-title\"\n        aria-describedby=\"transition-modal-description\"\n        className={classes.modal}\n        open={modalOpen}\n        onClose={handleModalClose}\n        closeAfterTransition\n        BackdropComponent={Backdrop}\n        BackdropProps={{\n          timeout: 500,\n        }}\n      >\n        <Fade in={modalOpen}>\n        <div className={classes.paper} style={{outline:\"none\",width:\"100%\",color:themeContext.themes === \"dark\" ? \"white\" : \"#444444\",maxWidth:\"600px\",backgroundColor:themeContext.themes === \"dark\" ? \"#444444\" : \"white\"}}>\n        <div style={{outline:\"none\",width:\"100%\",maxWidth:\"600px\",display:\"flex\",flexDirection:\"column\"}}>\n        <h3>{currentUser.first_name + \" \" + currentUser.last_name}</h3>\n          \n            <form onSubmit={(e)=>{handleProfileFormSubmit(e)}}>\n              <div style={{display:\"flex\",flexDirection:\"row\"}}>\n                <div>\n                <form ref={form} onSubmit={submit}>\n                  <div style={{display:\"flex\",flexDirection:\"column\",justifyContent:\"center\"}}>\n                    <div className={\"circular--portrait\"} style={{justifyContent:\"center\",alignSelf:\"center\", marginTop:\"5px\",boxShadow: themeContext.themes === \"dark\" ? \"\" : \"rgba(0, 0, 0, 0.2) 0px 12px 28px 0px, rgba(0, 0, 0, 0.9) 0px 2px 4px 0px, rgba(255, 255, 255, 0.05) 0px 0px 0px 1px inset\"}}>\n                      {loadingPicture ? <img id=\"user-photo\" src=\"https://media.giphy.com/media/xTk9ZvMnbIiIew7IpW/giphy.gif\"/> : <img id=\"user-photo\" src={currentUser.picture ? currentUser.picture : \"\"}/>}\n                    </div>\n                    <div style={{display:\"flex\",flexDirection:\"column\",justifyContent:\"center\",width:\"100%\",margin:\"5px\"}}>\n                    <input\n                    accept=\"image/*\"\n                    className={classes.input}\n                    id=\"contained-button-file\"\n                    multiple\n                    type=\"file\"\n                    name=\"file\"\n                  />\n                  <label htmlFor=\"contained-button-file\">\n                    <Button variant=\"contained\" color=\"primary\" component=\"span\" fullWidth>\n                      Select New\n                      <PhotoCamera style={{marginLeft:\"4px\"}}></PhotoCamera>\n                    </Button>\n                  </label>\n                    {/* <input type=\"file\" name=\"file\"></input> */}\n                  <Button style={{backgroundColor:\"cornflowerblue\",color:\"white\"}} type=\"submit\" name=\"Sign Up\" >Update Photo</Button>\n                  </div>\n                  </div>\n                </form>\n                </div>\n                <div style={{display:\"flex\",flexDirection:\"column\",width:\"100%\",margin:\"20px\"}}>\n                  <div style={{display:\"flex\",flexDirection:\"row\",justifyContent:\"space-between\",fontSize:\"18px\"}}>username: <div></div><div>{currentUser.username}</div></div>\n                  <div style={{display:\"flex\",flexDirection:\"row\",justifyContent:\"space-between\",fontSize:\"18px\"}}>email: <div></div><div>{currentUser.email}</div></div>\n                </div>\n              </div>\n            </form>\n          </div>\n          </div>\n        </Fade>\n      </Modal>\n    </div>\n    </Breakpoint>\n    <Breakpoint small down>\n    <div style={{flexGrow:1}}>\n        <AppBar position=\"static\">\n        <Toolbar style={{minHeight:\"0px\",backgroundColor:themeContext.themes === \"dark\" ? \"#444444\" : \"cornflowerblue\"}}>\n            <div style={{display:\"flex\", alignItems:\"center\", flexDirection:\"row\",justifyContent:\"space-between\",width:\"100%\"}}>\n            <div style={{display:\"flex\",flexDirection:\"row\"}}>\n            <div onClick={()=>context.setSelectedTab(\"dashboard\")} style={{display:\"flex\", alignItems:\"center\", cursor:\"pointer\"}} >\n              <p className={classes.logo} style={{textDecoration:\"none\", fontStyle: \"italic\", fontWeight:\"bold\"}}>Saga</p>\n            </div>\n            </div>\n            <div style={{display:\"flex\", alignItems:\"center\", flexDirection:\"row\"}}>\n            <div className={classes.search}>\n            <div className={classes.searchIcon}>\n              <SearchIcon />\n            </div>\n            <InputBase\n              placeholder=\"Patient Search…\"\n              classes={{\n                root: classes.inputRoot,\n                input: classes.mobileInputInput,\n              }}\n              inputProps={{ 'aria-label': 'search' }}\n              value={patientSearchTerm} \n              onChange={(e)=>setPatientSearchTerm(e.target.value)}\n            />\n            <div style={{background: themeContext.themes === \"dark\" ? \"#444444\" : \"white\"}}>\n              {displayPatientSearchResults ? patientSearchResults.length ? <PatientSearchResults patientSearchResults={patientSearchResults}/> : <></> : <></>}\n            </div>\n          </div>\n            {/* {themeContext.themes === \"light\" ? <IconButton onClick={changeThemes} style={{height:\"38px\",width:\"38px\",boxShadow:\"0px 3px 1px -2px rgba(0,0,0,0.2), 0px 2px 2px 0px rgba(0,0,0,0.14), 0px 1px 5px 0px rgba(0,0,0,0.12)\",outline:\"none\",background:\"linear-gradient(45deg, #FF8E53 30%, #FE6B8B 90%)\",color:\"white\",marginRight:\"4px\",textTransform:\"none\",fontWeight:\"bolder\"}}><Brightness4TwoToneIcon style={{cursor:\"pointer\",color:\"#f7b732\"}}/></IconButton>\n            :\n            <IconButton onClick={changeThemes} style={{height:\"38px\",width:\"38px\",outline:\"none\",backgroundColor: \"#7f53ac\",backgroundImage: \"linear-gradient(315deg, #7f53ac 0%, #647dee 74%)\",marginRight:\"4px\",color:\"white\",textTransform:\"none\",fontWeight:\"bolder\"}}><Brightness4TwoToneIcon style={{cursor:\"pointer\",color:\"#3badfb\"}}/></IconButton>} */}\n\n            {currentUser.picture ? <Avatar onClick={handleClick} style={{boxShadow:\"0px 3px 1px -2px rgba(0,0,0,0.2), 0px 2px 2px 0px rgba(0,0,0,0.14), 0px 1px 5px 0px rgba(0,0,0,0.12)\"}} src={`${currentUser.picture}`}/> \n            : <Avatar onClick={handleClick} style={{marginRight:\"30px\",boxShadow:\"0px 3px 1px -2px rgba(0,0,0,0.2), 0px 2px 2px 0px rgba(0,0,0,0.14), 0px 1px 5px 0px rgba(0,0,0,0.12)\"}} className={classes.purple}>{currentUser.first_name[0]+currentUser.last_name[0]}</Avatar>}\n              <StyledMenu\n                id=\"customized-menu\"\n                anchorEl={anchorEl}\n                keepMounted\n                open={Boolean(anchorEl)}\n                onClose={handleClose}\n              >\n                <StyledMenuItem onClick={handleModalOpen}> \n                  <ListItemText primary=\"Profile\" />\n                </StyledMenuItem>\n                <StyledMenuItem>\n                  <ListItemText primary=\"Settings\" />\n                </StyledMenuItem>\n                <StyledMenuItem>\n                  <ListItemText primary=\"Logout\" />\n                </StyledMenuItem>\n            </StyledMenu>\n            </div>\n            </div>\n            </Toolbar>\n          </AppBar>\n        </div>\n      <div>\n      <Modal\n        aria-labelledby=\"transition-modal-title\"\n        aria-describedby=\"transition-modal-description\"\n        className={classes.modal}\n        open={modalOpen}\n        onClose={handleModalClose}\n        closeAfterTransition\n        BackdropComponent={Backdrop}\n        BackdropProps={{\n          timeout: 500,\n        }}\n      >\n        <Fade in={modalOpen}>\n        <div className={classes.paper} style={{outline:\"none\",width:\"100%\",color:themeContext.themes === \"dark\" ? \"white\" : \"#444444\",maxWidth:\"600px\",backgroundColor:themeContext.themes === \"dark\" ? \"#444444\" : \"white\"}}>\n        <div style={{outline:\"none\",width:\"100%\",maxWidth:\"600px\",display:\"flex\",flexDirection:\"column\"}}>\n        <h3>{currentUser.first_name + \" \" + currentUser.last_name}</h3>\n          \n            <form onSubmit={(e)=>{handleProfileFormSubmit(e)}}>\n              <div style={{display:\"flex\",flexDirection:\"row\"}}>\n                <div>\n                <form ref={form} onSubmit={submit}>\n                  <div style={{display:\"flex\",flexDirection:\"column\",justifyContent:\"center\"}}>\n                    <div className={\"circular--portrait\"} style={{justifyContent:\"center\",alignSelf:\"center\", marginTop:\"5px\",boxShadow: themeContext.themes === \"dark\" ? \"\" : \"rgba(0, 0, 0, 0.2) 0px 12px 28px 0px, rgba(0, 0, 0, 0.9) 0px 2px 4px 0px, rgba(255, 255, 255, 0.05) 0px 0px 0px 1px inset\"}}>\n                      {loadingPicture ? <img id=\"user-photo\" src=\"https://media.giphy.com/media/xTk9ZvMnbIiIew7IpW/giphy.gif\"/> : <img id=\"user-photo\" src={currentUser.picture ? currentUser.picture : \"\"}/>}\n                    </div>\n                    <div style={{display:\"flex\",flexDirection:\"column\",justifyContent:\"center\",width:\"100%\",margin:\"5px\"}}>\n                    <input\n                    accept=\"image/*\"\n                    className={classes.input}\n                    id=\"contained-button-file\"\n                    multiple\n                    type=\"file\"\n                    name=\"file\"\n                  />\n                  <label htmlFor=\"contained-button-file\">\n                    <Button variant=\"contained\" color=\"primary\" component=\"span\" fullWidth>\n                      Select New\n                      <PhotoCamera style={{marginLeft:\"4px\"}}></PhotoCamera>\n                    </Button>\n                  </label>\n                    {/* <input type=\"file\" name=\"file\"></input> */}\n                  <Button style={{backgroundColor:\"cornflowerblue\",color:\"white\"}} type=\"submit\" name=\"Sign Up\" >Update Photo</Button>\n                  </div>\n                  </div>\n                </form>\n                </div>\n                <div style={{display:\"flex\",flexDirection:\"column\",width:\"100%\",margin:\"20px\"}}>\n                  <div style={{display:\"flex\",flexDirection:\"row\",justifyContent:\"space-between\",fontSize:\"18px\"}}>username: <div></div><div>{currentUser.username}</div></div>\n                  <div style={{display:\"flex\",flexDirection:\"row\",justifyContent:\"space-between\",fontSize:\"18px\"}}>email: <div></div><div>{currentUser.email}</div></div>\n                </div>\n              </div>\n            </form>\n          </div>\n          </div>\n        </Fade>\n      </Modal>\n    </div>\n    </Breakpoint>\n    </PatientSearchContext.Provider>\n    </>\n  )\n}\n\nexport default Navbar;\n","import React, { useContext } from 'react';\nimport {openPatientChart} from '../store/activities'\nimport { useDispatch, useSelector } from 'react-redux';\nimport HomeContext from './utils/HomeContext';\n\nfunction PatientPreviewCard(props) { \n    const context = useContext(HomeContext)\n    const dispatch = useDispatch()\n    const openTabs = useSelector(state=>state.activities.open_tabs)\n\n    const openChart=(id)=>{\n        if (!openTabs.some(activity=>activity.name === `${props.patient.lastName}, ${props.patient.firstName}`)) dispatch(openPatientChart(id))\n        context.setSelectedTab(`${props.patient.lastName}, ${props.patient.firstName}`,props.patient)\n    }\n\n    return (\n        <>\n            <div style={{display:\"flex\",flexDirection:\"column\",borderRadius:\"7px\",margin:\"10px\"}}>\n                <div><h3>{props.patient.firstName} {props.patient.lastName}</h3></div>\n                <button onClick={()=>openChart(props.patient.id)}>Open Chart</button>\n            </div>\n        </>\n    );\n}\n\nexport default PatientPreviewCard;","import React, { useEffect, useState } from 'react';\nimport {withStyles,makeStyles} from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport PatientPreviewCard from '../components/PatientPreviewCard'\nimport PatientSearchContext from '../components/utils/PatientSearchContext';\nimport PatientSearchResults from '../components/PatientSearchResults';\nimport CloseIcon from '@material-ui/icons/Close';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport IconButton from '@material-ui/core/IconButton';\n\n\nconst useStylesLoginTextField = makeStyles((theme) => ({\n    root: {\n      border: '2px solid #e2e2e1',\n      overflow: 'hidden',\n      paddingLeft: \"10px\",\n      paddingTop: \"4px\",\n      paddingBottom: \"4px\",\n      marginTop: \"14px\",\n      borderRadius: 4,\n      backgroundColor: '#fcfcfb',\n      transition: theme.transitions.create(['border-color', 'box-shadow']),\n      '&$focused': {\n        border: '2px solid rgb(94, 158, 214)',\n        backgroundColor: '#fff',\n        // boxShadow: `${fade(theme.palette.primary.main, 0.25)} 0 0 0 1px`,\n      },\n    },\n    focused: {},\n  }));\n\n  function LoginTextField(props) {\n    const classes = useStylesLoginTextField();\n    return <TextField InputProps={{ classes, disableUnderline: true }} {...props} />;\n  }\n\nconst resultStyle = {\n    display:\"flex\",\n    cursor: \"pointer\",\n    margin: \"4px\",\n    background:\"white\",\n    fontSize:\"14px\",\n    '&:hover': {\n        backgroundColor: \"#abc4ff\",\n    }\n}\n\nfunction PlaceOrders(props) {\n    const [patientSearchTerm,setPatientSearchTerm] = useState(\"\")\n    const [patientSearchResults,setPatientSearchResults]=useState([])\n    const [selectedPatient,setSelectedPatient] = useState({})\n    const [selectedIndex, setSelectedIndex] = useState();\n    useEffect(()=>{\n        const searchPatients= async (searchTerm) => {\n            const response = await fetch(`/api/patients/search/${searchTerm}`)\n            const data = await response.json()\n            setPatientSearchResults(data.patients)\n            return;\n        }\n        if (patientSearchTerm.length > 0) {\n            searchPatients(patientSearchTerm)\n\n        }\n    },[patientSearchTerm])\n\n    return (\n        <>  \n            <PatientSearchContext.Provider value={{setSelectedIndex,selectedIndex,setSelectedPatient}}>\n            <div style={{display:\"flex\",flexDirection:\"row\", margin:\"20px\"}}>\n                <div style={{display:\"flex\",flexDirection:\"column\",width:\"50%\"}}>\n                    <h1>Select a patient to place orders for:</h1>\n                    <div style={{display:\"flex\",flexDirection:\"column\"}}>\n                        <LoginTextField placeholder=\"enter a patient's name, id, or mrn\" value={patientSearchTerm} onChange={(e)=>setPatientSearchTerm(e.target.value)}\n                        endAdornment={\n                            <InputAdornment position=\"end\">\n                              <IconButton>\n                                <CloseIcon />\n                              </IconButton>\n                            </InputAdornment>\n                          }></LoginTextField>\n                        <div>\n                            <PatientSearchResults patientSearchResults={patientSearchResults}/>\n                        </div>\n                    </div>\n                </div>\n                <div>\n                    {!selectedPatient.firstName ? \"\" : <PatientPreviewCard patient={selectedPatient}/>}\n                </div>\n            </div>\n            </PatientSearchContext.Provider>\n        </>\n    );\n}\nexport default PlaceOrders;","import React, { useContext } from 'react';\nimport HomeContext from './utils/HomeContext';\nimport ScheduleTwoToneIcon from '@material-ui/icons/ScheduleTwoTone';\nimport BorderColorTwoToneIcon from '@material-ui/icons/BorderColorTwoTone';\nimport DashboardTwoToneIcon from '@material-ui/icons/DashboardTwoTone';\nimport CalendarTodayIcon from '@material-ui/icons/CalendarToday';\nimport SearchIcon from '@material-ui/icons/Search';\nimport ContactIcon from '@material-ui/icons/AccountCircleTwoTone';\nimport ThemeContext from './utils/ThemeContext'\nimport CloseIcon from '@material-ui/icons/Close'\nimport { IconButton } from '@material-ui/core';\nimport { closeTab } from '../store/activities';\nimport { useDispatch } from 'react-redux';\n\nconst iconStyle = {\n    height: \"25px\",\n    width: \"25px\",\n  }\n\nconst closeTabStyle = {\n    color:\"grey\",\n    height: \"20px\",\n    width: \"20px\",\n  }\n\nconst tabStyle = {\n    display: \"inline-block\",\n    transition: \"all .2s ease-in-out\",\n    '&:hover': {\n        transform: \"scale(1.5)\"\n    }\n}\n\n\nfunction ActivityTab(props) {\n    const context = useContext(HomeContext)\n    const themeContext = useContext(ThemeContext)\n    const dispatch = useDispatch()\n\n    const closeThisTab = (e, activityName) => {\n        e.stopPropagation()\n        dispatch(closeTab(activityName,props.index))\n        console.log(\"openTabs context var after deletion: \",context.openTabs)\n        context.setSelectedTab(context.openTabs[props.index - 1].name,context.openTabs[props.index - 1].patient)\n    }\n\n    return (\n        <>\n            <li key={props.activity.name} style={{...tabStyle}} onClick={(e)=>{context.setSelectedTab(props.activity.name,props.activity.patient)}} \n                className={`${props.activity.name === context.selectedTabName ? \"active\" : \"\"}`} \n                style={{zIndex: props.activity.name === context.selectedTabName ? 1 : \"\",\n                background: props.activity.name === context.selectedTabName ? themeContext.themes === \"light\" ? \"white\" : \"#444444\" : themeContext.themes === \"light\" ? \"rgb(221,224,230)\" : \"#212121\",\n                borderTopLeftRadius: props.activity.name === context.selectedTabName ? \"10px\" : \"\",\n                borderTopRightRadius: props.activity.name === context.selectedTabName ? \"10px\" : \"\"\n            }}\n                > \n            <a style={{display:\"flex\", alignItems:\"center\", zIndex:3}}>{props.activity.name === \"dashboard\" ? <img src=\"https://saga-health.s3-us-west-1.amazonaws.com/icons8-dashboard-layout-100.png\" style={{...iconStyle}}></img> : <></> }\n            {props.activity.name === \"My Schedule\" ? <img src=\"https://saga-health.s3-us-west-1.amazonaws.com/binocular-flat.svg\" style={{...iconStyle }}></img> : <></>}\n            {props.activity.name === \"Place Orders\" ? <img src=\"https://saga-health.s3-us-west-1.amazonaws.com/binocular-flat.svg\" style={{...iconStyle }}></img> : <></>}\n            {props.activity.department ? <img src=\"https://saga-health.s3-us-west-1.amazonaws.com/calendar-flat-2.svg\" style={{...iconStyle }}></img> : <></>}\n            {props.activity.name === \"Patient Search\" ? <img src=\"https://saga-health.s3-us-west-1.amazonaws.com/binocular-flat.svg\" style={{...iconStyle }}></img> : <></>}\n            {props.activity.patient ? <img src=\"https://saga-health.s3-us-west-1.amazonaws.com/folder-open-flat.svg\" style={{...iconStyle }}></img> : <></>}\n            {props.activity.name === \"dashboard\" ? \"\" : <p style={{margin:0,cursor:\"default\", marginLeft:\"4px\",color: themeContext.themes === \"light\" ? \"black\" : \"white\" }}>{props.activity.name}</p>} \n            {props.activity.name === \"dashboard\" ? \"\" : \n            <IconButton style={{height:\"19px\",width:\"19px\",color:\"lightgrey\",outline:\"none\"}} onClick={(e)=>closeThisTab(e,props.activity.name)}>\n            <CloseIcon style={{height:\"19px\",width:\"19px\",color:themeContext.themes === \"dark\" ? \"white\" : \"grey\"}} ></CloseIcon>\n            </IconButton>}\n            </a>\n            </li>\n        </>\n    );\n}\nexport default ActivityTab;","import React, { useContext, useEffect, useState } from 'react';\nimport {withStyles,makeStyles} from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport PatientPreviewCard from '../components/PatientPreviewCard'\nimport PatientSearchContext from '../components/utils/PatientSearchContext';\nimport PatientSearchResults from '../components/PatientSearchResults';\nimport CloseIcon from '@material-ui/icons/Close';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport IconButton from '@material-ui/core/IconButton';\nimport ThemeContext from '../components/utils/ThemeContext';\n\n\nconst useStylesLoginTextField = makeStyles((theme) => ({\n    root: {\n      border: '2px solid #e2e2e1',\n      overflow: 'hidden',\n      paddingLeft: \"10px\",\n      paddingTop: \"4px\",\n      paddingBottom: \"4px\",\n      marginTop: \"14px\",\n      borderRadius: 4,\n      backgroundColor: '#fcfcfb',\n      transition: theme.transitions.create(['border-color', 'box-shadow']),\n      '&$focused': {\n        border: '2px solid rgb(94, 158, 214)',\n        backgroundColor: '#fff',\n        // boxShadow: `${fade(theme.palette.primary.main, 0.25)} 0 0 0 1px`,\n      },\n    },\n    focused: {},\n  }));\n\n  function LoginTextField(props) {\n    const classes = useStylesLoginTextField();\n    return <TextField InputProps={{ classes, disableUnderline: true }} {...props} />;\n  }\n\nconst resultStyle = {\n    display:\"flex\",\n    cursor: \"pointer\",\n    margin: \"4px\",\n    background:\"white\",\n    fontSize:\"14px\",\n    '&:hover': {\n        backgroundColor: \"#abc4ff\",\n    }\n}\n\nfunction PatientSearch(props) {\n    const [patientSearchTerm,setPatientSearchTerm] = useState(\"\")\n    const [patientSearchResults,setPatientSearchResults]=useState([])\n    const [selectedPatient,setSelectedPatient] = useState({})\n    const [selectedIndex, setSelectedIndex] = useState();\n    const themeContext = useContext(ThemeContext)\n\n    useEffect(()=>{\n        const searchPatients= async (searchTerm) => {\n            const response = await fetch(`/api/patients/search/${searchTerm}`)\n            const data = await response.json()\n            setPatientSearchResults(data.patients)\n            return;\n        }\n        if (patientSearchTerm.length > 0) {\n            searchPatients(patientSearchTerm)\n\n        }\n    },[patientSearchTerm])\n\n    return (\n        <>  \n            \n            <div style={{display:\"flex\",flexDirection:\"row\", margin:\"20px\"}}>\n                <div style={{display:\"flex\",flexDirection:\"column\",width:\"50%\"}}>\n                    <h1 style={{color: themeContext.themes === \"dark\" ? \"white\" : \"black\"}}>Patient Search</h1>\n                    <div style={{display:\"flex\",flexDirection:\"column\"}}>\n                        <LoginTextField  placeholder=\"enter a patient's name, id, or mrn\" value={patientSearchTerm} onChange={(e)=>setPatientSearchTerm(e.target.value)}></LoginTextField>\n                        <div style={{background: themeContext.themes === \"dark\" ? \"#444444\" : \"white\"}}>\n                            {patientSearchResults.length ? <PatientSearchResults patientSearchResults={patientSearchResults}/> : <></>}\n                        </div>\n                    </div>\n                </div>\n                <div>\n                    {!selectedPatient.firstName ? \"\" : <PatientPreviewCard patient={selectedPatient}/>}\n                </div>\n            </div>\n        </>\n    );\n}\nexport default PatientSearch;","import React, { useContext } from 'react';\nimport {openPatientChart} from '../store/activities'\nimport { useDispatch, useSelector } from 'react-redux';\nimport HomeContext from './utils/HomeContext';\nimport ExitToAppTwoToneIcon from '@material-ui/icons/ExitToAppTwoTone';\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Divider from '@material-ui/core/Divider';\nimport HomeTwoToneIcon from '@material-ui/icons/HomeTwoTone';\nimport HomeIcon from '@material-ui/icons/Home';\nimport StayCurrentPortraitIcon from '@material-ui/icons/StayCurrentPortrait';\nimport StayPrimaryPortraitTwoToneIcon from '@material-ui/icons/StayPrimaryPortraitTwoTone';\nimport BusinessTwoToneIcon from '@material-ui/icons/BusinessTwoTone';\nimport ThemeContext from './utils/ThemeContext';\n\n\nconst ColorButton = withStyles((theme) => ({\n    root: {\n        color: \"#ed4959\",\n        paddingRight: \"10px\",\n        paddingLeft: \"10px\",\n        margin: \"4px\",\n        backgroundColor:\"white\",\n        border:\"1px solid #ed4959\",\n        '&:hover': {\n            backgroundColor: \"#ed4959 !important\",\n            color:\"white\",\n            border:\"1px solid #ed4959\",\n        },\n    },\n    }))(Button);\n\nfunction PatientPhoneNumbers(props) { \n    console.log(props)\n    const context = useContext(HomeContext)\n    const dispatch = useDispatch()\n    const openTabs = useSelector(state=>state.activities.open_tabs)\n    const themeContext = useContext(ThemeContext)\n    return (\n        <>\n                <div style={{display:\"flex\",marginBottom:\"4px\",flexDirection:\"column\",borderRadius:\"8px\",width:\"fit-content\",padding:\"4px\",marginRight:\"9px\"}}>\n                    <div style={{display:\"flex\",flexDirection:\"column\",padding:\"4px\",backgroundColor:\"transparent\", width:\"fit-content\",borderRadius:\"8px\"}}>\n                        <div style={{margin:\"4px\"}}><img src=\"https://saga-health.s3-us-west-1.amazonaws.com/home-flat.svg\" style={{height:\"34px\",width:\"34px\"}}></img> <span style={{fontWeight:\"bolder\",color:themeContext.themes === \"dark\" ? \"white\" : \"grey\"}}>{props.patient.home_phone}</span></div>\n                        <div style={{margin:\"4px\"}}><img src=\"https://saga-health.s3-us-west-1.amazonaws.com/iphone-flat.svg\" style={{height:\"34px\",width:\"34px\"}}></img> <span style={{fontWeight:\"bolder\",color:themeContext.themes === \"dark\" ? \"white\" : \"grey\"}}>{props.patient.mobile_phone}</span></div>\n                        <div style={{margin:\"4px\"}}><img src=\"https://saga-health.s3-us-west-1.amazonaws.com/bank-flat.svg\" style={{height:\"34px\",width:\"34px\"}}></img> <span style={{fontWeight:\"bolder\",color:themeContext.themes === \"dark\" ? \"white\" : \"grey\"}}>{props.patient.work_phone}</span></div>\n                    </div>\n                </div>\n        </>\n    );\n}\n\nexport default PatientPhoneNumbers;","import React, { useContext } from 'react';\nimport {openPatientChart} from '../store/activities'\nimport { useDispatch, useSelector } from 'react-redux';\nimport HomeContext from './utils/HomeContext';\nimport ExitToAppTwoToneIcon from '@material-ui/icons/ExitToAppTwoTone';\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Divider from '@material-ui/core/Divider';\nimport HomeTwoToneIcon from '@material-ui/icons/HomeTwoTone';\nimport HomeIcon from '@material-ui/icons/Home';\nimport StayCurrentPortraitIcon from '@material-ui/icons/StayCurrentPortrait';\nimport StayPrimaryPortraitTwoToneIcon from '@material-ui/icons/StayPrimaryPortraitTwoTone';\nimport BusinessTwoToneIcon from '@material-ui/icons/BusinessTwoTone';\nimport ContactMailIcon from '@material-ui/icons/ContactMail';\nimport ContactMailTwoToneIcon from '@material-ui/icons/ContactMailTwoTone';\nimport ThemeContext from './utils/ThemeContext';\n\nconst imageStyle={\n    hieght:\"32px\",\n    width:\"32px\"\n  }\n\nconst ColorButton = withStyles((theme) => ({\n    root: {\n        color: \"#ed4959\",\n        paddingRight: \"10px\",\n        paddingLeft: \"10px\",\n        margin: \"4px\",\n        backgroundColor:\"white\",\n        border:\"1px solid #ed4959\",\n        '&:hover': {\n            backgroundColor: \"#ed4959 !important\",\n            color:\"white\",\n            border:\"1px solid #ed4959\",\n        },\n    },\n    }))(Button);\n\nfunction PatientAddressInfo(props) { \n    console.log(props)\n    const context = useContext(HomeContext)\n    const dispatch = useDispatch()\n    const openTabs = useSelector(state=>state.activities.open_tabs)\n\n    const themeContext = useContext(ThemeContext)\n    return (\n        <>\n                <div style={{display:\"flex\",flexDirection:\"column\",borderRadius:\"9px\", width:\"fit-content\"}}>\n                    <div style={{display:\"flex\",flexDirection:\"row\",padding:\"4px\",backgroundColor:themeContext.themes === \"dark\" ? \"#444444\" : \"white\", width:\"fit-content\",borderRadius:\"8px\"}}>\n                        <img style={{...imageStyle}}src=\"https://saga-health.s3-us-west-1.amazonaws.com/mail-flat.svg\"></img>\n                        <div style={{display:\"flex\",flexDirection:\"column\", width:\"fit-content\", marginLeft:\"9px\"}}>\n                        { props.patient.address_line_one ? <span> <span style={{fontWeight:\"bolder\",color:themeContext.themes === \"dark\" ? \"white\" : \"grey\"}}>{props.patient.address_line_one}</span> </span> : \"\"}\n                        { props.patient.address_line_two ? <span> <span style={{fontWeight:\"bolder\",color:themeContext.themes === \"dark\" ? \"white\" : \"grey\"}}>{props.patient.address_line_two}</span> </span> : \"\"}\n                        { props.patient.address_line_three ? <span> <span style={{fontWeight:\"bolder\",color:themeContext.themes === \"dark\" ? \"white\" : \"grey\"}}>{props.patient.address_line_three}</span> </span> : \"\"}\n                        { props.patient.address_city ? <span><span style={{fontWeight:\"bolder\",color:themeContext.themes === \"dark\" ? \"white\" : \"grey\"}}>{props.patient.address_city}, {props.patient.address_state}</span> <span style={{fontWeight:\"bolder\",color:themeContext.themes === \"dark\" ? \"white\" : \"grey\"}}>{props.patient.address_zip}</span> </span> : \"\"}\n                        </div>\n                    </div>\n                </div>\n        </>\n    );\n}\n\nexport default PatientAddressInfo;","import React, { useContext } from 'react';\nimport {openPatientChart} from '../store/activities'\nimport { useDispatch, useSelector } from 'react-redux';\nimport HomeContext from './utils/HomeContext';\nimport FavoriteIcon from '@material-ui/icons/FavoriteTwoTone';\nimport FitnessCenterIcon from '@material-ui/icons/FitnessCenter';\nimport PatientPhoneNumbers from './PatientPhoneNumbers';\nimport PatientAddressInfo from './PatientAddressInfo';\nimport ThemeContext from './utils/ThemeContext';\n\n\nconst imageStyle={\n    hieght:\"32px\",\n    width:\"32px\"\n  }\n\nconst tabStyle = {\n'&:hover': {\n  background:\"grey\"\n}\n\n}\n\nconst metricContainerStyle={\ndisplay:\"flex\",\nflexDirection:\"column\",\nfontSize:\"18px\",\nborderRadius:\"9px\",\ncursor:\"pointer\",\nfontWeight:\"strong\",\npadding:\"4px\",\nalignItems:\"center\",\n'&:hover': {\n    boxShadow: \"rgba(60, 64, 67, 0.3) 0px 1px 2px 0px, rgba(60, 64, 67, 0.15) 0px 1px 3px 1px\"\n}\n}\n\nconst metricTextStyle ={\nmarginLeft:\"6px\"\n}\n\nfunction BasicPatientAttributes(props) { \n    const context = useContext(HomeContext)\n    const dispatch = useDispatch()\n    const themeContext = useContext(ThemeContext)\n    const openTabs = useSelector(state=>state.activities.open_tabs)\n\n    const openChart=(id)=>{\n        if (!openTabs.some(activity=>activity.name === `${props.patient.lastName}, ${props.patient.firstName}`)) dispatch(openPatientChart(id))\n        context.setSelectedTab(`${props.patient.lastName}, ${props.patient.firstName}`,props.patient)\n    }\n\n    return (\n        <>\n            <div style={{display:\"flex\",flexDirection:\"column\",borderRadius:\"7px\", marginTop:\"15px\",backgroundColor:themeContext.themes === \"dark\" ? \"#444444\" : \"white\",marginLeft:\"16px\", marginRight:\"15px\",padding:\"8px\",\n            // boxShadow: themeContext.themes === \"light\" ? \"rgb(204, 219, 232) 3px 3px 6px 0px inset, rgba(255, 255, 255, 0.5) -3px -3px 6px 1px inset\" : \"rgba(0, 0, 0, 0.07) 0px 1px 2px, rgba(0, 0, 0, 0.07) 0px 2px 4px, rgba(0, 0, 0, 0.07) 0px 4px 8px, rgba(0, 0, 0, 0.07) 0px 8px 16px, rgba(0, 0, 0, 0.07) 0px 16px 32px, rgba(0, 0, 0, 0.07) 0px 32px 64px\" \n            }}>\n            <div style={{display:\"flex\",flexDirection:\"column\",alignItems:\"center\"}}>\n                <div style={{display:\"flex\",flexDirection:\"column\"}}>\n                    {/* <div style={{display:\"flex\",flexDirection:\"row\",alignItems:\"center\"}} >\n                        <div style={{...metricContainerStyle,color:themeContext.themes === \"dark\" ? \"white\" : \"grey\",backgroundColor:themeContext.themes === \"dark\" ? \"#444444\" : \"white\"}}>\n                            {props.patient.sex === \"female\" ? \n                                <img style={{height:\"29px\"}} src=\"https://saga-health.s3-us-west-1.amazonaws.com/female-removebg-preview.png\"></img>\n                                :\n                                <img style={{...imageStyle}} src=\"https://saga-health.s3-us-west-1.amazonaws.com/_Pngtree_vector_male_sign_icon_4184181-removebg-preview.png\"></img>}\n                        </div>\n                        <div style={{borderRadius:\"9px\",display:\"flex\",color: themeContext.themes === \"dark\" ? \"white\" : \"grey\",fontSize:\"20px\",zIndex:\"3\",padding:\"9px\",boxShadow: \"rgba(0, 0, 0, 0.09) 0px 1px 2px 0px\"}}>[ she / her ]</div>\n                        <div style={{...metricContainerStyle,marginTop:\"4px\",color:themeContext.themes === \"dark\" ? \"white\" : \"grey\",backgroundColor:themeContext.themes === \"dark\" ? \"#444444\" : \"white\"}}>\n                            {props.patient.smoker ? \n                                <img style={{...imageStyle}} src=\"https://saga-health.s3-us-west-1.amazonaws.com/images-removebg-preview.png\"></img>\n                                :\n                                <img style={{ width: \"50px\", height: \"35px\"}}  src=\"https://saga-health.s3-us-west-1.amazonaws.com/no-smoking-smoke-cigarette-forbidden-habit-cigar-tobacco-nicotine-prohibition-toxic-unhealthy_1--removebg-preview.png\"></img>\n                            }\n                        </div>\n                    </div> */}\n                    <div style={{...metricContainerStyle,color:themeContext.themes === \"dark\" ? \"white\" : \"grey\",backgroundColor:themeContext.themes === \"dark\" ? \"#444444\" : \"white\",flexDirection:\"row\"}}>\n                        {/* <img style={{...imageStyle}} src=\"https://saga-health.s3-us-west-1.amazonaws.com/heart-removebg-preview.png\"></img> */}\n                        <FavoriteIcon style={{height: \"32px\", width:\"32px\", color:\"red\"}}/>\n                        <span style={{...metricTextStyle}}>{props.patient.beats_per_minute}<span style={{fontSize:\"18px\", color:\"lightgrey\"}}> bpm</span></span>\n                    </div>\n                </div>\n                <div style={{display:\"flex\",flexDirection:\"row\",alignItems:\"center\"}}>\n                    <div style={{...metricContainerStyle,color:themeContext.themes === \"dark\" ? \"white\" : \"grey\",backgroundColor:themeContext.themes === \"dark\" ? \"#444444\" : \"white\"}}>\n                        {/* <img style={{...imageStyle}} src=\"https://saga-health.s3-us-west-1.amazonaws.com/113553339-weights-concept-vector-linear-icon-isolated-on-transparent-background-weights-concept-transparency-c-removebg-preview.png\"></img> */}\n                        <FitnessCenterIcon style={{height: \"32px\", width:\"32px\", color:\"rgb(85, 177, 250)\"}} />\n                        <span style={{...metricTextStyle}}>{props.patient.weight}<span style={{fontSize:\"18px\", color:\"lightgrey\"}}>kgs</span></span>\n                    </div>\n                    <div style={{...metricContainerStyle,color:themeContext.themes === \"dark\" ? \"white\" : \"grey\",backgroundColor:themeContext.themes === \"dark\" ? \"#444444\" : \"white\"}}>\n                        <img style={{...imageStyle}} src=\"https://saga-health.s3-us-west-1.amazonaws.com/my-baby-page-height-38152201fffe401cf5b4a5c923b5ad80.png\"></img>\n                        <span style={{...metricTextStyle}}>{props.patient.height}</span>\n                    </div>\n                    <div style={{...metricContainerStyle,color:themeContext.themes === \"dark\" ? \"white\" : \"grey\",backgroundColor:themeContext.themes === \"dark\" ? \"#444444\" : \"white\"}}>\n                        <img style={{...imageStyle}} src=\"https://saga-health.s3-us-west-1.amazonaws.com/unnamed.png\"></img>\n                        <span style={{...metricTextStyle}}>{props.patient.bmi}</span>\n                    </div>\n                </div>\n                <div style={{display:\"flex\",flexDirection:\"column\",alignItems:\"center\",justifyContent:\"center\"}}>\n                    <PatientPhoneNumbers patient={props.patient}/>\n                    <PatientAddressInfo patient={props.patient}/>\n                </div>\n                </div>\n            </div>\n        </>\n    );\n}\n\nexport default BasicPatientAttributes;","import { createContext } from 'react';\n\nconst PatientChartContext = createContext();\n\nexport default PatientChartContext;","import React, { useContext,useState, useEffect } from 'react';\nimport {openPatientChart} from '../store/activities'\nimport { useDispatch, useSelector } from 'react-redux';\nimport HomeContext from './utils/HomeContext';\nimport ExitToAppTwoToneIcon from '@material-ui/icons/ExitToAppTwoTone';\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Divider from '@material-ui/core/Divider';\nimport { Grid, Container, Card, InputBase, TextField, CircularProgress, Input } from '@material-ui/core';\nimport ThemeContext from './utils/ThemeContext';\nimport FindInPageTwoToneIcon from '@material-ui/icons/FindInPageTwoTone';\nimport AddIcon from '@material-ui/icons/AddCircleTwoTone';\nimport IconButton from '@material-ui/core/IconButton';\nimport {createMedication} from '../store/current_patient'\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport PatientMedicationsList from './PatientMedicationsList';\nimport SearchIcon from '@material-ui/icons/Search';\nimport CloseIcon from '@material-ui/icons/Close';\nimport { green } from '@material-ui/core/colors';\nimport FormGroup from '@material-ui/core/FormGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport CheckBoxOutlineBlankIcon from '@material-ui/icons/CheckBoxOutlineBlank';\nimport CheckBoxIcon from '@material-ui/icons/CheckBox';\nimport Favorite from '@material-ui/icons/Favorite';\nimport FavoriteBorder from '@material-ui/icons/FavoriteBorder';\nimport Popover from '@material-ui/core/Popover';\nimport Typography from '@material-ui/core/Typography';\nimport TextareaAutosize from '@material-ui/core/TextareaAutosize';\nimport PatientChartContext from './utils/PatientChartContext';\n\nconst GreenCheckbox = withStyles({\n  root: {\n    color: green[400],\n    '&$checked': {\n      color: green[600],\n    },\n  },\n  checked: {},\n})((props) => <Checkbox color=\"default\" {...props} />);\n\n\nconst useStylesLoginTextField = makeStyles((theme) => ({\n    root: {\n      border: '2px solid #e2e2e1',\n      overflow: 'hidden',\n      paddingLeft: \"10px\",\n      paddingTop: \"4px\",\n      paddingBottom: \"4px\",\n      marginTop: \"14px\",\n      borderRadius: 4,\n      backgroundColor: '#fcfcfb',\n      transition: theme.transitions.create(['border-color', 'box-shadow']),\n      '&$focused': {\n        border: '2px solid rgb(94, 158, 214)',\n        backgroundColor: '#fff',\n        // boxShadow: `${fade(theme.palette.primary.main, 0.25)} 0 0 0 1px`,\n      },\n    },\n    focused: {},\n  }));\n\n  function LoginTextField(props) {\n    const classes = useStylesLoginTextField();\n    return <TextField InputProps={{ classes, disableUnderline: true }} {...props} />;\n  }\n\n  const useStyles = makeStyles((theme) => ({\n    popover: {\n      pointerEvents: 'none',\n    },\n    paper: {\n      padding: theme.spacing(1),\n    },\n  }));\n\n  const ColorButton = withStyles((theme) => ({\n    root: {\n        color: \"#ed4959\",\n        paddingRight: \"10px\",\n        paddingLeft: \"10px\",\n        margin: \"4px\",\n        backgroundColor:\"white\",\n        border:\"1px solid #ed4959\",\n        '&:hover': {\n            backgroundColor: \"#ed4959 !important\",\n            color:\"white\",\n            border:\"1px solid #ed4959\",\n        },\n    },\n    }))(Button);\n\nconst NewMedicationForm = (props) => {\n    const classes = useStyles();\n    const context = useContext(HomeContext)\n    const chartContext = useContext(PatientChartContext)\n    const dispatch = useDispatch()\n    const provider_id = useSelector(state=>state.auth.user.id)\n    const [medications,setMedications] = useState([])\n    const themeContext = useContext(ThemeContext)\n    const [dxSearchTerm,setDxSearchTerm] = useState(\"\")\n    const [dxSearchResults,setDxSearchResults]=useState([]);\n    const [dxPerformSearch,setDxPerformSearch]=useState(false)\n    const [searchingForMeds,setSearchingForMeds]=useState(false)\n    const [selectedMedicationIndex,setSelectedMedicationIndex]=useState()\n    const [displayMedicationQuestions,setDisplayMedicationQuestions] = useState(false)\n    const [newMedInstructions,setNewMedInstructions] = useState(\"\")\n    const [blueCheck,setBlueCheck] =useState(true)\n    const [yellowCheck,setYellowCheck] =useState(true)\n    const [greenCheck,setGreenCheck] =useState(true)\n    const [greenAnchorEl, setGreenAnchorEl] = React.useState(null);\n    const [displayImage,setDisplayImage] = useState(true)\n    const greenOpen = Boolean(greenAnchorEl);\n\n    const handleGreenPopoverOpen = (event) => {\n        // setGreenAnchorEl(event.currentTarget);\n      };\n    \n      const handleGreenPopoverClose = () => {\n        setGreenAnchorEl(null);\n      };\n\n    const handleBlueCheck = (event) => {\n        setBlueCheck(!blueCheck)\n      };\n\n    const handleYellowCheck = (event) => {\n        setYellowCheck(!yellowCheck)\n      };\n    \n\n    const handleGreenCheck = (event) => {\n        setGreenCheck(!greenCheck)\n      };\n\n    const addMedication = (medicationName,instructions,cui) => {\n        dispatch(createMedication({medicationName,instructions,patient:props.patient.id,provider_id,cui}))\n    }\n\n    useEffect(()=>{\n        const searchDxs= async (searchTerm) => {\n            const response = await fetch(`/api/umls/search-term/${searchTerm}`)\n            // const response = await fetch(`/api/umls/search-cui`)\n            const data = await response.json()\n            console.log(data)\n            setSearchingForMeds(false)\n            setDxSearchResults(data.results)\n            return;\n        }\n        if (dxSearchTerm.length > 0) {\n            searchDxs(dxSearchTerm)\n        }\n    },[dxPerformSearch])\n\n\n    return (\n        <>\n                    <div style={{display:\"flex\",flexDirection:\"column\",boxShadow: \"rgba(0, 0, 0, 0.09) 0px 1px 2px 0px\",width:\"100%\",backgroundColor:themeContext.themes === \"dark\" ? \"#444444\" : \"white\"}}>\n                        <div style={{display:\"flex\",flexDirection:\"row\",alignItems:\"center\",justifyContent:\"space-between\",backgroundColor:themeContext.themes === \"dark\" ? \"#444444\" : \"white\",paddingLeft:\"8px\",paddingRight:\"8px\",paddingTop:\"12px\",paddingBottom:\"12px\",borderBottom: themeContext.themes === \"dark\" ? \"\": \"\"}}>\n                            <div style={{backgroundColor: themeContext.themes === \"dark\" ? \"#444444\" : \"white\",display:\"flex\",flexDirection:\"row\",alignItems:\"center\",padding:\"4px\"}}>\n                            <div style={{color:themeContext.themes === \"dark\" ? \"white\" : \"black\", padding:\"4px\", borderRadius:\"4px\",fontSize:\"18px\"}}>New Medication</div> \n                                <div style={{color:themeContext.themes === \"dark\" ? \"white\" : \"cornflowerblue\", fontSize:\"18px\",marginLeft:\"5px\"}}>\n                                    <span style={{fontWeight:\"normal\"}}>for: </span>{props.patient.firstName + \" \" + props.patient.lastName}\n                                </div>\n                            </div>\n                            <div>\n                                    <IconButton \n                                    // onClick={chartContext.handleFormModalClose}\n                                     style={{color:themeContext.themes === \"dark\" ? \"#ed6969\" : \"#ed6969\", outline:\"none\"}}>\n                                        <CloseIcon></CloseIcon>\n                                    </IconButton>\n                                </div>\n                        </div>\n                    <div style={{display:\"flex\",flexDirection:\"column\",justifyContent:\"space-between\",backgroundColor:themeContext.themes === \"dark\" ? \"#444444\" : \"#f9fbfb\"}}>\n                    <div style={{display:\"flex\",flexDirection:\"column\",padding:\"4px\",transition:\"all .4s ease-in-out\",transitionProperty:\"width\",width:\"100%\"}}>\n                        {/* <div style={{borderRadius:\"4px\",background:\"darkgrey\",padding:\"10px\",color:\"white\"}}>\n                            Saga works with the Unified Medical Language System (UMLS) to help providers search over every prescribable drug in existence.\n                        </div> */}\n                        {/* <div style={{display:\"flex\",flexDirection:\"row\",justifyContent:\"center\",fontSize:\"18px\"}}>Source Vocabularies: </div> */}\n                        <div style={{borderRadius:\"8px\",color:themeContext.themes === \"dark\" ? \"white\" : \"cornflowerblue\",marginTop:\"20px\",fontSize:\"18px\",display:\"flex\",justifyContent:\"center\",textAlign:\"center\"}}>\n                            Select the medication source vocabularies to include in your search.\n                        </div>\n                        <div style={{display:\"flex\",flexDirection:\"row\",justifyContent:\"center\"}}>\n                        <div>\n                            <FormControlLabel\n                              aria-owns={greenOpen ? 'mouse-over-popover' : undefined}\n                              aria-haspopup=\"true\"\n                              onMouseEnter={handleGreenPopoverOpen}\n                              onMouseLeave={handleGreenPopoverClose}\n                              control={<GreenCheckbox checked={greenCheck} onChange={handleGreenCheck} name=\"checkedG\" />} label=\"DrugBank\"/>\n                            <Popover\n                              id=\"mouse-over-popover\"\n                              className={classes.popover}\n                              classes={{\n                                paper: classes.paper,\n                              }}\n                              open={greenOpen}\n                              anchorEl={greenAnchorEl}\n                              anchorOrigin={{\n                                vertical: 'bottom',\n                                horizontal: 'left',\n                              }}\n                              transformOrigin={{\n                                vertical: 'top',\n                                horizontal: 'left',\n                              }}\n                              onClose={handleGreenPopoverClose}\n                              disableRestoreFocus\n                            >\n                              {/* <Typography>RxNorm now includes the United States Pharmacopeia (USP) Compendial Nomenclature from the United States Pharmacopeial Convention. USP is a cumulative data set of all Active Pharmaceutical Ingredients (API).</Typography> */}\n                            </Popover>\n    </div>\n                        <FormControlLabel control={<GreenCheckbox checked={blueCheck} onChange={handleBlueCheck} name=\"checkedH\" />} label=\"RxNorm\"/>\n                        <FormControlLabel control={<GreenCheckbox checked={yellowCheck} onChange={handleYellowCheck} name=\"checkedI\" />} label=\"SNOMED-CT\"/>\n                        </div>\n                    {displayMedicationQuestions ? \"\" : <div style={{display:\"flex\",flexDirection:\"column\",paddingLeft:\"15px\",paddingRight:\"15px\"}}>\n                    <Input placeholder=\"e.g. Tylenol, Vyvanse, Melatonin 5mg, Vitamin D etc...\" autoFocus={true} style={{color:themeContext.themes === \"dark\" ? \"white\" : \"black\",fontSize:\"23px\"}} value={dxSearchTerm} onChange={(e)=>setDxSearchTerm(e.target.value)}\n                     endAdornment={\n                        <InputAdornment position=\"end\">\n                          <IconButton\n                            aria-label=\"toggle password visibility\"\n                            onClick={()=>{\n                                setDisplayMedicationQuestions(false)\n                                setDxSearchResults([])\n                                setSearchingForMeds(true)\n                                setDisplayImage(false)\n                                setDxPerformSearch(!dxPerformSearch)\n                                }}\n                            edge=\"end\"\n                            style={{outline:\"none\"}}\n                            autoCapitalize={true}\n                            focusRipple={true}\n                          >\n                            <SearchIcon />\n                          </IconButton>\n                        </InputAdornment>}\n                        \n                    ></Input>\n                    </div>}\n                        <div style={{display:\"flex\",flexDirection:\"column\",maxHeight:\"300px\",overflow:\"scroll\"}}>\n                        {searchingForMeds ? <CircularProgress style={{justifySelf:\"center\",alignSelf:\"center\",margin:\"30px\", height:\"50px\",width:\"50px\"}}/> : <></>}\n                        {displayMedicationQuestions ? \n                        <div style={{display:\"flex\",flexDirection:\"column\",backgroundColor:themeContext.themes === \"dark\" ? \"#999999\" : \"white\",color:themeContext.themes === \"dark\" ? \"white\" : \"black\", borderRadius:\"4px\",padding:\"10px\"}}>\n                            <div style={{display:\"flex\",flexDirection:\"row\",justifyContent:\"space-between\"}}>\n                            <div style={{fontSize:\"24px\",marginBottom:\"3px\"}}>{dxSearchResults[selectedMedicationIndex].name}</div>\n                            <Button size=\"medium\" onClick={()=>setDisplayMedicationQuestions(false)}>\n                                back\n                            </Button>\n                            </div>\n                            <form>\n                                <div style={{display:\"flex\",flexDirection:\"column\", justifyContent:\"center\"}}>\n                                    <p style={{marginBottom:\"0px\",fontSize:\"18px\",color:themeContext.themes === \"dark\" ? \"white\" : \"cornflowerblue\"}}>Patient Insructions:</p>\n                                    <TextareaAutosize rowsMax={8} rows={4} rowsMin={4} value={newMedInstructions} onChange={(e)=>setNewMedInstructions(e.target.value)}></TextareaAutosize>\n                                </div>\n                                <Button size=\"large\" variant=\"outlined\" fullWidth={\"true\"} style={{marginTop:\"5px\",justifySelf:\"center\", alginSelf:\"center\",outline:\"none\"}}\n                                    onClick={()=>{\n                                        console.log(\"new med riht her \",dxSearchResults[selectedMedicationIndex].name,newMedInstructions)\n                                        addMedication(dxSearchResults[selectedMedicationIndex].name,newMedInstructions,dxSearchResults[selectedMedicationIndex].cui)\n                                        setDisplayImage(true)\n                                        setDxSearchResults([])\n                                        setDxSearchTerm(\"\")\n                                        setNewMedInstructions(\"\")\n                                        setDisplayMedicationQuestions(false)}}>\n                                    <AddIcon size={\"large\"} style={{color:green[600],marginRight:\"3px\" }}/>\n                                        Add Medication\n                                </Button>\n                            </form>\n                        </div>\n                        : dxSearchResults.map((dx,index)=>{\n                          if (dx.name === \"NO RESULTS\") return;\n                        return(\n                            <div onClick={()=>setSelectedMedicationIndex(index)} \n                            style={{transition:\"all .4s ease-in-out\",transitionProperty:\"width\",display:\"flex\",\n                            flexDirection:\"row\", justifyContent:\"center\", alignItems:\"center\",cursor:\"pointer\",color:themeContext.themes === \"dark\" ? \"white\" : \"black\",\n                            marginTop:\"3px\",padding:\"4px\",borderRadius:\"3px\",\n                            fontSize:\"18px\",\n                            background:themeContext.themes === \"dark\" ? index === selectedMedicationIndex ? \"#999999\" : \"#343434\" : index === selectedMedicationIndex ? \"yellowgreen\" : \"white\"}}>\n                                <AddIcon onClick={(e)=>setDisplayMedicationQuestions(true)} size=\"medium\" style={{color:index === selectedMedicationIndex ? \"white\" : \"yellowgreen\",cursor:\"pointer\"}}/>\n                                {dx.name}\n                            </div>\n                        )\n                        })}\n                        </div>\n                    </div>\n                    <div style={{display:\"flex\",flexDirection:\"row\",alignItems:\"center\",justifyContent:\"center\",width:\"100%\"}}>\n                    {displayImage ? <img style={{height:\"180px\",marginTop:\"-30px\"}} src=\"https://saga-health.s3-us-west-1.amazonaws.com/medication-drugs-pills-pharmacy-drug-bottles-flat-illustration_102902-333-removebg-preview+(1).png\"></img> : \"\"}\n                    </div>\n                    </div>\n                </div>\n        </>\n    )\n}\n\nexport default NewMedicationForm","import React, { useContext,useState, useEffect } from 'react';\nimport {openPatientChart} from '../store/activities'\nimport { useDispatch, useSelector } from 'react-redux';\nimport HomeContext from './utils/HomeContext';\nimport ExitToAppTwoToneIcon from '@material-ui/icons/ExitToAppTwoTone';\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Divider from '@material-ui/core/Divider';\nimport { Grid, Container, Card, InputBase, TextField, CircularProgress, Input } from '@material-ui/core';\nimport ThemeContext from './utils/ThemeContext';\nimport FindInPageTwoToneIcon from '@material-ui/icons/FindInPageTwoTone';\nimport AddIcon from '@material-ui/icons/AddCircleTwoTone';\nimport IconButton from '@material-ui/core/IconButton';\nimport {createMedication, createProblem} from '../store/current_patient'\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport PatientMedicationsList from './PatientMedicationsList';\nimport SearchIcon from '@material-ui/icons/Search';\nimport CloseIcon from '@material-ui/icons/Close';\nimport { green } from '@material-ui/core/colors';\nimport FormGroup from '@material-ui/core/FormGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport CheckBoxOutlineBlankIcon from '@material-ui/icons/CheckBoxOutlineBlank';\nimport CheckBoxIcon from '@material-ui/icons/CheckBox';\nimport Favorite from '@material-ui/icons/Favorite';\nimport FavoriteBorder from '@material-ui/icons/FavoriteBorder';\nimport Popover from '@material-ui/core/Popover';\nimport Typography from '@material-ui/core/Typography';\nimport TextareaAutosize from '@material-ui/core/TextareaAutosize';\nimport PatientChartContext from './utils/PatientChartContext';\n\nconst GreenCheckbox = withStyles({\n  root: {\n    color: green[400],\n    '&$checked': {\n      color: green[600],\n    },\n  },\n  checked: {},\n})((props) => <Checkbox color=\"default\" {...props} />);\n\n\nconst useStylesLoginTextField = makeStyles((theme) => ({\n    root: {\n      border: '2px solid #e2e2e1',\n      overflow: 'hidden',\n      paddingLeft: \"10px\",\n      paddingTop: \"4px\",\n      paddingBottom: \"4px\",\n      marginTop: \"14px\",\n      borderRadius: 4,\n      backgroundColor: '#fcfcfb',\n      transition: theme.transitions.create(['border-color', 'box-shadow']),\n      '&$focused': {\n        border: '2px solid rgb(94, 158, 214)',\n        backgroundColor: '#fff',\n        // boxShadow: `${fade(theme.palette.primary.main, 0.25)} 0 0 0 1px`,\n      },\n    },\n    focused: {},\n  }));\n\n  function LoginTextField(props) {\n    const classes = useStylesLoginTextField();\n    return <TextField InputProps={{ classes, disableUnderline: true }} {...props} />;\n  }\n\n  const useStyles = makeStyles((theme) => ({\n    popover: {\n      pointerEvents: 'none',\n    },\n    paper: {\n      padding: theme.spacing(1),\n    },\n  }));\n\n  const ColorButton = withStyles((theme) => ({\n    root: {\n        color: \"#ed4959\",\n        paddingRight: \"10px\",\n        paddingLeft: \"10px\",\n        margin: \"4px\",\n        backgroundColor:\"white\",\n        border:\"1px solid #ed4959\",\n        '&:hover': {\n            backgroundColor: \"#ed4959 !important\",\n            color:\"white\",\n            border:\"1px solid #ed4959\",\n        },\n    },\n    }))(Button);\n\nconst NewMedicationForm = (props) => {\n    const classes = useStyles();\n    const context = useContext(HomeContext)\n    const chartContext = useContext(PatientChartContext)\n    const dispatch = useDispatch()\n    const provider_id = useSelector(state=>state.auth.user.id)\n    const [medications,setMedications] = useState([])\n    const themeContext = useContext(ThemeContext)\n    const [dxSearchTerm,setDxSearchTerm] = useState(\"\")\n    const [dxSearchResults,setDxSearchResults]=useState([]);\n    const [dxPerformSearch,setDxPerformSearch]=useState(false)\n    const [searchingForMeds,setSearchingForMeds]=useState(false)\n    const [selectedMedicationIndex,setSelectedMedicationIndex]=useState()\n    const [displayMedicationQuestions,setDisplayMedicationQuestions] = useState(false)\n    const [newMedInstructions,setNewMedInstructions] = useState(\"\")\n    const [blueCheck,setBlueCheck] =useState(true)\n    const [yellowCheck,setYellowCheck] =useState(true)\n    const [greenCheck,setGreenCheck] =useState(true)\n    const [greenAnchorEl, setGreenAnchorEl] = React.useState(null);\n    const [displayImage,setDisplayImage] = useState(true)\n    const greenOpen = Boolean(greenAnchorEl);\n\n    const handleGreenPopoverOpen = (event) => {\n        // setGreenAnchorEl(event.currentTarget);\n      };\n    \n      const handleGreenPopoverClose = () => {\n        setGreenAnchorEl(null);\n      };\n\n    const handleBlueCheck = (event) => {\n        setBlueCheck(!blueCheck)\n      };\n\n    const handleYellowCheck = (event) => {\n        setYellowCheck(!yellowCheck)\n      };\n    \n\n    const handleGreenCheck = (event) => {\n        setGreenCheck(!greenCheck)\n      };\n\n    const addMedication = (medicationName,instructions,cui) => {\n        dispatch(createProblem({problemName:medicationName,instructions,patient:props.patient.id,provider_id,cui,type:\"mental\",current:\"true\"}))\n    }\n\n    useEffect(()=>{\n        const searchDxs= async (searchTerm) => {\n            const response = await fetch(`/api/umls/search-term/mental-health-problems/${searchTerm}`)\n            // const response = await fetch(`/api/umls/search-cui`)\n            const data = await response.json()\n            console.log(data)\n            setDxSearchResults(data.results)\n            setSearchingForMeds(false)\n            return;\n        }\n        if (dxSearchTerm.length > 0) {\n            searchDxs(dxSearchTerm)\n        }\n    },[dxPerformSearch])\n\n\n    return (\n        <>\n                    <div style={{display:\"flex\",flexDirection:\"column\",boxShadow: \"rgba(0, 0, 0, 0.09) 0px 1px 2px 0px\",width:\"100%\",backgroundColor:themeContext.themes === \"dark\" ? \"#444444\" : \"white\"}}>\n                        <div style={{display:\"flex\",flexDirection:\"row\",alignItems:\"center\",justifyContent:\"space-between\",backgroundColor:themeContext.themes === \"dark\" ? \"#444444\" : \"white\",paddingLeft:\"8px\",paddingRight:\"8px\",paddingTop:\"12px\",paddingBottom:\"12px\",borderBottom: themeContext.themes === \"dark\" ? \"\": \"\"}}>\n                            <div style={{backgroundColor: themeContext.themes === \"dark\" ? \"#444444\" : \"white\",display:\"flex\",flexDirection:\"row\",alignItems:\"center\",padding:\"4px\"}}>\n                            <div style={{color:themeContext.themes === \"dark\" ? \"white\" : \"black\", padding:\"4px\", borderRadius:\"4px\",fontSize:\"18px\"}}>New Mental Health Issue</div> \n                                <div style={{color:themeContext.themes === \"dark\" ? \"white\" : \"cornflowerblue\", fontSize:\"18px\",marginLeft:\"5px\"}}>\n                                    <span style={{fontWeight:\"normal\"}}>for: </span>{props.patient.firstName + \" \" + props.patient.lastName}\n                                </div>\n                            </div>\n                            <div>\n                                    <IconButton \n                                    // onClick={chartContext.handleFormModalClose}\n                                     style={{color:themeContext.themes === \"dark\" ? \"#ed6969\" : \"#ed6969\", outline:\"none\"}}>\n                                        <CloseIcon></CloseIcon>\n                                    </IconButton>\n                                </div>\n                        </div>\n                    <div style={{display:\"flex\",flexDirection:\"column\",justifyContent:\"space-between\",backgroundColor:themeContext.themes === \"dark\" ? \"#444444\" : \"#f9fbfb\"}}>\n                    <div style={{display:\"flex\",flexDirection:\"column\",padding:\"4px\",transition:\"all .4s ease-in-out\",transitionProperty:\"width\",width:\"100%\"}}>\n                        {/* <div style={{borderRadius:\"4px\",background:\"darkgrey\",padding:\"10px\",color:\"white\"}}>\n                            Saga works with the Unified Medical Language System (UMLS) to help providers search over every prescribable drug in existence.\n                        </div> */}\n                        {/* <div style={{display:\"flex\",flexDirection:\"row\",justifyContent:\"center\",fontSize:\"18px\"}}>Source Vocabularies: </div> */}\n                        <div style={{borderRadius:\"8px\",color:themeContext.themes === \"dark\" ? \"white\" : \"cornflowerblue\",marginTop:\"20px\",fontSize:\"18px\",display:\"flex\",justifyContent:\"center\",textAlign:\"center\"}}>\n                            Select the mental disorder source vocabularies to include in your search.\n                        </div>\n                        <div style={{display:\"flex\",flexDirection:\"row\",justifyContent:\"center\"}}>\n                        <div>\n                            <FormControlLabel\n                              aria-owns={greenOpen ? 'mouse-over-popover' : undefined}\n                              aria-haspopup=\"true\"\n                              onMouseEnter={handleGreenPopoverOpen}\n                              onMouseLeave={handleGreenPopoverClose}\n                              control={<GreenCheckbox checked={greenCheck} onChange={handleGreenCheck} name=\"checkedG\" />} label=\"DSM-5\"/>\n                            <Popover\n                              id=\"mouse-over-popover\"\n                              className={classes.popover}\n                              classes={{\n                                paper: classes.paper,\n                              }}\n                              open={greenOpen}\n                              anchorEl={greenAnchorEl}\n                              anchorOrigin={{\n                                vertical: 'bottom',\n                                horizontal: 'left',\n                              }}\n                              transformOrigin={{\n                                vertical: 'top',\n                                horizontal: 'left',\n                              }}\n                              onClose={handleGreenPopoverClose}\n                              disableRestoreFocus\n                            >\n                              {/* <Typography>RxNorm now includes the United States Pharmacopeia (USP) Compendial Nomenclature from the United States Pharmacopeial Convention. USP is a cumulative data set of all Active Pharmaceutical Ingredients (API).</Typography> */}\n                            </Popover>\n    </div>\n                        <FormControlLabel control={<GreenCheckbox checked={blueCheck} onChange={handleBlueCheck} name=\"checkedH\" />} label=\"ICD-10\"/>\n                        <FormControlLabel control={<GreenCheckbox checked={yellowCheck} onChange={handleYellowCheck} name=\"checkedI\" />} label=\"SNOMED-CT\"/>\n                        </div>\n                    {displayMedicationQuestions ? \"\" : <div style={{display:\"flex\",flexDirection:\"column\",paddingLeft:\"15px\",paddingRight:\"15px\"}}>\n                    <Input placeholder=\"e.g. Depression, Separation Anxiety, etc...\" autoFocus={true} style={{color:themeContext.themes === \"dark\" ? \"white\" : \"black\",fontSize:\"23px\"}} value={dxSearchTerm} onChange={(e)=>setDxSearchTerm(e.target.value)}\n                     endAdornment={\n                        <InputAdornment position=\"end\">\n                          <IconButton\n                            aria-label=\"toggle password visibility\"\n                            onClick={()=>{\n                                setDisplayMedicationQuestions(false)\n                                setDxSearchResults([])\n                                setSearchingForMeds(true)\n                                setDisplayImage(false)\n                                setDxPerformSearch(!dxPerformSearch)\n                                }}\n                            edge=\"end\"\n                            style={{outline:\"none\"}}\n                            autoCapitalize={true}\n                            focusRipple={true}\n                          >\n                            <SearchIcon />\n                          </IconButton>\n                        </InputAdornment>}\n                        \n                    ></Input>\n                    </div>}\n                        <div style={{display:\"flex\",flexDirection:\"column\",maxHeight:\"300px\",overflow:\"scroll\"}}>\n                        {searchingForMeds ? <CircularProgress style={{justifySelf:\"center\",alignSelf:\"center\",margin:\"30px\", height:\"50px\",width:\"50px\"}}/> : <></>}\n                        {displayMedicationQuestions ? \n                        <div style={{display:\"flex\",flexDirection:\"column\",backgroundColor:themeContext.themes === \"dark\" ? \"#999999\" : \"white\",color:themeContext.themes === \"dark\" ? \"white\" : \"black\", borderRadius:\"4px\",padding:\"10px\"}}>\n                            <div style={{display:\"flex\",flexDirection:\"row\",justifyContent:\"space-between\"}}>\n                            <div style={{fontSize:\"24px\",marginBottom:\"3px\"}}>{dxSearchResults[selectedMedicationIndex].name}</div>\n                            <Button size=\"medium\" onClick={()=>setDisplayMedicationQuestions(false)}>\n                                back\n                            </Button>\n                            </div>\n                            <form>\n                                <div style={{display:\"flex\",flexDirection:\"column\", justifyContent:\"center\"}}>\n                                    <div style={{marginBottom:\"0px\",fontSize:\"18px\",color:themeContext.themes === \"dark\" ? \"white\" : \"cornflowerblue\"}}>Health Issue Note:</div>\n                                    <TextareaAutosize rowsMax={8} rows={4} rowsMin={4} value={newMedInstructions} onChange={(e)=>setNewMedInstructions(e.target.value)}></TextareaAutosize>\n                                </div>\n                                <Button size=\"large\" variant=\"outlined\" fullWidth={\"true\"} style={{marginTop:\"5px\",justifySelf:\"center\", alginSelf:\"center\",outline:\"none\"}}\n                                    onClick={()=>{\n                                        console.log(\"new med riht her \",dxSearchResults[selectedMedicationIndex].name,newMedInstructions)\n                                        addMedication(dxSearchResults[selectedMedicationIndex].name,newMedInstructions,dxSearchResults[selectedMedicationIndex].cui)\n                                        setDisplayImage(true)\n                                        setDxSearchResults([])\n                                        setDxSearchTerm(\"\")\n                                        setNewMedInstructions(\"\")\n                                        setDisplayMedicationQuestions(false)}}>\n                                    <AddIcon size={\"large\"} style={{color:green[600],marginRight:\"3px\" }}/>\n                                        Add Mental Health Issue\n                                </Button>\n                            </form>\n                        </div>\n                        : dxSearchResults.map((dx,index)=>{\n                          if (dx.name === \"NO RESULTS\") return;\n                        return(\n                            <div onClick={()=>setSelectedMedicationIndex(index)} \n                            style={{transition:\"all .4s ease-in-out\",transitionProperty:\"width\",display:\"flex\",\n                            flexDirection:\"row\", justifyContent:\"center\", alignItems:\"center\",cursor:\"pointer\",color:themeContext.themes === \"dark\" ? \"white\" : \"black\",\n                            marginTop:\"3px\",padding:\"4px\",borderRadius:\"3px\",\n                            fontSize:\"18px\",\n                            background:themeContext.themes === \"dark\" ? index === selectedMedicationIndex ? \"#999999\" : \"#343434\" : index === selectedMedicationIndex ? \"yellowgreen\" : \"white\"}}>\n                                <AddIcon onClick={(e)=>setDisplayMedicationQuestions(true)} size=\"medium\" style={{color:index === selectedMedicationIndex ? \"white\" : \"yellowgreen\",cursor:\"pointer\"}}/>\n                                {dx.name}\n                            </div>\n                        )\n                        })}\n                        </div>\n                    </div>\n                    <div style={{display:\"flex\",flexDirection:\"row\",alignItems:\"center\",justifyContent:\"center\",width:\"100%\"}}>\n                    {displayImage ? <img style={{height:\"180px\",marginTop:\"-30px\"}} src=\"https://saga-health.s3-us-west-1.amazonaws.com/medication-drugs-pills-pharmacy-drug-bottles-flat-illustration_102902-333-removebg-preview+(1).png\"></img> : \"\"}\n                    </div>\n                    </div>\n                </div>\n        </>\n    )\n}\n\nexport default NewMedicationForm","import React, { useContext,useState, useEffect } from 'react';\nimport {openPatientChart} from '../store/activities'\nimport { useDispatch, useSelector } from 'react-redux';\nimport HomeContext from './utils/HomeContext';\nimport ExitToAppTwoToneIcon from '@material-ui/icons/ExitToAppTwoTone';\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Divider from '@material-ui/core/Divider';\nimport { Grid, Container, Card, InputBase, TextField, CircularProgress, Input } from '@material-ui/core';\nimport ThemeContext from './utils/ThemeContext';\nimport FindInPageTwoToneIcon from '@material-ui/icons/FindInPageTwoTone';\nimport AddIcon from '@material-ui/icons/AddCircleTwoTone';\nimport IconButton from '@material-ui/core/IconButton';\nimport {createMedication, createProblem} from '../store/current_patient'\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport PatientMedicationsList from './PatientMedicationsList';\nimport SearchIcon from '@material-ui/icons/Search';\nimport CloseIcon from '@material-ui/icons/Close';\nimport { green } from '@material-ui/core/colors';\nimport FormGroup from '@material-ui/core/FormGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport CheckBoxOutlineBlankIcon from '@material-ui/icons/CheckBoxOutlineBlank';\nimport CheckBoxIcon from '@material-ui/icons/CheckBox';\nimport Favorite from '@material-ui/icons/Favorite';\nimport FavoriteBorder from '@material-ui/icons/FavoriteBorder';\nimport Popover from '@material-ui/core/Popover';\nimport Typography from '@material-ui/core/Typography';\nimport TextareaAutosize from '@material-ui/core/TextareaAutosize';\nimport PatientChartContext from './utils/PatientChartContext';\n\nconst GreenCheckbox = withStyles({\n  root: {\n    color: green[400],\n    '&$checked': {\n      color: green[600],\n    },\n  },\n  checked: {},\n})((props) => <Checkbox color=\"default\" {...props} />);\n\n\nconst useStylesLoginTextField = makeStyles((theme) => ({\n    root: {\n      border: '2px solid #e2e2e1',\n      overflow: 'hidden',\n      paddingLeft: \"10px\",\n      paddingTop: \"4px\",\n      paddingBottom: \"4px\",\n      marginTop: \"14px\",\n      borderRadius: 4,\n      backgroundColor: '#fcfcfb',\n      transition: theme.transitions.create(['border-color', 'box-shadow']),\n      '&$focused': {\n        border: '2px solid rgb(94, 158, 214)',\n        backgroundColor: '#fff',\n        // boxShadow: `${fade(theme.palette.primary.main, 0.25)} 0 0 0 1px`,\n      },\n    },\n    focused: {},\n  }));\n\n  function LoginTextField(props) {\n    const classes = useStylesLoginTextField();\n    return <TextField InputProps={{ classes, disableUnderline: true }} {...props} />;\n  }\n\n  const useStyles = makeStyles((theme) => ({\n    popover: {\n      pointerEvents: 'none',\n    },\n    paper: {\n      padding: theme.spacing(1),\n    },\n  }));\n\n  const ColorButton = withStyles((theme) => ({\n    root: {\n        color: \"#ed4959\",\n        paddingRight: \"10px\",\n        paddingLeft: \"10px\",\n        margin: \"4px\",\n        backgroundColor:\"white\",\n        border:\"1px solid #ed4959\",\n        '&:hover': {\n            backgroundColor: \"#ed4959 !important\",\n            color:\"white\",\n            border:\"1px solid #ed4959\",\n        },\n    },\n    }))(Button);\n\nconst NewMedicationForm = (props) => {\n    const classes = useStyles();\n    const context = useContext(HomeContext)\n    const chartContext = useContext(PatientChartContext)\n    const dispatch = useDispatch()\n    const provider_id = useSelector(state=>state.auth.user.id)\n    const [medications,setMedications] = useState([])\n    const themeContext = useContext(ThemeContext)\n    const [dxSearchTerm,setDxSearchTerm] = useState(\"\")\n    const [dxSearchResults,setDxSearchResults]=useState([]);\n    const [dxPerformSearch,setDxPerformSearch]=useState(false)\n    const [searchingForMeds,setSearchingForMeds]=useState(false)\n    const [selectedMedicationIndex,setSelectedMedicationIndex]=useState()\n    const [displayMedicationQuestions,setDisplayMedicationQuestions] = useState(false)\n    const [newMedInstructions,setNewMedInstructions] = useState(\"\")\n    const [blueCheck,setBlueCheck] =useState(true)\n    const [yellowCheck,setYellowCheck] =useState(true)\n    const [greenCheck,setGreenCheck] =useState(true)\n    const [greenAnchorEl, setGreenAnchorEl] = React.useState(null);\n    const [displayImage,setDisplayImage] = useState(true)\n    const greenOpen = Boolean(greenAnchorEl);\n\n    const handleGreenPopoverOpen = (event) => {\n        // setGreenAnchorEl(event.currentTarget);\n      };\n    \n      const handleGreenPopoverClose = () => {\n        setGreenAnchorEl(null);\n      };\n\n    const handleBlueCheck = (event) => {\n        setBlueCheck(!blueCheck)\n      };\n\n    const handleYellowCheck = (event) => {\n        setYellowCheck(!yellowCheck)\n      };\n    \n\n    const handleGreenCheck = (event) => {\n        setGreenCheck(!greenCheck)\n      };\n\n    const addMedication = (medicationName,instructions,cui) => {\n        dispatch(createProblem({problemName:medicationName,instructions,patient:props.patient.id,provider_id,cui,type:\"physical\",current:\"true\"}))\n    }\n\n    useEffect(()=>{\n        const searchDxs= async (searchTerm) => {\n            const response = await fetch(`/api/umls/search-term/non-mental-problems/${searchTerm}`)\n            // const response = await fetch(`/api/umls/search-cui`)\n            const data = await response.json()\n            console.log(data)\n            setDxSearchResults(data.results)\n            setSearchingForMeds(false)\n            return;\n        }\n        if (dxSearchTerm.length > 0) {\n            searchDxs(dxSearchTerm)\n        }\n    },[dxPerformSearch])\n\n\n    return (\n        <>\n                    <div style={{display:\"flex\",flexDirection:\"column\",boxShadow: \"rgba(0, 0, 0, 0.09) 0px 1px 2px 0px\",width:\"100%\",backgroundColor:themeContext.themes === \"dark\" ? \"#444444\" : \"white\"}}>\n                        <div style={{display:\"flex\",flexDirection:\"row\",alignItems:\"center\",justifyContent:\"space-between\",backgroundColor:themeContext.themes === \"dark\" ? \"#444444\" : \"white\",paddingLeft:\"8px\",paddingRight:\"8px\",paddingTop:\"12px\",paddingBottom:\"12px\",borderBottom: themeContext.themes === \"dark\" ? \"\": \"\"}}>\n                            <div style={{backgroundColor: themeContext.themes === \"dark\" ? \"#444444\" : \"white\",display:\"flex\",flexDirection:\"row\",alignItems:\"center\",padding:\"4px\"}}>\n                            <div style={{color:themeContext.themes === \"dark\" ? \"white\" : \"black\", padding:\"4px\", borderRadius:\"4px\",fontSize:\"18px\"}}>New Health Issue</div> \n                                <div style={{color:themeContext.themes === \"dark\" ? \"white\" : \"cornflowerblue\", fontSize:\"18px\",marginLeft:\"5px\"}}>\n                                    <span style={{fontWeight:\"normal\"}}>for: </span>{props.patient.firstName + \" \" + props.patient.lastName}\n                                </div>\n                            </div>\n                            <div>\n                                    <IconButton \n                                    // onClick={chartContext.handleFormModalClose}\n                                     style={{color:themeContext.themes === \"dark\" ? \"#ed6969\" : \"#ed6969\", outline:\"none\"}}>\n                                        <CloseIcon></CloseIcon>\n                                    </IconButton>\n                                </div>\n                        </div>\n                    <div style={{display:\"flex\",flexDirection:\"column\",justifyContent:\"space-between\",backgroundColor:themeContext.themes === \"dark\" ? \"#444444\" : \"#f9fbfb\"}}>\n                    <div style={{display:\"flex\",flexDirection:\"column\",padding:\"4px\",transition:\"all .4s ease-in-out\",transitionProperty:\"width\",width:\"100%\"}}>\n                        {/* <div style={{borderRadius:\"4px\",background:\"darkgrey\",padding:\"10px\",color:\"white\"}}>\n                            Saga works with the Unified Medical Language System (UMLS) to help providers search over every prescribable drug in existence.\n                        </div> */}\n                        {/* <div style={{display:\"flex\",flexDirection:\"row\",justifyContent:\"center\",fontSize:\"18px\"}}>Source Vocabularies: </div> */}\n                        <div style={{borderRadius:\"8px\",color:themeContext.themes === \"dark\" ? \"white\" : \"cornflowerblue\",marginTop:\"20px\",fontSize:\"18px\",display:\"flex\",justifyContent:\"center\",textAlign:\"center\"}}>\n                            Select the physical disorder source vocabularies to include in your search.\n                        </div>\n                        <div style={{display:\"flex\",flexDirection:\"row\",justifyContent:\"center\"}}>\n                        <div>\n                            <FormControlLabel\n                              aria-owns={greenOpen ? 'mouse-over-popover' : undefined}\n                              aria-haspopup=\"true\"\n                              onMouseEnter={handleGreenPopoverOpen}\n                              onMouseLeave={handleGreenPopoverClose}\n                              control={<GreenCheckbox checked={greenCheck} onChange={handleGreenCheck} name=\"checkedG\" />} label=\"ICD-10\"/>\n                            <Popover\n                              id=\"mouse-over-popover\"\n                              className={classes.popover}\n                              classes={{\n                                paper: classes.paper,\n                              }}\n                              open={greenOpen}\n                              anchorEl={greenAnchorEl}\n                              anchorOrigin={{\n                                vertical: 'bottom',\n                                horizontal: 'left',\n                              }}\n                              transformOrigin={{\n                                vertical: 'top',\n                                horizontal: 'left',\n                              }}\n                              onClose={handleGreenPopoverClose}\n                              disableRestoreFocus\n                            >\n                              {/* <Typography>RxNorm now includes the United States Pharmacopeia (USP) Compendial Nomenclature from the United States Pharmacopeial Convention. USP is a cumulative data set of all Active Pharmaceutical Ingredients (API).</Typography> */}\n                            </Popover>\n    </div>\n                        <FormControlLabel control={<GreenCheckbox checked={blueCheck} onChange={handleBlueCheck} name=\"checkedH\" />} label=\"DISEASES DATABASE\"/>\n                        <FormControlLabel control={<GreenCheckbox checked={yellowCheck} onChange={handleYellowCheck} name=\"checkedI\" />} label=\"SNOMED-CT\"/>\n                        </div>\n                    {displayMedicationQuestions ? \"\" : <div style={{display:\"flex\",flexDirection:\"column\",paddingLeft:\"15px\",paddingRight:\"15px\"}}>\n                    <Input placeholder=\"e.g. Contusion, strain, elbow, superficial injury\" autoFocus={true} style={{color:themeContext.themes === \"dark\" ? \"white\" : \"black\",fontSize:\"23px\"}} value={dxSearchTerm} onChange={(e)=>setDxSearchTerm(e.target.value)}\n                     endAdornment={\n                        <InputAdornment position=\"end\">\n                          <IconButton\n                            aria-label=\"toggle password visibility\"\n                            onClick={()=>{\n                                setDisplayMedicationQuestions(false)\n                                setDxSearchResults([])\n                                setSearchingForMeds(true)\n                                setDisplayImage(false)\n                                setDxPerformSearch(!dxPerformSearch)\n                                }}\n                            edge=\"end\"\n                            style={{outline:\"none\"}}\n                            autoCapitalize={true}\n                            focusRipple={true}\n                          >\n                            <SearchIcon />\n                          </IconButton>\n                        </InputAdornment>}\n                        \n                    ></Input>\n                    </div>}\n                        <div style={{display:\"flex\",flexDirection:\"column\",maxHeight:\"300px\",overflow:\"scroll\"}}>\n                        {searchingForMeds ? <CircularProgress style={{justifySelf:\"center\",alignSelf:\"center\",margin:\"30px\", height:\"50px\",width:\"50px\"}}/> : <></>}\n                        {displayMedicationQuestions ? \n                        <div style={{display:\"flex\",flexDirection:\"column\",backgroundColor:themeContext.themes === \"dark\" ? \"#999999\" : \"white\",color:themeContext.themes === \"dark\" ? \"white\" : \"black\", borderRadius:\"4px\",padding:\"10px\"}}>\n                            <div style={{display:\"flex\",flexDirection:\"row\",justifyContent:\"space-between\"}}>\n                            <div style={{fontSize:\"24px\",marginBottom:\"3px\"}}>{dxSearchResults[selectedMedicationIndex].name}</div>\n                            <Button size=\"medium\" onClick={()=>setDisplayMedicationQuestions(false)}>\n                                back\n                            </Button>\n                            </div>\n                            <form>\n                                <div style={{display:\"flex\",flexDirection:\"column\", justifyContent:\"center\"}}>\n                                    <div style={{marginBottom:\"0px\",fontSize:\"18px\",color:themeContext.themes === \"dark\" ? \"white\" : \"cornflowerblue\"}}>Health Issue Note:</div>\n                                    <TextareaAutosize rowsMax={8} rows={4} rowsMin={4} value={newMedInstructions} onChange={(e)=>setNewMedInstructions(e.target.value)}></TextareaAutosize>\n                                </div>\n                                <Button size=\"large\" variant=\"outlined\" fullWidth={\"true\"} style={{marginTop:\"5px\",justifySelf:\"center\", alginSelf:\"center\",outline:\"none\"}}\n                                    onClick={()=>{\n                                        console.log(\"new med riht her \",dxSearchResults[selectedMedicationIndex].name,newMedInstructions)\n                                        addMedication(dxSearchResults[selectedMedicationIndex].name,newMedInstructions,dxSearchResults[selectedMedicationIndex].cui)\n                                        setDisplayImage(true)\n                                        setDxSearchResults([])\n                                        setDxSearchTerm(\"\")\n                                        setNewMedInstructions(\"\")\n                                        setDisplayMedicationQuestions(false)}}>\n                                    <AddIcon size={\"large\"} style={{color:green[600],marginRight:\"3px\" }}/>\n                                        Add Health Issue\n                                </Button>\n                            </form>\n                        </div>\n                        : dxSearchResults.map((dx,index)=>{\n                          if (dx.name === \"NO RESULTS\") return;\n                        return(\n                            <div onClick={()=>setSelectedMedicationIndex(index)} \n                            style={{transition:\"all .4s ease-in-out\",transitionProperty:\"width\",display:\"flex\",\n                            flexDirection:\"row\", justifyContent:\"center\", alignItems:\"center\",cursor:\"pointer\",color:themeContext.themes === \"dark\" ? \"white\" : \"black\",\n                            marginTop:\"3px\",padding:\"4px\",borderRadius:\"3px\",\n                            fontSize:\"18px\",\n                            background:themeContext.themes === \"dark\" ? index === selectedMedicationIndex ? \"#999999\" : \"#343434\" : index === selectedMedicationIndex ? \"yellowgreen\" : \"white\"}}>\n                                <AddIcon onClick={(e)=>setDisplayMedicationQuestions(true)} size=\"medium\" style={{color:index === selectedMedicationIndex ? \"white\" : \"yellowgreen\",cursor:\"pointer\"}}/>\n                                {dx.name}\n                            </div>\n                        )\n                        })}\n                        </div>\n                    </div>\n                    <div style={{display:\"flex\",flexDirection:\"row\",alignItems:\"center\",justifyContent:\"center\",width:\"100%\"}}>\n                    {displayImage ? <img style={{height:\"180px\",marginTop:\"-30px\"}} src=\"https://saga-health.s3-us-west-1.amazonaws.com/medication-drugs-pills-pharmacy-drug-bottles-flat-illustration_102902-333-removebg-preview+(1).png\"></img> : \"\"}\n                    </div>\n                    </div>\n                </div>\n        </>\n    )\n}\n\nexport default NewMedicationForm","import React, { useContext,useState, useEffect } from 'react';\nimport {openPatientChart} from '../store/activities'\nimport { useDispatch, useSelector } from 'react-redux';\nimport HomeContext from './utils/HomeContext';\nimport ExitToAppTwoToneIcon from '@material-ui/icons/ExitToAppTwoTone';\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Divider from '@material-ui/core/Divider';\nimport { Grid, Container, Card, InputBase, TextField, CircularProgress, Input } from '@material-ui/core';\nimport ThemeContext from './utils/ThemeContext';\nimport FindInPageTwoToneIcon from '@material-ui/icons/FindInPageTwoTone';\nimport AddIcon from '@material-ui/icons/AddCircleTwoTone';\nimport IconButton from '@material-ui/core/IconButton';\nimport {createMedication, createProblem} from '../store/current_patient'\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport PatientMedicationsList from './PatientMedicationsList';\nimport SearchIcon from '@material-ui/icons/Search';\nimport CloseIcon from '@material-ui/icons/Close';\nimport { green } from '@material-ui/core/colors';\nimport FormGroup from '@material-ui/core/FormGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport CheckBoxOutlineBlankIcon from '@material-ui/icons/CheckBoxOutlineBlank';\nimport CheckBoxIcon from '@material-ui/icons/CheckBox';\nimport Favorite from '@material-ui/icons/Favorite';\nimport FavoriteBorder from '@material-ui/icons/FavoriteBorder';\nimport Popover from '@material-ui/core/Popover';\nimport Typography from '@material-ui/core/Typography';\nimport TextareaAutosize from '@material-ui/core/TextareaAutosize';\nimport PatientChartContext from './utils/PatientChartContext';\nimport { createOrder } from '../store/orders';\n\nconst GreenCheckbox = withStyles({\n  root: {\n    color: green[400],\n    '&$checked': {\n      color: green[600],\n    },\n  },\n  checked: {},\n})((props) => <Checkbox color=\"default\" {...props} />);\n\n\nconst useStylesLoginTextField = makeStyles((theme) => ({\n    root: {\n      border: '2px solid #e2e2e1',\n      overflow: 'hidden',\n      paddingLeft: \"10px\",\n      paddingTop: \"4px\",\n      paddingBottom: \"4px\",\n      marginTop: \"14px\",\n      borderRadius: 4,\n      backgroundColor: '#fcfcfb',\n      transition: theme.transitions.create(['border-color', 'box-shadow']),\n      '&$focused': {\n        border: '2px solid rgb(94, 158, 214)',\n        backgroundColor: '#fff',\n        // boxShadow: `${fade(theme.palette.primary.main, 0.25)} 0 0 0 1px`,\n      },\n    },\n    focused: {},\n  }));\n\n  function LoginTextField(props) {\n    const classes = useStylesLoginTextField();\n    return <TextField InputProps={{ classes, disableUnderline: true }} {...props} />;\n  }\n\n  const useStyles = makeStyles((theme) => ({\n    popover: {\n      pointerEvents: 'none',\n    },\n    paper: {\n      padding: theme.spacing(1),\n    },\n  }));\n\n  const ColorButton = withStyles((theme) => ({\n    root: {\n        color: \"#ed4959\",\n        paddingRight: \"10px\",\n        paddingLeft: \"10px\",\n        margin: \"4px\",\n        backgroundColor:\"white\",\n        border:\"1px solid #ed4959\",\n        '&:hover': {\n            backgroundColor: \"#ed4959 !important\",\n            color:\"white\",\n            border:\"1px solid #ed4959\",\n        },\n    },\n    }))(Button);\n\nconst NewMedicationForm = (props) => {\n    const classes = useStyles();\n    const context = useContext(HomeContext)\n    const chartContext = useContext(PatientChartContext)\n    const dispatch = useDispatch()\n    const provider_id = useSelector(state=>state.auth.user.id)\n    const [medications,setMedications] = useState([])\n    const themeContext = useContext(ThemeContext)\n    const [dxSearchTerm,setDxSearchTerm] = useState(\"\")\n    const [dxSearchResults,setDxSearchResults]=useState([]);\n    const [dxPerformSearch,setDxPerformSearch]=useState(false)\n    const [searchingForMeds,setSearchingForMeds]=useState(false)\n    const [selectedMedicationIndex,setSelectedMedicationIndex]=useState()\n    const [displayMedicationQuestions,setDisplayMedicationQuestions] = useState(false)\n    const [newMedInstructions,setNewMedInstructions] = useState(\"\")\n    const [blueCheck,setBlueCheck] =useState(true)\n    const [yellowCheck,setYellowCheck] =useState(true)\n    const [greenCheck,setGreenCheck] =useState(true)\n    const [type,setType]=useState(1)\n    const [greenAnchorEl, setGreenAnchorEl] = React.useState(null);\n    const [displayImage,setDisplayImage] = useState(true)\n    const greenOpen = Boolean(greenAnchorEl);\n\n    const handleGreenPopoverOpen = (event) => {\n        // setGreenAnchorEl(event.currentTarget);\n      };\n    \n      const handleGreenPopoverClose = () => {\n        setGreenAnchorEl(null);\n      };\n\n    const handleBlueCheck = (event) => {\n        setBlueCheck(!blueCheck)\n      };\n\n    const handleYellowCheck = (event) => {\n        setYellowCheck(!yellowCheck)\n      };\n    \n\n    const handleGreenCheck = (event) => {\n        setGreenCheck(!greenCheck)\n      };\n\n    const addMedication = (medicationName,instructions,cui) => {\n        dispatch(createOrder({note:instructions,name:medicationName,patient_id:props.patient.id,provider_id,cui,order_type:type,status:\"Needs Scheduling\"}))\n    }\n\n    useEffect(()=>{\n        const searchDxs= async (searchTerm) => {\n            const response = await fetch(`/api/umls/search-term/procedure-order/${searchTerm}`)\n            // const response = await fetch(`/api/umls/search-cui`)\n            const data = await response.json()\n            console.log(data)\n            setDxSearchResults(data.results)\n            setSearchingForMeds(false)\n            return;\n        }\n        if (dxSearchTerm.length > 0) {\n            searchDxs(dxSearchTerm)\n        }\n    },[dxPerformSearch])\n\n\n    return (\n        <>\n                    <div style={{display:\"flex\",flexDirection:\"column\",boxShadow: \"rgba(0, 0, 0, 0.09) 0px 1px 2px 0px\",width:\"100%\",backgroundColor:themeContext.themes === \"dark\" ? \"#444444\" : \"white\"}}>\n                        <div style={{display:\"flex\",flexDirection:\"row\",alignItems:\"center\",justifyContent:\"space-between\",backgroundColor:themeContext.themes === \"dark\" ? \"#444444\" : \"white\",paddingLeft:\"8px\",paddingRight:\"8px\",paddingTop:\"12px\",paddingBottom:\"12px\",borderBottom: themeContext.themes === \"dark\" ? \"\": \"\"}}>\n                            <div style={{backgroundColor: themeContext.themes === \"dark\" ? \"#444444\" : \"white\",display:\"flex\",flexDirection:\"row\",alignItems:\"center\",padding:\"4px\"}}>\n                            <div style={{color:themeContext.themes === \"dark\" ? \"white\" : \"black\", padding:\"4px\", borderRadius:\"4px\",fontSize:\"18px\"}}>New Order</div> \n                                <div style={{color:themeContext.themes === \"dark\" ? \"white\" : \"cornflowerblue\", fontSize:\"18px\",marginLeft:\"5px\"}}>\n                                    <span style={{fontWeight:\"normal\"}}>for: </span>{props.patient.firstName + \" \" + props.patient.lastName}\n                                </div>\n                            </div>\n                            <div>\n                                    <IconButton \n                                    // onClick={chartContext.handleFormModalClose}\n                                     style={{color:themeContext.themes === \"dark\" ? \"#ed6969\" : \"#ed6969\", outline:\"none\"}}>\n                                        <CloseIcon></CloseIcon>\n                                    </IconButton>\n                                </div>\n                        </div>\n                    <div style={{display:\"flex\",flexDirection:\"column\",justifyContent:\"space-between\",backgroundColor:themeContext.themes === \"dark\" ? \"#444444\" : \"#f9fbfb\"}}>\n                    <div style={{display:\"flex\",flexDirection:\"column\",padding:\"4px\",transition:\"all .4s ease-in-out\",transitionProperty:\"width\",width:\"100%\"}}>\n                        {/* <div style={{borderRadius:\"4px\",background:\"darkgrey\",padding:\"10px\",color:\"white\"}}>\n                            Saga works with the Unified Medical Language System (UMLS) to help providers search over every prescribable drug in existence.\n                        </div> */}\n                        {/* <div style={{display:\"flex\",flexDirection:\"row\",justifyContent:\"center\",fontSize:\"18px\"}}>Source Vocabularies: </div> */}\n                        <div style={{borderRadius:\"8px\",color:themeContext.themes === \"dark\" ? \"white\" : \"cornflowerblue\",marginTop:\"20px\",fontSize:\"18px\",display:\"flex\",justifyContent:\"center\",textAlign:\"center\"}}>\n                            Select the procedure source vocabularies to include in your search.\n                        </div>\n                        <div style={{display:\"flex\",flexDirection:\"row\",justifyContent:\"center\"}}>\n                        <div>\n                            <FormControlLabel\n                              aria-owns={greenOpen ? 'mouse-over-popover' : undefined}\n                              aria-haspopup=\"true\"\n                              onMouseEnter={handleGreenPopoverOpen}\n                              onMouseLeave={handleGreenPopoverClose}\n                              control={<GreenCheckbox checked={greenCheck} onChange={handleGreenCheck} name=\"checkedG\" />} label=\"CPT\"/>\n                            <Popover\n                              id=\"mouse-over-popover\"\n                              className={classes.popover}\n                              classes={{\n                                paper: classes.paper,\n                              }}\n                              open={greenOpen}\n                              anchorEl={greenAnchorEl}\n                              anchorOrigin={{\n                                vertical: 'bottom',\n                                horizontal: 'left',\n                              }}\n                              transformOrigin={{\n                                vertical: 'top',\n                                horizontal: 'left',\n                              }}\n                              onClose={handleGreenPopoverClose}\n                              disableRestoreFocus\n                            >\n                              {/* <Typography>RxNorm now includes the United States Pharmacopeia (USP) Compendial Nomenclature from the United States Pharmacopeial Convention. USP is a cumulative data set of all Active Pharmaceutical Ingredients (API).</Typography> */}\n                            </Popover>\n    </div>\n                        <FormControlLabel control={<GreenCheckbox checked={blueCheck} onChange={handleBlueCheck} name=\"checkedH\" />} label=\"Health Care Common Procedure Coding Sys.\"/>\n                        </div>\n                    {displayMedicationQuestions ? \"\" : <div style={{display:\"flex\",flexDirection:\"column\",paddingLeft:\"15px\",paddingRight:\"15px\"}}>\n                    <Input placeholder=\"e.g. xray chest, transarterial embolization, etc...\" autoFocus={true} style={{color:themeContext.themes === \"dark\" ? \"white\" : \"black\",fontSize:\"23px\"}} value={dxSearchTerm} onChange={(e)=>setDxSearchTerm(e.target.value)}\n                     endAdornment={\n                        <InputAdornment position=\"end\">\n                          <IconButton\n                            aria-label=\"toggle password visibility\"\n                            onClick={()=>{\n                                setDisplayMedicationQuestions(false)\n                                setDxSearchResults([])\n                                setSearchingForMeds(true)\n                                setDisplayImage(false)\n                                setDxPerformSearch(!dxPerformSearch)\n                                }}\n                            edge=\"end\"\n                            style={{outline:\"none\"}}\n                            autoCapitalize={true}\n                            focusRipple={true}\n                          >\n                            <SearchIcon />\n                          </IconButton>\n                        </InputAdornment>}\n                        \n                    ></Input>\n                    </div>}\n                        <div style={{display:\"flex\",flexDirection:\"column\",maxHeight:\"300px\",overflow:\"scroll\"}}>\n                        {searchingForMeds ? <CircularProgress style={{justifySelf:\"center\",alignSelf:\"center\",margin:\"30px\", height:\"50px\",width:\"50px\"}}/> : <></>}\n                        {displayMedicationQuestions ? \n                        <div style={{display:\"flex\",flexDirection:\"column\",backgroundColor:themeContext.themes === \"dark\" ? \"#999999\" : \"white\",color:themeContext.themes === \"dark\" ? \"white\" : \"black\", borderRadius:\"4px\",padding:\"10px\"}}>\n                            <div style={{display:\"flex\",flexDirection:\"row\",justifyContent:\"space-between\"}}>\n                            <div style={{fontSize:\"24px\",marginBottom:\"3px\"}}>{dxSearchResults[selectedMedicationIndex].name}</div>\n                            <Button size=\"medium\" onClick={()=>setDisplayMedicationQuestions(false)}>\n                                back\n                            </Button>\n                            </div>\n                            <form>\n                                <div style={{display:\"flex\",flexDirection:\"column\", justifyContent:\"center\"}}>\n                                    <div style={{marginBottom:\"0px\",fontSize:\"18px\",color:themeContext.themes === \"dark\" ? \"white\" : \"cornflowerblue\"}}>Health Issue Note:</div>\n                                    <TextareaAutosize rowsMax={8} rows={4} rowsMin={4} value={newMedInstructions} onChange={(e)=>setNewMedInstructions(e.target.value)}></TextareaAutosize>\n                                </div>\n                                <Button size=\"large\" variant=\"outlined\" fullWidth={\"true\"} style={{marginTop:\"5px\",justifySelf:\"center\", alginSelf:\"center\",outline:\"none\"}}\n                                    onClick={()=>{\n                                        console.log(\"new med riht her \",dxSearchResults[selectedMedicationIndex].name,newMedInstructions)\n                                        addMedication(dxSearchResults[selectedMedicationIndex].name,newMedInstructions,dxSearchResults[selectedMedicationIndex].cui)\n                                        setDisplayImage(true)\n                                        setDxSearchResults([])\n                                        setDxSearchTerm(\"\")\n                                        setNewMedInstructions(\"\")\n                                        setDisplayMedicationQuestions(false)}}>\n                                    <AddIcon size={\"large\"} style={{color:green[600],marginRight:\"3px\" }}/>\n                                        Add Mental Health Issue\n                                </Button>\n                            </form>\n                        </div>\n                        : dxSearchResults.map((dx,index)=>{\n                          if (dx.name === \"NO RESULTS\") return;\n                        return(\n                            <div onClick={()=>setSelectedMedicationIndex(index)} \n                            style={{transition:\"all .4s ease-in-out\",transitionProperty:\"width\",display:\"flex\",\n                            flexDirection:\"row\", justifyContent:\"center\", alignItems:\"center\",cursor:\"pointer\",color:themeContext.themes === \"dark\" ? \"white\" : \"black\",\n                            marginTop:\"3px\",padding:\"4px\",borderRadius:\"3px\",\n                            fontSize:\"18px\",\n                            background:themeContext.themes === \"dark\" ? index === selectedMedicationIndex ? \"#999999\" : \"#343434\" : index === selectedMedicationIndex ? \"yellowgreen\" : \"white\"}}>\n                                <AddIcon onClick={(e)=>setDisplayMedicationQuestions(true)} size=\"medium\" style={{color:index === selectedMedicationIndex ? \"white\" : \"yellowgreen\",cursor:\"pointer\"}}/>\n                                {dx.name}\n                            </div>\n                        )\n                        })}\n                        </div>\n                    </div>\n                    <div style={{display:\"flex\",flexDirection:\"row\",alignItems:\"center\",justifyContent:\"center\",width:\"100%\"}}>\n                    {displayImage ? <img style={{height:\"180px\",marginTop:\"-30px\"}} src=\"https://saga-health.s3-us-west-1.amazonaws.com/medication-drugs-pills-pharmacy-drug-bottles-flat-illustration_102902-333-removebg-preview+(1).png\"></img> : \"\"}\n                    </div>\n                    </div>\n                </div>\n        </>\n    )\n}\n\nexport default NewMedicationForm\n","import React, { useContext, useEffect,useState } from 'react';\nimport {openPatientChart} from '../store/activities'\nimport { useDispatch, useSelector } from 'react-redux';\nimport HomeContext from './utils/HomeContext';\nimport ExitToAppTwoToneIcon from '@material-ui/icons/ExitToAppTwoTone';\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Modal from '@material-ui/core/Modal';\nimport Backdrop from '@material-ui/core/Backdrop';\nimport Divider from '@material-ui/core/Divider';\nimport HomeTwoToneIcon from '@material-ui/icons/HomeTwoTone';\nimport HomeIcon from '@material-ui/icons/Home';\nimport StayCurrentPortraitIcon from '@material-ui/icons/StayCurrentPortrait';\nimport StayPrimaryPortraitTwoToneIcon from '@material-ui/icons/StayPrimaryPortraitTwoTone';\nimport BusinessTwoToneIcon from '@material-ui/icons/BusinessTwoTone';\nimport ContactMailIcon from '@material-ui/icons/ContactMail';\nimport ContactMailTwoToneIcon from '@material-ui/icons/ContactMailTwoTone';\nimport ThemeContext from './utils/ThemeContext';\nimport Slide from '@material-ui/core/Slide';\nimport ListItem from '@material-ui/core/ListItem';\nimport ButtonBase from \"@material-ui/core/ButtonBase\";\nimport List from '@material-ui/core/List';\nimport PatientChartContext from './utils/PatientChartContext';\nimport { Accordion, AccordionDetails, AccordionSummary, Avatar, Fade, Grid, IconButton, TextareaAutosize } from '@material-ui/core';\nimport PatientEncountersList from './PatientEncountersList';\nimport PatientOrdersList from './PatientOrdersList';\nimport AddIcon from '@material-ui/icons/Add';\nimport NewMedicationForm from './NewMedicationForm';\nimport NewMentalProblemForm from './newMentalProblemForm';\nimport NewPhysicalProblemForm from './NewPhysicalProblemForm';\nimport NewOrderForm from './NewOrderForm';\nimport {updateMedication, updateOrder, updateProblem} from '../store/current_patient';\nimport EditIcon from '@material-ui/icons/Edit';\n\nconst NewItemColorButton = withStyles((theme) => ({\n    root: {\n        color: \"white\",\n        paddingRight: \"10px\",\n        paddingLeft: \"10px\",\n        margin: \"4px\",\n        outline:\"none\",\n        width:\"fit-content\",\n        backgroundColor:\"#a9a9a9\",\n        '&:hover': {\n            backgroundColor: \"yellowgreen !important\",\n        },\n    },\n    }))(Button);\n\nconst GreenColorButton = withStyles((theme) => ({\n    root: {\n        color: \"white\",\n        paddingRight: \"10px\",\n        paddingLeft: \"10px\",\n        outline:\"none\",\n        margin: \"4px\",\n        backgroundColor:\"#a9a9a9\",\n        '&:hover': {\n            backgroundColor: \"yellowgreen !important\",\n        }\n    },\n    }))(Button);\n\n\nconst ColorButton = withStyles((theme) => ({\n    root: {\n        color: \"white\",\n        paddingRight: \"10px\",\n        paddingLeft: \"10px\",\n        outline:\"none\",\n        margin: \"4px\",\n        backgroundColor:\"#a9a9a9\",\n        border:\"1px solid #a9a9a9\",\n        '&:hover': {\n            backgroundColor: \"#ed462f !important\",\n            color:\"white\",\n            border:\"1px solid #ed462f\",\n        }\n    },\n    }))(Button);\n    const BlueColorButton = withStyles((theme) => ({\n        root: {\n            color: \"white\",\n            paddingRight: \"10px\",\n            paddingLeft: \"10px\",\n            outline:\"none\",\n            margin: \"4px\",\n            width:\"fit-content\",\n            backgroundColor:\"#a9a9a9\",\n            '&:hover': {\n                backgroundColor: \"dodgerblue !important\",\n            },\n        },\n        }))(Button);\n\n\n    const useStyles = makeStyles((theme) => ({\n        colorSpash: {\n            backgroundColor: \"lightgreen\",\n        },\n        child: {\n            backgroundColor: 'blue',\n            backgroundImage: `\"${\"url(\\\"../images/159960637489457530 (1).png\\\")\"}`\n        },\n        large: {\n            width: theme.spacing(7),\n            height: theme.spacing(7),\n          },\n        rippleVisible: {\n            opacity: 0.5,\n            animation: `$enter 550ms ${theme.transitions.easing.easeInOut}`\n        },\n        \"@keyframes enter\": {\n            \"0%\": {\n                transform: \"scale(0)\",\n                opacity: 0.2\n            },\n            \"100%\": {\n                transform: \"scale(1)\",\n                opacity: 0.5\n            }\n        },\n        [`${\"MuiTouchRipple-root\"}`]: {\n            top: 0,\n            left: 0,\n            right: 0,\n            bottom: 0,\n            zIndex: 0,\n            overflow: \"hidden\",\n            position: \"absolute\",\n            borderRadius: \"inherit\",\n            pointerEvents: \"none\",\n            color:\"blue\",\n            display: \"none\"\n        },\n        polygon: {\n            fill: theme.palette.common.white,\n            stroke: theme.palette.divider,\n            strokeWidth: 1,\n        },\n        touchRipple:{\n            opacity: 1,\n            color: `lightgreen`,\n        },\n        paper: {\n            backgroundColor: theme.palette.background.paper,\n            boxShadow: theme.shadows[5],\n            outline: \"none\",\n            padding: theme.spacing(2, 4, 3),\n            boxSizing: \"auto\"\n        },\n        modal: {\n            display: 'flex',\n            alignItems: 'center',\n            justifyContent: 'center',\n          },\n        modalPaper: {\n            boxShadow: theme.shadows[5],\n            padding: theme.spacing(2, 4, 3),\n          },\n        patientInstructions : {\n            cursor:\"pointer\",\n            transition:\"all .3s ease-in-out\",\n            '&:hover': {\n                background:\"gainsboro\"\n            }\n        \n        },\n        patientInstructionsDark : {\n            cursor:\"pointer\",\n            transition:\"all .3s ease-in-out\",\n            '&:hover': {\n                background:\"grey\"\n            }\n        }\n    }));\n\nfunction PatientProblemList(props) { \n    const classes = useStyles()\n    console.log(\"prs!!\",props.patient)\n    console.log(\"ptheseasdfadfddd\",{...props.patient})\n    \n    const context = useContext(PatientChartContext)\n    const themeContext = useContext(ThemeContext)\n    const dispatch = useDispatch()\n    const openTabs = useSelector(state=>state.activities.open_tabs)\n    const [patient,setPatient] = useState(props.patient)\n    const [medsArray,setMedsArray] = useState([])\n    const [selectedIndex, setSelectedIndex] = useState();\n    const [previewCui,setPreviewCui] = useState(\"\")\n    const [selectedItemDefinitions,setSelectedItemDefinitions] = useState([])\n    const [selectedMed,setSelectedMed] = useState({})\n    const [selectedMedProviderId,setSelectedMedProviderId]=useState(\"\")\n    const [provider,setProvider]=useState({})\n    const [formModalOpen, setFormModalOpen] = useState(false);\n    const [modalForm, setModalForm] = useState(\"\")\n    const [showInstructionEdit,setShowInstructionEdit] = useState(false)\n    const [selectedMedInstructions,setSelectedMedInstructions] = useState(\"\")\n\n    // console.log(props.patient)\n    const [loading,setLoading] = useState(true)\n\n    const handleListItemClick = (med, index) => {\n        setShowInstructionEdit(false)\n        setSelectedMedProviderId(med.provider_id)\n        setSelectedMed(med)\n        setSelectedMedInstructions(med.note)\n        setSelectedIndex(index)\n        setPreviewCui(med.cui)\n    };\n\n    const handleFormModalOpen = (modalForm) => {\n        setModalForm(modalForm)\n        console.log(modalForm)\n        setFormModalOpen(true);\n    };\n  \n    const handleFormModalClose = () => {\n        setModalForm(\"\")\n        setFormModalOpen(false);\n    };\n\n    useEffect(()=>{\n        if (props.patient.problems) {\n            setPatient(props.patient)\n            setLoading(false)\n        }\n    },[props.patient])\n\n    useEffect(()=>{\n        const searchForCui = async (cui) => {\n            if (cui=== \"\") return;\n            const response = await fetch(`/api/umls/search-cui/${cui}`)\n            const data = await response.json()\n            const definitions = data.definitions.map(def=>{\n                return (\n                    {\n                        value: def.value,\n                        source: def.rootSource\n                    }\n                )\n            })\n            setSelectedItemDefinitions(definitions)\n            console.log(data)\n        }\n        if (previewCui !== \"\") {\n            searchForCui(previewCui)\n        }\n    },[previewCui])\n\n    const handleSave =()=>{\n        const newMed = {...selectedMed}\n        newMed.instructions = selectedMedInstructions\n        setSelectedMed(newMed)\n        setSelectedMedInstructions(selectedMedInstructions)\n        setShowInstructionEdit(false)\n        dispatch(updateOrder({id:selectedMed.id,note:selectedMedInstructions,status:selectedMed.status}))\n    }\n\n    const handleCancel = () => {\n        setSelectedMedInstructions(selectedMed.note)\n        setShowInstructionEdit(false)\n    }\n\n    const handleDiscontinue = () => {\n        const newMed = {...selectedMed}\n        newMed.status = \"Canceled\"\n        setSelectedMed(newMed)\n        dispatch(updateOrder({id:selectedMed.id,status:\"Canceled\",note:selectedMedInstructions}))\n    }\n\n    const handleRestart = () => {\n        const newMed = {...selectedMed}\n        newMed.status = \"Needs Scheduling\"\n        setSelectedMed(newMed)\n        dispatch(updateOrder({id:selectedMed.id,status:\"Needs Scheduling\",note:selectedMedInstructions}))\n    }\n\n\n    // useEffect(()=>{\n    //     const updateItem = async (item) => {\n    //         const response = await fetch(`/api/providers/photo/${providerId}`,{\n    //             method:\"post\",\n                \n    //         })\n    //         const data = await response.json()\n    //     }\n    // },[updateRecord])\n\n    useEffect(()=>{\n        const searchForDoc = async (providerId) => {\n            console.log(\"providerID:: \",providerId)\n            if (providerId === \"\") return;\n            const response = await fetch(`/api/providers/photo/${providerId}`)\n            const data = await response.json()\n            setProvider(data.provider)\n        }\n        if (selectedMedProviderId !== \"\") {\n            searchForDoc(selectedMedProviderId)\n        }\n    },[selectedMedProviderId])\n\n    if (loading) {\n        return \"\"\n    }\n    const rippleClasses = { rippleVisible: classes.rippleVisible, child: classes.child, [`${\"@keyframes enter\"}`]: classes[`${\"@keyframes enter\"}`] }\n\n\n    return (\n        <>  \n        <Fade in={loading === false}>\n            <div style={{display:\"flex\",flexDirection:\"row\",width:\"100%\"}}>\n                    <div style={{display:\"flex\",flexDirection:\"column\",width: \"35%\"}}>\n                    <NewItemColorButton fullWidth={\"false\"} onClick={(e)=>handleFormModalOpen(\"NewOrderForm\")} style={{outline:\"none\"}}>\n                        <AddIcon></AddIcon> Place An Order\n                    </NewItemColorButton>\n            <List style={{backgroundColor:themeContext.themes === \"dark\" ? \"#444444\" : \"white\",borderRadius:\"8px\",paddingTop:\"0px\"}} component=\"nav\" aria-label=\"main mailbox folders\">\n                        {Object.values(patient.orders).map((med,index)=>{\n                            if (med.type === \"physical\") return\n                            const noted =med.created_at.split(\" \")\n                            const notedDate = noted.slice(0,4).join(\" \")\n                            return(\n                                <>\n                            {selectedIndex !== index && selectedIndex !== index - 1 ? <Divider style={{ width: \"100%\" }}/> : <Divider style={{ width:\"100%\" }} light />}\n                            <ButtonBase\n                                style={{\n                                    width: \"100%\",\n                                    outline:\"none\",\n                                }}\n                                // primary\n                                TouchRippleProps={{ classes: {...rippleClasses}}}\n                            >\n                                <div style={{width:\"100%\"}} className={classes.colorSplash}>\n                            <ListItem\n                                key={`list-item-${index}`}\n                                selected={selectedIndex === index}\n                                onClick={(event) => {\n                                    handleListItemClick(med, index)\n                                }}\n                                className={\"TaskPaperListItem\"}\n                                style={{ paddingTop: \"3px\", paddingBottom: \"3px\", outline: \"none\",\n                                backgroundColor: themeContext.themes === \"dark\" ? selectedIndex === index ? \"#999999\" : \"#444444\" : selectedIndex === index ? \"aliceblue\" : \"white\",\n                                color: themeContext.themes === \"light\" ? \"#444444\" : \"white\" }}\n                            >\n                                <div style={{display:\"flex\",flexDirection:\"row\",justifyContent:\"space-between\",width:\"100%\"}}>\n                                {/* <span style={{color:themeContext.themes === \"light\" ? \"#444444\" : \"lightgreen\"}}>{notedDate}</span>  */}\n                                <span style={{fontSize:\"18px\"}}>{med.name}</span> \n                                {console.log(\"current med boi\",med.current)}\n                               {med.status === \"Needs Scheduling\" ? <span style={{fontSize:\"18px\",background:\"yellowgreen\",padding:\"2px\", borderRadius:\"4px\",color:\"white\"}}>New</span> : med.status === \"Completed\" ? <span style={{color:\"white\",fontSize:\"18px\",background:\"darkgray\",padding:\"2px\", borderRadius:\"4px\"}}>Completed</span> : med.status === \"Scheduled\" ? <span style={{color:\"white\",fontSize:\"18px\",background:\"darkgray\",padding:\"2px\", borderRadius:\"4px\"}}>Scheduled</span> : <span style={{color:\"white\",fontSize:\"18px\",background:\"salmon\",padding:\"2px\", borderRadius:\"4px\"}}>Canceled</span> }\n                                </div>\n                                <span className={\"MuiTouchRipple-root\" + \" \" + \"rainbow\" + \" \" + \"party\"}></span>\n                            </ListItem>\n                            </div>\n                            </ButtonBase>\n                            </>\n                            )\n                        })}\n                </List>\n                </div>\n                {selectedMed.name && provider.first_name ? \n                <div style={{borderRadius:\"4px\",\n                marginLeft:\"10px\",\n                boxShadow:\"rgba(6, 24, 44, 0.4) 0px 0px 0px 2px, rgba(6, 24, 44, 0.65) 0px 4px 6px -1px, rgba(255, 255, 255, 0.08) 0px 1px 0px inset\",\n                overflow:\"scroll\",maxHeight:\"450px\",\n                display:\"flex\",flexDirection:\"column\",width:\"65%\",color:themeContext.themes === \"dark\" ? \"white\" : \"#444444\",background:themeContext.themes === \"dark\" ? \"#444444\" : \"#f9f9f9\"}}>\n                    <div style={{display:\"flex\",flexDirection:\"column\",width:\"100%\",color:themeContext.themes === \"dark\" ? \"white\" : \"#444444\",background:themeContext.themes === \"dark\" ? \"#444444\" : \"white\"}}>\n                    <span style={{color:\"white\",fontSize:\"24px\",background:themeContext.themes === \"dark\" ? \"#222222\" : \"darkgrey\" ,padding:\"2px\",paddingLeft:\"10px\", paddingRight:\"10px\"}}>{selectedMed.status}</span>\n                    <div style={{display:\"flex\",flexDirection:\"row\",alignItems:\"center\",justifyContent:\"space-between\",padding:\"10px\"}}>\n                        <h2 style={{color:\"cornflowerblue\"}}>{selectedMed.name}</h2>\n                        <span style={{marginLeft:\"20px\",color:\"salmon\"}}>\n                            {\" \" + selectedMed.cui}\n                        </span>\n                        {selectedMed.status === \"Canceled\" ? <GreenColorButton onClick={handleRestart}>Mark as new</GreenColorButton>: <ColorButton onClick={handleDiscontinue}>\n                            Cancel\n                        </ColorButton>}\n                    </div>\n                        <Divider style={{ width: \"100%\" }} light={true} />\n                        <div style={{display:\"flex\",flexDirection:\"column\"}}>\n                            <div style={{display:\"flex\",flexDirection:\"row\",justifyContent:\"space-between\",padding:\"5px\",paddingLeft:\"50px\",paddingRight:\"50px\"}}>\n                                Order Placed: <span>{selectedMed.created_at}</span>\n                            </div>\n                            <Divider style={{ width: \"100%\"}} light={true} />\n                            <div style={{background:themeContext.themes === \"dark\" ? \"\" : \"#f9f9f9\",display:\"flex\",flexDirection:\"column\",justifyContent:\"space-between\",padding:\"5px\",paddingLeft:\"50px\",paddingRight:\"50px\"}}>\n\n                                <div style={{color:\"cornflowerblue\"}}>Order Notes:</div> \n                                {!showInstructionEdit ? \n                                <>\n                                <div style={{display:\"flex\",flexDirection:\"column\",marginLeft:\"20px\",marginRight:\"20px\"}}>\n                                <div className={themeContext.themes === \"dark\" ? classes.patientInstructionsDark: classes.patientInstructions} onClick={(e)=>{setShowInstructionEdit(true)}} rows={4} style={{border:themeContext.themes === \"dark\" ? \"2px solid grey\" : \"2px solid grey\", borderRadius:\"4px\",width:\"100%\",padding:\"10px\"}}>{!selectedMedInstructions ? \"Empty\" : selectedMedInstructions}</div>\n                                <div style={{display:\"flex\",marginLeft:\"40px\"}}><BlueColorButton onClick={(e)=>{setShowInstructionEdit(true)}}><EditIcon style={{marginRight:\"4px\"}}/>Edit</BlueColorButton> </div>\n                                </div>\n                                </>\n                                 : \n                                 <div style={{display:\"flex\",flexDirection:\"column\",marginLeft:\"20px\",marginRight:\"20px\"}}>\n                                    <TextareaAutosize rows={4} style={{outline:\"none\",border:\"2px solid cornflowerblue\", borderRadius:\"4px\",width:\"100%\"}} onChange={(e)=>setSelectedMedInstructions(e.target.value)} value={!selectedMedInstructions ? \"\" : selectedMedInstructions}></TextareaAutosize>\n                                    <div style={{display:\"flex\",flexDirection:\"row\",marginLeft:\"40px\"}}>\n                                    <NewItemColorButton onClick={handleSave}> Save </NewItemColorButton>\n                                    <ColorButton onClick={handleCancel}>Cancel</ColorButton>\n                                    </div>\n                                </div>}\n                            </div>\n                            <Divider style={{ width: \"100%\"}} light={true} />\n                            <div style={{display:\"flex\",flexDirection:\"row\",justifyContent:\"space-between\",alignItems:\"center\",padding:\"5px\",paddingLeft:\"50px\",paddingRight:\"50px\"}}>\n                                Ordering Provider:\n                                <div style={{display:\"flex\",flexDirection:\"row\",justifyContent:\"center\",alignItems:\"center\",background:themeContext.themes === \"dark\" ? \"transparent\" : \"aliceblue\",borderRadius:\"30px\", padding:\"7px\",fontSize:\"18px\",border:themeContext.themes===\"dark\" ? \"2px solid cornflowerblue\" : \"\"}}>\n                                    {provider.picture ? <Avatar src={`${provider.picture}`} className={classes.large}></Avatar>\n                                    : <Avatar className={classes.large}>{provider.first_name[0] + \" \" + provider.last_name[0]}</Avatar>}\n                                    <div style={{display:\"flex\",flexDirection:\"column\",justifyContent:\"center\", marginLeft:\"5px\"}}>\n                                        <span style={{color:themeContext.themes === \"dark\" ? \"white\" : \"cornflowerblue\"}}>{provider.full_name}</span>\n                                        <span style={{color:themeContext.themes === \"dark\" ? \"white\" : \"yellowgreen\"}}>{provider.specialty}</span>\n                                    </div>\n                                    </div>\n                            </div>\n                            <Divider style={{ width: \"100%\"}} light={true} />\n                            <div style={{display:\"flex\",flexDirection:\"row\",justifyContent:\"space-between\"}}>\n                                </div>\n                            <div style={{display:\"flex\",flexDirection:\"row\",justifyContent:\"space-between\"}}>\n\n                            </div>\n                        </div>\n\n                    </div>\n                    <h5 style={{padding:\"10px\",color:\"cornflowerblue\"}}>Unified Medical Language Definitions: </h5>\n                    {selectedItemDefinitions.map((def,index)=>{\n                        return (\n                        <div key={index} style={{width:\"100%\", display:\"flex\",flexDirection:\"column\"}}>\n                        <div style={{display:\"flex\",flexDirection:\"space-between\", alignItems:\"center\"}}>\n                            <span style={{padding:\"20px\"}}>{def.source}:</span><span style={{color:themeContext.themes === \"dark\" ? \"darkgray\" : \"grey\"}}>{def.value}</span>\n                        </div>\n                        <Divider style={{ color:\"cornflowerblue\",width: \"100%\", backgroundColor:themeContext.themes === \"dark\" ? \"white\" : \"#666666\" }} light={true} />\n                        </div>\n                        )\n                    })}\n                </div> : \n                <div style={{borderRadius:\"4px\",\n                marginLeft:\"10px\",\n                // boxShadow:\"rgba(6, 24, 44, 0.4) 0px 0px 0px 2px, rgba(6, 24, 44, 0.65) 0px 4px 6px -1px, rgba(255, 255, 255, 0.08) 0px 1px 0px inset\",\n                overflow:\"scroll\",maxHeight:\"450px\",\n                justifyContent:\"center\",alignItems:\"center\",\n                display:\"flex\",flexDirection:\"column\",width:\"65%\",color:themeContext.themes === \"dark\" ? \"white\" : \"#888888\",background:\"transparent\"}}>\n                    <img src=\"https://saga-health.s3-us-west-1.amazonaws.com/reasons-people-avoid-mental-health-treatment-removebg-preview.png\" style={{width:\"400px\"}}></img>\n                    <div>Select an order to expand.</div>\n                </div>}\n                </div>\n                </Fade>\n      <Modal\n        aria-labelledby=\"transition-modal-title\"\n        aria-describedby=\"transition-modal-description\"\n        className={classes.modal}\n        open={formModalOpen}\n        onClose={handleFormModalClose}\n        closeAfterTransition\n        BackdropComponent={Backdrop}\n        BackdropProps={{\n          timeout: 200\n        }}\n      >\n        <Slide direction=\"up\" in={formModalOpen}>\n          <div className={classes.modalPaper} style={{autooverflow:\"hidden\",display:\"flex\",outline:\"none\",backgroundColor: themeContext.themes === \"dark\" ? \"#444444\" : \"white\",color: themeContext.themes === \"dark\" ? \"white\" : \"#444444\",padding:\"0\",overflow:\"hidden\"}}>\n          {modalForm === \"NewMedicationForm\" ? <NewMedicationForm patient={props.patient}></NewMedicationForm> : <></> }\n          {modalForm === \"NewOrderForm\" ? <NewOrderForm patient={props.patient}></NewOrderForm> : <></> }\n          {modalForm === \"NewMentalProblemForm\" ? <NewMentalProblemForm patient={props.patient}></NewMentalProblemForm> : <></> }\n          {modalForm === \"NewPhysicalProblemForm\" ? <NewPhysicalProblemForm patient={props.patient}></NewPhysicalProblemForm> : <></> }\n          </div>\n        </Slide>\n      </Modal>\n        </>\n    );\n}\n\nexport default PatientProblemList;","import React, { useContext, useEffect,useState } from 'react';\nimport {openPatientChart} from '../store/activities'\nimport { useDispatch, useSelector } from 'react-redux';\nimport HomeContext from './utils/HomeContext';\nimport ExitToAppTwoToneIcon from '@material-ui/icons/ExitToAppTwoTone';\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Modal from '@material-ui/core/Modal';\nimport Backdrop from '@material-ui/core/Backdrop';\nimport Divider from '@material-ui/core/Divider';\nimport HomeTwoToneIcon from '@material-ui/icons/HomeTwoTone';\nimport HomeIcon from '@material-ui/icons/Home';\nimport StayCurrentPortraitIcon from '@material-ui/icons/StayCurrentPortrait';\nimport StayPrimaryPortraitTwoToneIcon from '@material-ui/icons/StayPrimaryPortraitTwoTone';\nimport BusinessTwoToneIcon from '@material-ui/icons/BusinessTwoTone';\nimport ContactMailIcon from '@material-ui/icons/ContactMail';\nimport ContactMailTwoToneIcon from '@material-ui/icons/ContactMailTwoTone';\nimport ThemeContext from './utils/ThemeContext';\nimport Slide from '@material-ui/core/Slide';\nimport ListItem from '@material-ui/core/ListItem';\nimport ButtonBase from \"@material-ui/core/ButtonBase\";\nimport List from '@material-ui/core/List';\nimport PatientChartContext from './utils/PatientChartContext';\nimport { Accordion, AccordionDetails, AccordionSummary, Avatar, Grid, Fade, IconButton, TextareaAutosize } from '@material-ui/core';\nimport PatientEncountersList from './PatientEncountersList';\nimport PatientOrdersList from './PatientOrdersList';\nimport AddIcon from '@material-ui/icons/Add';\nimport NewMedicationForm from './NewMedicationForm';\nimport NewMentalProblemForm from './newMentalProblemForm';\nimport NewPhysicalProblemForm from './NewPhysicalProblemForm';\nimport NewOrderForm from './NewOrderForm';\nimport {updateMedication, updateOrder, updateProblem} from '../store/current_patient';\nimport EditIcon from '@material-ui/icons/Edit';\n\nconst NewItemColorButton = withStyles((theme) => ({\n    root: {\n        color: \"white\",\n        paddingRight: \"10px\",\n        paddingLeft: \"10px\",\n        margin: \"4px\",\n        outline:\"none\",\n        width:\"fit-content\",\n        backgroundColor:\"#a9a9a9\",\n        '&:hover': {\n            backgroundColor: \"yellowgreen !important\",\n        },\n    },\n    }))(Button);\n\nconst GreenColorButton = withStyles((theme) => ({\n    root: {\n        color: \"white\",\n        paddingRight: \"10px\",\n        paddingLeft: \"10px\",\n        outline:\"none\",\n        margin: \"4px\",\n        backgroundColor:\"#a9a9a9\",\n        '&:hover': {\n            backgroundColor: \"yellowgreen !important\",\n        }\n    },\n    }))(Button);\n\n\nconst ColorButton = withStyles((theme) => ({\n    root: {\n        color: \"white\",\n        paddingRight: \"10px\",\n        paddingLeft: \"10px\",\n        outline:\"none\",\n        margin: \"4px\",\n        backgroundColor:\"#a9a9a9\",\n        border:\"1px solid #a9a9a9\",\n        '&:hover': {\n            backgroundColor: \"#ed462f !important\",\n            color:\"white\",\n            border:\"1px solid #ed462f\",\n        }\n    },\n    }))(Button);\n    const BlueColorButton = withStyles((theme) => ({\n        root: {\n            color: \"white\",\n            paddingRight: \"10px\",\n            paddingLeft: \"10px\",\n            outline:\"none\",\n            margin: \"4px\",\n            width:\"fit-content\",\n            backgroundColor:\"#a9a9a9\",\n            '&:hover': {\n                backgroundColor: \"dodgerblue !important\",\n            },\n        },\n        }))(Button);\n\n\n    const useStyles = makeStyles((theme) => ({\n        colorSpash: {\n            backgroundColor: \"lightgreen\",\n        },\n        child: {\n            backgroundColor: 'blue',\n            backgroundImage: `\"${\"url(\\\"../images/159960637489457530 (1).png\\\")\"}`\n        },\n        large: {\n            width: theme.spacing(7),\n            height: theme.spacing(7),\n          },\n        rippleVisible: {\n            opacity: 0.5,\n            animation: `$enter 550ms ${theme.transitions.easing.easeInOut}`\n        },\n        \"@keyframes enter\": {\n            \"0%\": {\n                transform: \"scale(0)\",\n                opacity: 0.2\n            },\n            \"100%\": {\n                transform: \"scale(1)\",\n                opacity: 0.5\n            }\n        },\n        [`${\"MuiTouchRipple-root\"}`]: {\n            top: 0,\n            left: 0,\n            right: 0,\n            bottom: 0,\n            zIndex: 0,\n            overflow: \"hidden\",\n            position: \"absolute\",\n            borderRadius: \"inherit\",\n            pointerEvents: \"none\",\n            color:\"blue\",\n            display: \"none\"\n        },\n        polygon: {\n            fill: theme.palette.common.white,\n            stroke: theme.palette.divider,\n            strokeWidth: 1,\n        },\n        touchRipple:{\n            opacity: 1,\n            color: `lightgreen`,\n        },\n        paper: {\n            backgroundColor: theme.palette.background.paper,\n            boxShadow: theme.shadows[5],\n            outline: \"none\",\n            padding: theme.spacing(2, 4, 3),\n            boxSizing: \"auto\"\n        },\n        modal: {\n            display: 'flex',\n            alignItems: 'center',\n            justifyContent: 'center',\n          },\n        modalPaper: {\n            boxShadow: theme.shadows[5],\n            padding: theme.spacing(2, 4, 3),\n          },\n        patientInstructions : {\n            cursor:\"pointer\",\n            transition:\"all .3s ease-in-out\",\n            '&:hover': {\n                background:\"gainsboro\"\n            }\n        \n        },\n        patientInstructionsDark : {\n            cursor:\"pointer\",\n            transition:\"all .3s ease-in-out\",\n            '&:hover': {\n                background:\"grey\"\n            }\n        }\n    }));\n\nfunction PatientProblemList(props) { \n    const classes = useStyles()\n    console.log(\"prs!!\",props.patient)\n    console.log(\"ptheseasdfadfddd\",{...props.patient})\n    \n    const context = useContext(PatientChartContext)\n    const themeContext = useContext(ThemeContext)\n    const dispatch = useDispatch()\n    const openTabs = useSelector(state=>state.activities.open_tabs)\n    const [patient,setPatient] = useState(props.patient)\n    const [medsArray,setMedsArray] = useState([])\n    const [selectedIndex, setSelectedIndex] = useState();\n    const [previewCui,setPreviewCui] = useState(\"\")\n    const [selectedItemDefinitions,setSelectedItemDefinitions] = useState([])\n    const [selectedMed,setSelectedMed] = useState({})\n    const [selectedMedProviderId,setSelectedMedProviderId]=useState(\"\")\n    const [provider,setProvider]=useState({})\n    const [formModalOpen, setFormModalOpen] = useState(false);\n    const [modalForm, setModalForm] = useState(\"\")\n    const [showInstructionEdit,setShowInstructionEdit] = useState(false)\n    const [selectedMedInstructions,setSelectedMedInstructions] = useState(\"\")\n\n    // console.log(props.patient)\n    const [loading,setLoading] = useState(true)\n\n    const handleListItemClick = (med, index) => {\n        setShowInstructionEdit(false)\n        setSelectedMedProviderId(med.provider_id)\n        setSelectedMed(med)\n        setSelectedMedInstructions(med.note)\n        setSelectedIndex(index)\n    };\n\n    const handleFormModalOpen = (modalForm) => {\n        setModalForm(modalForm)\n        console.log(modalForm)\n        setFormModalOpen(true);\n    };\n  \n    const handleFormModalClose = () => {\n        setModalForm(\"\")\n        setFormModalOpen(false);\n    };\n\n    useEffect(()=>{\n        if (props.patient.problems) {\n            setPatient(props.patient)\n            setLoading(false)\n        }\n    },[props.patient])\n\n    useEffect(()=>{\n        const searchForCui = async (cui) => {\n            if (cui=== \"\") return;\n            const response = await fetch(`/api/umls/search-cui/${cui}`)\n            const data = await response.json()\n            const definitions = data.definitions.map(def=>{\n                return (\n                    {\n                        value: def.value,\n                        source: def.rootSource\n                    }\n                )\n            })\n            setSelectedItemDefinitions(definitions)\n            console.log(data)\n        }\n        if (previewCui !== \"\") {\n            searchForCui(previewCui)\n        }\n    },[previewCui])\n\n    const handleSave =()=>{\n        const newMed = {...selectedMed}\n        newMed.instructions = selectedMedInstructions\n        setSelectedMed(newMed)\n        setSelectedMedInstructions(selectedMedInstructions)\n        setShowInstructionEdit(false)\n        dispatch(updateOrder({id:selectedMed.id,note:selectedMedInstructions,status:selectedMed.status}))\n    }\n\n    const handleCancel = () => {\n        setSelectedMedInstructions(selectedMed.note)\n        setShowInstructionEdit(false)\n    }\n\n    const handleDiscontinue = () => {\n        const newMed = {...selectedMed}\n        newMed.status = \"Canceled\"\n        setSelectedMed(newMed)\n        dispatch(updateOrder({id:selectedMed.id,status:\"Canceled\",note:selectedMedInstructions}))\n    }\n\n    const handleRestart = () => {\n        const newMed = {...selectedMed}\n        newMed.status = \"Needs Scheduling\"\n        setSelectedMed(newMed)\n        dispatch(updateOrder({id:selectedMed.id,status:\"Needs Scheduling\",note:selectedMedInstructions}))\n    }\n\n\n    // useEffect(()=>{\n    //     const updateItem = async (item) => {\n    //         const response = await fetch(`/api/providers/photo/${providerId}`,{\n    //             method:\"post\",\n                \n    //         })\n    //         const data = await response.json()\n    //     }\n    // },[updateRecord])\n\n    useEffect(()=>{\n        const searchForDoc = async (providerId) => {\n            console.log(\"providerID:: \",providerId)\n            if (providerId === \"\") return;\n            const response = await fetch(`/api/providers/photo/${providerId}`)\n            const data = await response.json()\n            setProvider(data.provider)\n        }\n        if (selectedMedProviderId !== \"\") {\n            searchForDoc(selectedMedProviderId)\n        }\n    },[selectedMedProviderId])\n\n    if (loading) {\n        return \"\"\n    }\n    const rippleClasses = { rippleVisible: classes.rippleVisible, child: classes.child, [`${\"@keyframes enter\"}`]: classes[`${\"@keyframes enter\"}`] }\n\n\n    return (\n        <>  \n            <Fade in={loading === false}>\n            <div style={{display:\"flex\",flexDirection:\"row\",width:\"100%\"}}>\n                    <div style={{display:\"flex\",flexDirection:\"column\",width: \"35%\"}}>\n                    {/* <NewItemColorButton fullWidth={\"false\"} onClick={(e)=>handleFormModalOpen(\"NewOrderForm\")} style={{outline:\"none\"}}>\n                        <AddIcon></AddIcon> Place An Order\n                    </NewItemColorButton> */}\n            <List style={{backgroundColor:themeContext.themes === \"dark\" ? \"#444444\" : \"white\",borderRadius:\"8px\",paddingTop:\"0px\",overflow:\"scroll\",maxHeight:\"500px\"}} component=\"nav\" aria-label=\"main mailbox folders\">\n                        {Object.values(patient.encounters).map((med,index)=>{\n                            const noted =med.date.split(\" \")\n                            const notedDate = noted.slice(0,4).join(\" \")\n                            return(\n                                <>\n                            {selectedIndex !== index && selectedIndex !== index - 1 ? <Divider style={{ width: \"100%\" }}/> : <Divider style={{ width:\"100%\" }} light />}\n                            <ButtonBase\n                                style={{\n                                    width: \"100%\",\n                                    outline:\"none\",\n                                }}\n                                // primary\n                                TouchRippleProps={{ classes: {...rippleClasses}}}\n                            >\n                                <div style={{width:\"100%\"}} className={classes.colorSplash}>\n                            <ListItem\n                                key={`list-item-${index}`}\n                                selected={selectedIndex === index}\n                                onClick={(event) => {\n                                    handleListItemClick(med, index)\n                                }}\n                                className={\"TaskPaperListItem\"}\n                                style={{ paddingTop: \"3px\", paddingBottom: \"3px\", outline: \"none\",\n                                backgroundColor: themeContext.themes === \"dark\" ? selectedIndex === index ? \"#999999\" : \"#444444\" : selectedIndex === index ? \"aliceblue\" : \"white\",\n                                color: themeContext.themes === \"light\" ? \"#444444\" : \"white\" }}\n                            >\n                                <div style={{display:\"flex\",flexDirection:\"row\",justifyContent:\"space-between\",width:\"100%\"}}>\n                                {/* <span style={{color:themeContext.themes === \"light\" ? \"#444444\" : \"lightgreen\"}}>{notedDate}</span>  */}\n                                <span style={{fontSize:\"18px\"}}>{notedDate}</span> \n                                {med.orders.length ? <span style={{fontSize:\"18px\",background:\"darkgrey\",padding:\"2px\",paddingLeft:\"5px\",paddingRight:\"5px\", borderRadius:\"4px\",color:\"white\"}}>{med.orders[0].name} </span> : \"\"}\n                               {/* {med.status === \"Needs Scheduling\" ? <span style={{fontSize:\"18px\",background:\"yellowgreen\",padding:\"2px\", borderRadius:\"4px\",color:\"white\"}}>New</span> : med.status === \"Completed\" ? <span style={{color:\"white\",fontSize:\"18px\",background:\"darkgray\",padding:\"2px\", borderRadius:\"4px\"}}>Completed</span> : med.status === \"Scheduled\" ? <span style={{color:\"white\",fontSize:\"18px\",background:\"darkgray\",padding:\"2px\", borderRadius:\"4px\"}}>Scheduled</span> : <span style={{color:\"white\",fontSize:\"18px\",background:\"salmon\",padding:\"2px\", borderRadius:\"4px\"}}>Canceled</span> } */}\n                                </div>\n                                <span className={\"MuiTouchRipple-root\" + \" \" + \"rainbow\" + \" \" + \"party\"}></span>\n                            </ListItem>\n                            </div>\n                            </ButtonBase>\n                            </>\n                            )\n                        })}\n                </List>\n                </div>\n                {selectedMed.provider_id && provider.first_name ? \n                <div style={{borderRadius:\"4px\",\n                marginLeft:\"10px\",\n                boxShadow:\"rgba(6, 24, 44, 0.4) 0px 0px 0px 2px, rgba(6, 24, 44, 0.65) 0px 4px 6px -1px, rgba(255, 255, 255, 0.08) 0px 1px 0px inset\",\n                overflow:\"scroll\",maxHeight:\"450px\",\n                display:\"flex\",flexDirection:\"column\",width:\"65%\",color:themeContext.themes === \"dark\" ? \"white\" : \"#444444\",background:themeContext.themes === \"dark\" ? \"#444444\" : \"#f9f9f9\"}}>\n                    <div style={{display:\"flex\",flexDirection:\"column\",width:\"100%\",color:themeContext.themes === \"dark\" ? \"white\" : \"#444444\",background:themeContext.themes === \"dark\" ? \"#444444\" : \"white\"}}>\n                    {/* <span style={{color:\"white\",fontSize:\"24px\",background:themeContext.themes === \"dark\" ? \"#222222\" : \"darkgrey\" ,padding:\"2px\",paddingLeft:\"10px\", paddingRight:\"10px\"}}>{selectedMed.status}</span> */}\n                    <div style={{display:\"flex\",flexDirection:\"row\",alignItems:\"center\",justifyContent:\"space-between\",padding:\"10px\"}}>\n                        <h2 style={{color:\"cornflowerblue\"}}>Encounter on <span style={{color:\"darkgrey\"}}>{selectedMed.date.split(\" \").slice(0,4).join(\" \")}</span></h2>\n                        {/* {console.log(selectedMed.orders)}\n                        {selectedMed.status === \"Canceled\" ? <GreenColorButton onClick={handleRestart}>Mark as new</GreenColorButton>: <ColorButton onClick={handleDiscontinue}>\n                            Cancel\n                        </ColorButton>} */}\n                    </div>\n                        <Divider style={{ width: \"100%\" }} light={true} />\n                        <div style={{display:\"flex\",flexDirection:\"row\",justifyContent:\"space-between\",alignItems:\"center\",padding:\"5px\",paddingLeft:\"50px\",paddingRight:\"50px\"}}>\n                                Primary Encounter Provider:\n                                <div style={{display:\"flex\",flexDirection:\"row\",justifyContent:\"center\",alignItems:\"center\",background:themeContext.themes === \"dark\" ? \"transparent\" : \"aliceblue\",borderRadius:\"30px\", padding:\"7px\",fontSize:\"18px\",border:themeContext.themes===\"dark\" ? \"2px solid cornflowerblue\" : \"\"}}>\n                                    {provider.picture ? <Avatar src={`${provider.picture}`} className={classes.large}></Avatar>\n                                    : <Avatar className={classes.large}>{provider.first_name[0] + \" \" + provider.last_name[0]}</Avatar>}\n                                    <div style={{display:\"flex\",flexDirection:\"column\",justifyContent:\"center\", marginLeft:\"5px\"}}>\n                                        <span style={{color:themeContext.themes === \"dark\" ? \"white\" : \"cornflowerblue\"}}>{provider.full_name}</span>\n                                        <span style={{color:themeContext.themes === \"dark\" ? \"white\" : \"yellowgreen\"}}>{provider.specialty}</span>\n                                    </div>\n                                    </div>\n                            </div>\n                            <Divider style={{ width: \"100%\"}} light={true} />\n                        <div style={{display:\"flex\",flexDirection:\"column\"}}>\n                            {selectedMed.orders.length ? \n                            <div style={{display:\"flex\",flexDirection:\"column\"}}>\n                            <div style={{alignSelf:\"center\"}}>Encounter Order Details</div>\n                            <div style={{display:\"flex\",flexDirection:\"row\",justifyContent:\"space-between\",padding:\"5px\",paddingLeft:\"50px\",paddingRight:\"50px\"}}>\n                                Procedure: <span style={{fontSize:\"18px\",padding:\"2px\",paddingLeft:\"5px\",paddingRight:\"5px\",background:\"yellowgreen\", borderRadius:\"4px\",color:\"white\"}}>{selectedMed.orders[0].name}</span>\n                            </div>\n                            <div style={{display:\"flex\",flexDirection:\"row\",justifyContent:\"space-between\",padding:\"5px\",paddingLeft:\"50px\",paddingRight:\"50px\"}}>\n                                Placed: <span>{selectedMed.orders[0].created_at}</span>\n                            </div>\n                            <div style={{display:\"flex\",flexDirection:\"row\",justifyContent:\"space-between\",padding:\"5px\",paddingLeft:\"50px\",paddingRight:\"50px\"}}>\n                                Status: <span>{selectedMed.orders[0].status}</span>\n                            </div>\n                            </div>\n                            : \n                            \"\"\n                            }\n                            <Divider style={{ width: \"100%\"}} light={true} />\n                            <div style={{background:themeContext.themes === \"dark\" ? \"\" : \"#f9f9f9\",display:\"flex\",flexDirection:\"column\",justifyContent:\"space-between\",padding:\"5px\",paddingLeft:\"50px\",paddingRight:\"50px\"}}>\n\n                                <div style={{color:\"cornflowerblue\"}}>Encounter Notes:</div> \n                                {!showInstructionEdit ? \n                                <>\n                                <div style={{display:\"flex\",flexDirection:\"column\",marginLeft:\"20px\",marginRight:\"20px\"}}>\n                                <div className={themeContext.themes === \"dark\" ? classes.patientInstructionsDark: classes.patientInstructions} onClick={(e)=>{setShowInstructionEdit(true)}} rows={4} style={{border:themeContext.themes === \"dark\" ? \"2px solid grey\" : \"2px solid grey\", borderRadius:\"4px\",width:\"100%\",padding:\"10px\"}}>{!selectedMedInstructions ? \"Empty\" : selectedMedInstructions}</div>\n                                <div style={{display:\"flex\",marginLeft:\"40px\"}}><BlueColorButton onClick={(e)=>{setShowInstructionEdit(true)}}><EditIcon style={{marginRight:\"4px\"}}/>Edit</BlueColorButton> </div>\n                                </div>\n                                </>\n                                 : \n                                 <div style={{display:\"flex\",flexDirection:\"column\",marginLeft:\"20px\",marginRight:\"20px\"}}>\n                                    <TextareaAutosize rows={4} style={{outline:\"none\",border:\"2px solid cornflowerblue\", borderRadius:\"4px\",width:\"100%\"}} onChange={(e)=>setSelectedMedInstructions(e.target.value)} value={!selectedMedInstructions ? \"\" : selectedMedInstructions}></TextareaAutosize>\n                                    <div style={{display:\"flex\",flexDirection:\"row\",marginLeft:\"40px\"}}>\n                                    <NewItemColorButton onClick={handleSave}> Save </NewItemColorButton>\n                                    <ColorButton onClick={handleCancel}>Cancel</ColorButton>\n                                    </div>\n                                </div>}\n                            </div>\n                            <Divider style={{ width: \"100%\"}} light={true} />\n                            <div style={{display:\"flex\",flexDirection:\"row\",justifyContent:\"space-between\"}}>\n                                </div>\n                            <div style={{display:\"flex\",flexDirection:\"row\",justifyContent:\"space-between\"}}>\n\n                            </div>\n                        </div>\n\n                    </div>\n                    {/* <h5 style={{padding:\"10px\",color:\"cornflowerblue\"}}>Unified Medical Language Definitions: </h5>\n                    {selectedItemDefinitions.map((def,index)=>{\n                        return (\n                        <div key={index} style={{width:\"100%\", display:\"flex\",flexDirection:\"column\"}}>\n                        <div style={{display:\"flex\",flexDirection:\"space-between\", alignItems:\"center\"}}>\n                            <span style={{padding:\"20px\"}}>{def.source}:</span><span style={{color:themeContext.themes === \"dark\" ? \"darkgray\" : \"grey\"}}>{def.value}</span>\n                        </div>\n                        <Divider style={{ color:\"cornflowerblue\",width: \"100%\", backgroundColor:themeContext.themes === \"dark\" ? \"white\" : \"#666666\" }} light={true} />\n                        </div>\n                        )\n                    })} */}\n                </div> : \n                <div style={{borderRadius:\"4px\",\n                marginLeft:\"10px\",\n                // boxShadow:\"rgba(6, 24, 44, 0.4) 0px 0px 0px 2px, rgba(6, 24, 44, 0.65) 0px 4px 6px -1px, rgba(255, 255, 255, 0.08) 0px 1px 0px inset\",\n                overflow:\"scroll\",maxHeight:\"450px\",\n                justifyContent:\"center\",alignItems:\"center\",\n                display:\"flex\",flexDirection:\"column\",width:\"65%\",color:themeContext.themes === \"dark\" ? \"white\" : \"#888888\",background:\"transparent\"}}>\n                    <img src=\"https://saga-health.s3-us-west-1.amazonaws.com/22f753e82862f39c5b374d443012f720-removebg-preview+(1).png\" style={{width:\"400px\"}}></img>\n                    <div>Select an encounter to expand.</div>\n                </div>}\n                </div>\n                </Fade>\n      <Modal\n        aria-labelledby=\"transition-modal-title\"\n        aria-describedby=\"transition-modal-description\"\n        className={classes.modal}\n        open={formModalOpen}\n        onClose={handleFormModalClose}\n        closeAfterTransition\n        BackdropComponent={Backdrop}\n        BackdropProps={{\n          timeout: 200\n        }}\n      >\n        <Slide direction=\"up\" in={formModalOpen}>\n          <div className={classes.modalPaper} style={{autooverflow:\"hidden\",display:\"flex\",outline:\"none\",backgroundColor: themeContext.themes === \"dark\" ? \"#444444\" : \"white\",color: themeContext.themes === \"dark\" ? \"white\" : \"#444444\",padding:\"0\",overflow:\"hidden\"}}>\n          {modalForm === \"NewMedicationForm\" ? <NewMedicationForm patient={props.patient}></NewMedicationForm> : <></> }\n          {modalForm === \"NewOrderForm\" ? <NewOrderForm patient={props.patient}></NewOrderForm> : <></> }\n          {modalForm === \"NewMentalProblemForm\" ? <NewMentalProblemForm patient={props.patient}></NewMentalProblemForm> : <></> }\n          {modalForm === \"NewPhysicalProblemForm\" ? <NewPhysicalProblemForm patient={props.patient}></NewPhysicalProblemForm> : <></> }\n          </div>\n        </Slide>\n      </Modal>\n        </>\n    );\n}\n\nexport default PatientProblemList;","import React, { useContext, useEffect,useState } from 'react';\nimport {openPatientChart} from '../store/activities'\nimport { useDispatch, useSelector } from 'react-redux';\nimport HomeContext from './utils/HomeContext';\nimport ExitToAppTwoToneIcon from '@material-ui/icons/ExitToAppTwoTone';\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Modal from '@material-ui/core/Modal';\nimport Backdrop from '@material-ui/core/Backdrop';\nimport Divider from '@material-ui/core/Divider';\nimport HomeTwoToneIcon from '@material-ui/icons/HomeTwoTone';\nimport HomeIcon from '@material-ui/icons/Home';\nimport StayCurrentPortraitIcon from '@material-ui/icons/StayCurrentPortrait';\nimport StayPrimaryPortraitTwoToneIcon from '@material-ui/icons/StayPrimaryPortraitTwoTone';\nimport BusinessTwoToneIcon from '@material-ui/icons/BusinessTwoTone';\nimport ContactMailIcon from '@material-ui/icons/ContactMail';\nimport ContactMailTwoToneIcon from '@material-ui/icons/ContactMailTwoTone';\nimport ThemeContext from './utils/ThemeContext';\nimport Slide from '@material-ui/core/Slide';\nimport ListItem from '@material-ui/core/ListItem';\nimport ButtonBase from \"@material-ui/core/ButtonBase\";\nimport List from '@material-ui/core/List';\nimport PatientChartContext from './utils/PatientChartContext';\nimport { Accordion, AccordionDetails, AccordionSummary, Avatar,Fade, Grid, IconButton, TextareaAutosize } from '@material-ui/core';\nimport PatientEncountersList from './PatientEncountersList';\nimport PatientOrdersList from './PatientOrdersList';\nimport AddIcon from '@material-ui/icons/Add';\nimport NewMedicationForm from './NewMedicationForm';\nimport NewMentalProblemForm from './newMentalProblemForm';\nimport NewPhysicalProblemForm from './NewPhysicalProblemForm';\nimport NewOrderForm from './NewOrderForm';\nimport {updateMedication} from '../store/current_patient';\nimport EditIcon from '@material-ui/icons/Edit';\n\nconst NewItemColorButton = withStyles((theme) => ({\n    root: {\n        color: \"white\",\n        paddingRight: \"10px\",\n        paddingLeft: \"10px\",\n        margin: \"4px\",\n        outline:\"none\",\n        width:\"fit-content\",\n        backgroundColor:\"#a9a9a9\",\n        '&:hover': {\n            backgroundColor: \"yellowgreen !important\",\n        },\n    },\n    }))(Button);\n\nconst GreenColorButton = withStyles((theme) => ({\n    root: {\n        color: \"white\",\n        paddingRight: \"10px\",\n        paddingLeft: \"10px\",\n        outline:\"none\",\n        margin: \"4px\",\n        backgroundColor:\"#a9a9a9\",\n        '&:hover': {\n            backgroundColor: \"yellowgreen !important\",\n        }\n    },\n    }))(Button);\n\n\nconst ColorButton = withStyles((theme) => ({\n    root: {\n        color: \"white\",\n        paddingRight: \"10px\",\n        paddingLeft: \"10px\",\n        outline:\"none\",\n        margin: \"4px\",\n        backgroundColor:\"#a9a9a9\",\n        border:\"1px solid #a9a9a9\",\n        '&:hover': {\n            backgroundColor: \"#ed462f !important\",\n            color:\"white\",\n            border:\"1px solid #ed462f\",\n        }\n    },\n    }))(Button);\n    const BlueColorButton = withStyles((theme) => ({\n        root: {\n            color: \"white\",\n            paddingRight: \"10px\",\n            paddingLeft: \"10px\",\n            outline:\"none\",\n            margin: \"4px\",\n            width:\"fit-content\",\n            backgroundColor:\"#a9a9a9\",\n            '&:hover': {\n                backgroundColor: \"dodgerblue !important\",\n            },\n        },\n        }))(Button);\n\n\n    const useStyles = makeStyles((theme) => ({\n        colorSpash: {\n            backgroundColor: \"lightgreen\",\n        },\n        child: {\n            backgroundColor: 'blue',\n            backgroundImage: `\"${\"url(\\\"../images/159960637489457530 (1).png\\\")\"}`\n        },\n        large: {\n            width: theme.spacing(7),\n            height: theme.spacing(7),\n          },\n        rippleVisible: {\n            opacity: 0.5,\n            animation: `$enter 550ms ${theme.transitions.easing.easeInOut}`\n        },\n        \"@keyframes enter\": {\n            \"0%\": {\n                transform: \"scale(0)\",\n                opacity: 0.2\n            },\n            \"100%\": {\n                transform: \"scale(1)\",\n                opacity: 0.5\n            }\n        },\n        [`${\"MuiTouchRipple-root\"}`]: {\n            top: 0,\n            left: 0,\n            right: 0,\n            bottom: 0,\n            zIndex: 0,\n            overflow: \"hidden\",\n            position: \"absolute\",\n            borderRadius: \"inherit\",\n            pointerEvents: \"none\",\n            color:\"blue\",\n            display: \"none\"\n        },\n        polygon: {\n            fill: theme.palette.common.white,\n            stroke: theme.palette.divider,\n            strokeWidth: 1,\n        },\n        touchRipple:{\n            opacity: 1,\n            color: `lightgreen`,\n        },\n        paper: {\n            backgroundColor: theme.palette.background.paper,\n            boxShadow: theme.shadows[5],\n            outline: \"none\",\n            padding: theme.spacing(2, 4, 3),\n            boxSizing: \"auto\"\n        },\n        modal: {\n            display: 'flex',\n            alignItems: 'center',\n            justifyContent: 'center',\n          },\n        modalPaper: {\n            boxShadow: theme.shadows[5],\n            padding: theme.spacing(2, 4, 3),\n          },\n        patientInstructions : {\n            cursor:\"pointer\",\n            transition:\"all .3s ease-in-out\",\n            '&:hover': {\n                background:\"gainsboro\"\n            }\n        \n        },\n        patientInstructionsDark : {\n            cursor:\"pointer\",\n            transition:\"all .3s ease-in-out\",\n            '&:hover': {\n                background:\"grey\"\n            }\n        }\n    }));\n\nfunction PatientMedicationsList(props) { \n    const classes = useStyles()\n    console.log(\"prs!!\",props.patient)\n    console.log(\"ptheseasdfadfddd\",{...props.patient})\n    \n    const context = useContext(PatientChartContext)\n    const themeContext = useContext(ThemeContext)\n    const dispatch = useDispatch()\n    const openTabs = useSelector(state=>state.activities.open_tabs)\n    const [patient,setPatient] = useState(props.patient)\n    const [medsArray,setMedsArray] = useState([])\n    const [selectedIndex, setSelectedIndex] = React.useState();\n    const [previewCui,setPreviewCui] = useState(\"\")\n    const [selectedItemDefinitions,setSelectedItemDefinitions] = useState([])\n    const [selectedMed,setSelectedMed] = useState({})\n    const [selectedMedProviderId,setSelectedMedProviderId]=useState(\"\")\n    const [provider,setProvider]=useState({})\n    const [formModalOpen, setFormModalOpen] = useState(false);\n    const [modalForm, setModalForm] = useState(\"\")\n    const [showInstructionEdit,setShowInstructionEdit] = useState(false)\n    const [selectedMedInstructions,setSelectedMedInstructions] = useState(\"\")\n\n    // console.log(props.patient)\n    const [loading,setLoading] = useState(true)\n\n    const handleListItemClick = (med, index) => {\n        setShowInstructionEdit(false)\n        setSelectedMedProviderId(med.provider_id)\n        setSelectedMed(med)\n        setSelectedMedInstructions(med.instructions)\n        setPreviewCui(med.cui)\n        setSelectedIndex(index)\n    };\n\n    const handleFormModalOpen = (modalForm) => {\n        setModalForm(modalForm)\n        console.log(modalForm)\n        setFormModalOpen(true);\n    };\n  \n    const handleFormModalClose = () => {\n        setModalForm(\"\")\n        setFormModalOpen(false);\n    };\n\n    useEffect(()=>{\n        if (props.patient.problems) {\n            setMedsArray(Object.values(patient.medications))\n            setPatient(props.patient)\n            setLoading(false)\n        }\n    },[props.patient])\n\n    useEffect(()=>{\n        const searchForCui = async (cui) => {\n            if (cui=== \"\") return;\n            const response = await fetch(`/api/umls/search-cui/${cui}`)\n            const data = await response.json()\n            const definitions = data.definitions.map(def=>{\n                return (\n                    {\n                        value: def.value,\n                        source: def.rootSource\n                    }\n                )\n            })\n            setSelectedItemDefinitions(definitions)\n            console.log(data)\n        }\n        if (previewCui !== \"\") {\n            searchForCui(previewCui)\n        }\n    },[previewCui])\n\n    const handleSave =()=>{\n        const newMed = {...selectedMed}\n        newMed.instructions = selectedMedInstructions\n        setSelectedMed(newMed)\n        setSelectedMedInstructions(selectedMedInstructions)\n        setShowInstructionEdit(false)\n        dispatch(updateMedication({id:selectedMed.id,instructions:selectedMedInstructions,current:selectedMed.current}))\n    }\n\n    const handleCancel = () => {\n        setSelectedMedInstructions(selectedMed.instructions)\n        setShowInstructionEdit(false)\n    }\n\n    const handleDiscontinue = () => {\n        const newMed = {...selectedMed}\n        newMed.current = \"false\"\n        setSelectedMed(newMed)\n        dispatch(updateMedication({id:selectedMed.id,instructions:selectedMedInstructions,current:\"false\"}))\n    }\n\n    const handleRestart = () => {\n        const newMed = {...selectedMed}\n        newMed.current = \"true\"\n        setSelectedMed(newMed)\n        dispatch(updateMedication({id:selectedMed.id,instructions:selectedMedInstructions,current:\"true\"}))\n    }\n\n\n    // useEffect(()=>{\n    //     const updateItem = async (item) => {\n    //         const response = await fetch(`/api/providers/photo/${providerId}`,{\n    //             method:\"post\",\n                \n    //         })\n    //         const data = await response.json()\n    //     }\n    // },[updateRecord])\n\n    useEffect(()=>{\n        const searchForDoc = async (providerId) => {\n            console.log(\"providerID:: \",providerId)\n            if (providerId === \"\") return;\n            const response = await fetch(`/api/providers/photo/${providerId}`)\n            const data = await response.json()\n            setProvider(data.provider)\n        }\n        if (selectedMedProviderId !== \"\") {\n            searchForDoc(selectedMedProviderId)\n        }\n    },[selectedMedProviderId])\n\n    if (loading) {\n        return \"\"\n    }\n    const rippleClasses = { rippleVisible: classes.rippleVisible, child: classes.child, [`${\"@keyframes enter\"}`]: classes[`${\"@keyframes enter\"}`] }\n\n\n    return (\n        <>  \n            <Fade in={loading === false}>\n            <div style={{display:\"flex\",flexDirection:\"row\",width:\"100%\"}}>\n                    <div style={{display:\"flex\",flexDirection:\"column\",width: \"35%\",\n                    boxShadow:\"rgba(0, 0, 0, 0.05) 0px 0px 0px 1px\",borderRadius:\"4px\",\n                }}>\n                    <NewItemColorButton fullWidth={\"false\"} onClick={(e)=>handleFormModalOpen(\"NewMedicationForm\")} style={{outline:\"none\"}}>\n                        <AddIcon></AddIcon> Add a Medication\n                    </NewItemColorButton>\n            <List style={{backgroundColor:themeContext.themes === \"dark\" ? \"#444444\" : \"white\",borderRadius:\"8px\",paddingTop:\"0px\"}} component=\"nav\" aria-label=\"main mailbox folders\">\n                        {Object.values(patient.medications).map((med,index)=>{\n                            const noted =med.created_at.split(\" \")\n                            const notedDate = noted.slice(0,4).join(\" \")\n                            return(\n                                <>\n                            {selectedIndex !== index && selectedIndex !== index - 1 ? <Divider style={{ width: \"100%\" }}/> : <Divider style={{ width:\"100%\" }} light />}\n                            <ButtonBase\n                                style={{\n                                    width: \"100%\",\n                                    outline:\"none\",\n                                }}\n                                // primary\n                                TouchRippleProps={{ classes: {...rippleClasses}}}\n                            >\n                                <div style={{width:\"100%\"}} className={classes.colorSplash}>\n                            <ListItem\n                                key={`list-item-${index}`}\n                                selected={selectedIndex === index}\n                                onClick={(event) => {\n                                    handleListItemClick(med, index)\n                                }}\n                                className={\"TaskPaperListItem\"}\n                                style={{ paddingTop: \"3px\", paddingBottom: \"3px\", outline: \"none\",\n                                backgroundColor: themeContext.themes === \"dark\" ? selectedIndex === index ? \"#999999\" : \"#444444\" : selectedIndex === index ? \"aliceblue\" : \"white\",\n                                color: themeContext.themes === \"light\" ? \"#444444\" : \"white\" }}\n                            >\n                                <div style={{display:\"flex\",flexDirection:\"row\",justifyContent:\"space-between\",width:\"100%\"}}>\n                                {/* <span style={{color:themeContext.themes === \"light\" ? \"#444444\" : \"lightgreen\"}}>{notedDate}</span>  */}\n                                <span style={{fontSize:\"18px\"}}>{med.name}</span> \n                                {console.log(\"current med boi\",med.current)}\n                               {med.current === \"true\" ? <span style={{fontSize:\"18px\",background:\"yellowgreen\",padding:\"2px\", borderRadius:\"4px\",color:\"white\"}}>Current</span> : <span style={{color:\"white\",fontSize:\"18px\",background:\"darkgray\",padding:\"2px\", borderRadius:\"4px\"}}>Discontinued</span>}\n                                </div>\n                                <span className={\"MuiTouchRipple-root\" + \" \" + \"rainbow\" + \" \" + \"party\"}></span>\n                            </ListItem>\n                            </div>\n                            </ButtonBase>\n                            </>\n                            )\n                        })}\n                </List>\n                </div>\n                {selectedMed.name && provider.first_name ? \n                <div style={{borderRadius:\"4px\",\n                marginLeft:\"10px\",\n                boxShadow:\"0 1px 2px 0 rgba(60,64,67,0.302), 0 2px 6px 2px rgba(60,64,67,0.149)\",\n                overflow:\"scroll\",maxHeight:\"450px\",\n                display:\"flex\",flexDirection:\"column\",width:\"65%\",color:themeContext.themes === \"dark\" ? \"white\" : \"#444444\",background:themeContext.themes === \"dark\" ? \"#444444\" : \"#f9f9f9\"}}>\n                    <div style={{display:\"flex\",flexDirection:\"column\",width:\"100%\",color:themeContext.themes === \"dark\" ? \"white\" : \"#444444\",background:themeContext.themes === \"dark\" ? \"#444444\" : \"white\"}}>\n                                                {selectedMed.current === \"true\" ? \"\" : <span style={{color:\"white\",fontSize:\"24px\",background:themeContext.themes === \"dark\" ? \"#222222\" : \"gainsboro\" ,padding:\"2px\", borderRadius:\"4px\",paddingLeft:\"10px\", paddingRight:\"10px\"}}>DISCONTINUED</span>}\n                    <div style={{display:\"flex\",flexDirection:\"row\",alignItems:\"center\",justifyContent:\"space-between\",padding:\"10px\"}}>\n                        <h2 style={{color:\"cornflowerblue\"}}>{selectedMed.name}</h2>\n                        <span style={{marginLeft:\"20px\",color:\"salmon\"}}>\n                            CUI: {\" \" + selectedMed.cui}\n                        </span>\n                        {selectedMed.current === \"false\" ? <GreenColorButton onClick={handleRestart}>Restart</GreenColorButton>: <ColorButton onClick={handleDiscontinue}>\n                            discontinue\n                        </ColorButton>}\n                    </div>\n                        <Divider style={{ width: \"100%\" }} light={true} />\n                        <div style={{display:\"flex\",flexDirection:\"column\"}}>\n                            <div style={{display:\"flex\",flexDirection:\"row\",justifyContent:\"space-between\",padding:\"5px\",paddingLeft:\"50px\",paddingRight:\"50px\"}}>\n                                Prescribed: <span>{selectedMed.created_at}</span>\n                            </div>\n                            <Divider style={{ width: \"100%\"}} light={true} />\n                            <div style={{background:themeContext.themes === \"dark\" ? \"\" : \"#f9f9f9\",display:\"flex\",flexDirection:\"column\",justifyContent:\"space-between\",padding:\"5px\",paddingLeft:\"50px\",paddingRight:\"50px\"}}>\n\n                                <div style={{color:\"cornflowerblue\"}}>Instructions:</div> \n                                {!showInstructionEdit ? \n                                <>\n                                <div style={{display:\"flex\",flexDirection:\"column\",marginLeft:\"20px\",marginRight:\"20px\"}}>\n                                <div className={themeContext.themes === \"dark\" ? classes.patientInstructionsDark: classes.patientInstructions} onClick={(e)=>{setShowInstructionEdit(true)}} rows={4} style={{border:themeContext.themes === \"dark\" ? \"2px solid grey\" : \"2px solid grey\", borderRadius:\"4px\",width:\"100%\",padding:\"10px\"}}>{!selectedMedInstructions ? \"No Instructions\" : selectedMedInstructions}</div>\n                                <div style={{display:\"flex\",marginLeft:\"40px\"}}><BlueColorButton onClick={(e)=>{setShowInstructionEdit(true)}}><EditIcon style={{marginRight:\"4px\"}}/>Edit</BlueColorButton> </div>\n                                </div>\n                                </>\n                                 : \n                                 <div style={{display:\"flex\",flexDirection:\"column\",marginLeft:\"20px\",marginRight:\"20px\"}}>\n                                    <TextareaAutosize rows={4} style={{outline:\"none\",border:\"2px solid cornflowerblue\", borderRadius:\"4px\",width:\"100%\"}} onChange={(e)=>setSelectedMedInstructions(e.target.value)} value={!selectedMedInstructions ? \"\" : selectedMedInstructions}></TextareaAutosize>\n                                    <div style={{display:\"flex\",flexDirection:\"row\",marginLeft:\"40px\"}}>\n                                    <NewItemColorButton onClick={handleSave}> Save </NewItemColorButton>\n                                    <ColorButton onClick={handleCancel}>Cancel</ColorButton>\n                                    </div>\n                                </div>}\n                            </div>\n                            <Divider style={{ width: \"100%\"}} light={true} />\n                            <div style={{display:\"flex\",flexDirection:\"row\",justifyContent:\"space-between\",alignItems:\"center\",padding:\"5px\",paddingLeft:\"50px\",paddingRight:\"50px\"}}>\n                                Ordering Provider:\n                                <div style={{display:\"flex\",flexDirection:\"row\",justifyContent:\"center\",alignItems:\"center\",background:themeContext.themes === \"dark\" ? \"transparent\" : \"aliceblue\",borderRadius:\"30px\", padding:\"7px\",fontSize:\"18px\",border:themeContext.themes===\"dark\" ? \"2px solid cornflowerblue\" : \"\"}}>\n                                    {provider.picture ? <Avatar src={`${provider.picture}`} className={classes.large}></Avatar>\n                                    : <Avatar className={classes.large}>{provider.first_name[0] + \" \" + provider.last_name[0]}</Avatar>}\n                                    <div style={{display:\"flex\",flexDirection:\"column\",justifyContent:\"center\", marginLeft:\"5px\"}}>\n                                        <span style={{color:themeContext.themes === \"dark\" ? \"white\" : \"cornflowerblue\"}}>{provider.full_name}</span>\n                                        <span style={{color:themeContext.themes === \"dark\" ? \"white\" : \"yellowgreen\"}}>{provider.specialty}</span>\n                                    </div>\n                                    </div>\n                            </div>\n                            <Divider style={{ width: \"100%\"}} light={true} />\n                            <div style={{display:\"flex\",flexDirection:\"row\",justifyContent:\"space-between\"}}>\n                                </div>\n                            <div style={{display:\"flex\",flexDirection:\"row\",justifyContent:\"space-between\"}}>\n\n                            </div>\n                        </div>\n\n                    </div>\n                    <h5 style={{padding:\"10px\",color:\"cornflowerblue\"}}>Unified Medical Language Definitions: </h5>\n                    {selectedItemDefinitions.map((def,index)=>{\n                        return (\n                        <div key={index} style={{width:\"100%\", display:\"flex\",flexDirection:\"column\"}}>\n                        <div style={{display:\"flex\",flexDirection:\"space-between\", alignItems:\"center\"}}>\n                            <span style={{padding:\"20px\"}}>{def.source}:</span><span style={{color:themeContext.themes === \"dark\" ? \"darkgray\" : \"grey\"}}>{def.value}</span>\n                        </div>\n                        <Divider style={{ color:\"cornflowerblue\",width: \"100%\", backgroundColor:themeContext.themes === \"dark\" ? \"white\" : \"#666666\" }} light={true} />\n                        </div>\n                        )\n                    })}\n                </div> : \n                <div style={{borderRadius:\"4px\",\n                marginLeft:\"10px\",\n                // boxShadow:\"rgba(6, 24, 44, 0.4) 0px 0px 0px 2px, rgba(6, 24, 44, 0.65) 0px 4px 6px -1px, rgba(255, 255, 255, 0.08) 0px 1px 0px inset\",\n                justifyContent:\"center\",alignItems:\"center\",\n                display:\"flex\",flexDirection:\"column\",width:\"65%\",color:themeContext.themes === \"dark\" ? \"white\" : \"#888888\",background:\"transparent\"}}>\n                    <img src=\"https://saga-health.s3-us-west-1.amazonaws.com/simmmax191100036-removebg-preview.png\" style={{width:\"400px\"}}></img>\n                    <div>Select a medication to expand</div>\n                </div>}\n                </div>\n                </Fade>\n      <Modal\n        aria-labelledby=\"transition-modal-title\"\n        aria-describedby=\"transition-modal-description\"\n        className={classes.modal}\n        open={formModalOpen}\n        onClose={handleFormModalClose}\n        closeAfterTransition\n        BackdropComponent={Backdrop}\n        BackdropProps={{\n          timeout: 200\n        }}\n      >\n        <Slide direction=\"up\" in={formModalOpen}>\n          <div className={classes.modalPaper} style={{autooverflow:\"hidden\",display:\"flex\",outline:\"none\",backgroundColor: themeContext.themes === \"dark\" ? \"#444444\" : \"white\",color: themeContext.themes === \"dark\" ? \"white\" : \"#444444\",padding:\"0\",overflow:\"hidden\"}}>\n          {modalForm === \"NewMedicationForm\" ? <NewMedicationForm patient={props.patient}></NewMedicationForm> : <></> }\n          {modalForm === \"NewOrderForm\" ? <NewOrderForm patient={props.patient}></NewOrderForm> : <></> }\n          {modalForm === \"NewMentalProblemForm\" ? <NewMentalProblemForm patient={props.patient}></NewMentalProblemForm> : <></> }\n          {modalForm === \"NewPhysicalProblemForm\" ? <NewPhysicalProblemForm patient={props.patient}></NewPhysicalProblemForm> : <></> }\n          </div>\n        </Slide>\n      </Modal>\n        </>\n    );\n}\n\nexport default PatientMedicationsList;","import React, { useContext, useEffect,useState } from 'react';\nimport {openPatientChart} from '../store/activities'\nimport { useDispatch, useSelector } from 'react-redux';\nimport HomeContext from './utils/HomeContext';\nimport ExitToAppTwoToneIcon from '@material-ui/icons/ExitToAppTwoTone';\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Modal from '@material-ui/core/Modal';\nimport Backdrop from '@material-ui/core/Backdrop';\nimport Divider from '@material-ui/core/Divider';\nimport HomeTwoToneIcon from '@material-ui/icons/HomeTwoTone';\nimport HomeIcon from '@material-ui/icons/Home';\nimport StayCurrentPortraitIcon from '@material-ui/icons/StayCurrentPortrait';\nimport StayPrimaryPortraitTwoToneIcon from '@material-ui/icons/StayPrimaryPortraitTwoTone';\nimport BusinessTwoToneIcon from '@material-ui/icons/BusinessTwoTone';\nimport ContactMailIcon from '@material-ui/icons/ContactMail';\nimport ContactMailTwoToneIcon from '@material-ui/icons/ContactMailTwoTone';\nimport ThemeContext from './utils/ThemeContext';\nimport Slide from '@material-ui/core/Slide';\nimport ListItem from '@material-ui/core/ListItem';\nimport ButtonBase from \"@material-ui/core/ButtonBase\";\nimport List from '@material-ui/core/List';\nimport PatientChartContext from './utils/PatientChartContext';\nimport { Accordion, AccordionDetails, AccordionSummary, Avatar, Fade, Grid, IconButton, TextareaAutosize } from '@material-ui/core';\nimport PatientEncountersList from './PatientEncountersList';\nimport PatientOrdersList from './PatientOrdersList';\nimport AddIcon from '@material-ui/icons/Add';\nimport NewMedicationForm from './NewMedicationForm';\nimport NewMentalProblemForm from './newMentalProblemForm';\nimport NewPhysicalProblemForm from './NewPhysicalProblemForm';\nimport NewOrderForm from './NewOrderForm';\nimport {updateMedication, updateProblem} from '../store/current_patient';\nimport EditIcon from '@material-ui/icons/Edit';\n\nconst NewItemColorButton = withStyles((theme) => ({\n    root: {\n        color: \"white\",\n        paddingRight: \"10px\",\n        paddingLeft: \"10px\",\n        margin: \"4px\",\n        outline:\"none\",\n        width:\"fit-content\",\n        backgroundColor:\"#a9a9a9\",\n        '&:hover': {\n            backgroundColor: \"yellowgreen !important\",\n        },\n    },\n    }))(Button);\n\nconst GreenColorButton = withStyles((theme) => ({\n    root: {\n        color: \"white\",\n        paddingRight: \"10px\",\n        paddingLeft: \"10px\",\n        outline:\"none\",\n        margin: \"4px\",\n        backgroundColor:\"#a9a9a9\",\n        '&:hover': {\n            backgroundColor: \"yellowgreen !important\",\n        }\n    },\n    }))(Button);\n\n\nconst ColorButton = withStyles((theme) => ({\n    root: {\n        color: \"white\",\n        paddingRight: \"10px\",\n        paddingLeft: \"10px\",\n        outline:\"none\",\n        margin: \"4px\",\n        backgroundColor:\"#a9a9a9\",\n        border:\"1px solid #a9a9a9\",\n        '&:hover': {\n            backgroundColor: \"#ed462f !important\",\n            color:\"white\",\n            border:\"1px solid #ed462f\",\n        }\n    },\n    }))(Button);\n    const BlueColorButton = withStyles((theme) => ({\n        root: {\n            color: \"white\",\n            paddingRight: \"10px\",\n            paddingLeft: \"10px\",\n            outline:\"none\",\n            margin: \"4px\",\n            width:\"fit-content\",\n            backgroundColor:\"#a9a9a9\",\n            '&:hover': {\n                backgroundColor: \"dodgerblue !important\",\n            },\n        },\n        }))(Button);\n\n\n    const useStyles = makeStyles((theme) => ({\n        colorSpash: {\n            backgroundColor: \"lightgreen\",\n        },\n        child: {\n            backgroundColor: 'blue',\n            backgroundImage: `\"${\"url(\\\"../images/159960637489457530 (1).png\\\")\"}`\n        },\n        large: {\n            width: theme.spacing(7),\n            height: theme.spacing(7),\n          },\n        rippleVisible: {\n            opacity: 0.5,\n            animation: `$enter 550ms ${theme.transitions.easing.easeInOut}`\n        },\n        \"@keyframes enter\": {\n            \"0%\": {\n                transform: \"scale(0)\",\n                opacity: 0.2\n            },\n            \"100%\": {\n                transform: \"scale(1)\",\n                opacity: 0.5\n            }\n        },\n        [`${\"MuiTouchRipple-root\"}`]: {\n            top: 0,\n            left: 0,\n            right: 0,\n            bottom: 0,\n            zIndex: 0,\n            overflow: \"hidden\",\n            position: \"absolute\",\n            borderRadius: \"inherit\",\n            pointerEvents: \"none\",\n            color:\"blue\",\n            display: \"none\"\n        },\n        polygon: {\n            fill: theme.palette.common.white,\n            stroke: theme.palette.divider,\n            strokeWidth: 1,\n        },\n        touchRipple:{\n            opacity: 1,\n            color: `lightgreen`,\n        },\n        paper: {\n            backgroundColor: theme.palette.background.paper,\n            boxShadow: theme.shadows[5],\n            outline: \"none\",\n            padding: theme.spacing(2, 4, 3),\n            boxSizing: \"auto\"\n        },\n        modal: {\n            display: 'flex',\n            alignItems: 'center',\n            justifyContent: 'center',\n          },\n        modalPaper: {\n            boxShadow: theme.shadows[5],\n            padding: theme.spacing(2, 4, 3),\n          },\n        patientInstructions : {\n            cursor:\"pointer\",\n            transition:\"all .3s ease-in-out\",\n            '&:hover': {\n                background:\"gainsboro\"\n            }\n        \n        },\n        patientInstructionsDark : {\n            cursor:\"pointer\",\n            transition:\"all .3s ease-in-out\",\n            '&:hover': {\n                background:\"grey\"\n            }\n        }\n    }));\n\nfunction PatientProblemList(props) { \n    const classes = useStyles()\n    console.log(\"prs!!\",props.patient)\n    console.log(\"ptheseasdfadfddd\",{...props.patient})\n    \n    const context = useContext(PatientChartContext)\n    const themeContext = useContext(ThemeContext)\n    const dispatch = useDispatch()\n    const openTabs = useSelector(state=>state.activities.open_tabs)\n    const [patient,setPatient] = useState(props.patient)\n    const [medsArray,setMedsArray] = useState([])\n    const [selectedIndex, setSelectedIndex] = useState();\n    const [previewCui,setPreviewCui] = useState(\"\")\n    const [selectedItemDefinitions,setSelectedItemDefinitions] = useState([])\n    const [selectedMed,setSelectedMed] = useState({})\n    const [selectedMedProviderId,setSelectedMedProviderId]=useState(\"\")\n    const [provider,setProvider]=useState({})\n    const [formModalOpen, setFormModalOpen] = useState(false);\n    const [modalForm, setModalForm] = useState(\"\")\n    const [showInstructionEdit,setShowInstructionEdit] = useState(false)\n    const [selectedMedInstructions,setSelectedMedInstructions] = useState(\"\")\n\n    // console.log(props.patient)\n    const [loading,setLoading] = useState(true)\n\n    const handleListItemClick = (med, index) => {\n        setShowInstructionEdit(false)\n        setSelectedMedProviderId(med.provider_id)\n        setSelectedMed(med)\n        setSelectedMedInstructions(med.note)\n        setPreviewCui(med.cui)\n        setSelectedIndex(index)\n    };\n\n    const handleFormModalOpen = (modalForm) => {\n        setModalForm(modalForm)\n        console.log(modalForm)\n        setFormModalOpen(true);\n    };\n  \n    const handleFormModalClose = () => {\n        setModalForm(\"\")\n        setFormModalOpen(false);\n    };\n\n    useEffect(()=>{\n        if (props.patient.problems) {\n            setPatient(props.patient)\n            setLoading(false)\n        }\n    },[props.patient])\n\n    useEffect(()=>{\n        const searchForCui = async (cui) => {\n            if (cui=== \"\") return;\n            const response = await fetch(`/api/umls/search-cui/${cui}`)\n            const data = await response.json()\n            const definitions = data.definitions.map(def=>{\n                return (\n                    {\n                        value: def.value,\n                        source: def.rootSource\n                    }\n                )\n            })\n            setSelectedItemDefinitions(definitions)\n            console.log(data)\n        }\n        if (previewCui !== \"\") {\n            searchForCui(previewCui)\n        }\n    },[previewCui])\n\n    const handleSave =()=>{\n        const newMed = {...selectedMed}\n        newMed.instructions = selectedMedInstructions\n        setSelectedMed(newMed)\n        setSelectedMedInstructions(selectedMedInstructions)\n        setShowInstructionEdit(false)\n        dispatch(updateProblem({id:selectedMed.id,note:selectedMedInstructions,current:selectedMed.current}))\n    }\n\n    const handleCancel = () => {\n        setSelectedMedInstructions(selectedMed.instructions)\n        setShowInstructionEdit(false)\n    }\n\n    const handleDiscontinue = () => {\n        const newMed = {...selectedMed}\n        newMed.current = \"false\"\n        setSelectedMed(newMed)\n        dispatch(updateProblem({id:selectedMed.id,note:selectedMedInstructions,current:\"false\"}))\n    }\n\n    const handleRestart = () => {\n        const newMed = {...selectedMed}\n        newMed.current = \"true\"\n        setSelectedMed(newMed)\n        dispatch(updateProblem({id:selectedMed.id,note:selectedMedInstructions,current:\"true\"}))\n    }\n\n\n    // useEffect(()=>{\n    //     const updateItem = async (item) => {\n    //         const response = await fetch(`/api/providers/photo/${providerId}`,{\n    //             method:\"post\",\n                \n    //         })\n    //         const data = await response.json()\n    //     }\n    // },[updateRecord])\n\n    useEffect(()=>{\n        const searchForDoc = async (providerId) => {\n            console.log(\"providerID:: \",providerId)\n            if (providerId === \"\") return;\n            const response = await fetch(`/api/providers/photo/${providerId}`)\n            const data = await response.json()\n            setProvider(data.provider)\n        }\n        if (selectedMedProviderId !== \"\") {\n            searchForDoc(selectedMedProviderId)\n        }\n    },[selectedMedProviderId])\n\n    if (loading) {\n        return \"\"\n    }\n    const rippleClasses = { rippleVisible: classes.rippleVisible, child: classes.child, [`${\"@keyframes enter\"}`]: classes[`${\"@keyframes enter\"}`] }\n\n\n    return (\n        <>  \n        <Fade in={loading===false}>\n            <div style={{display:\"flex\",flexDirection:\"row\",width:\"100%\"}}>\n                    <div style={{display:\"flex\",flexDirection:\"column\",width: \"35%\"}}>\n                    <NewItemColorButton fullWidth={\"false\"} onClick={(e)=>handleFormModalOpen(\"NewMentalProblemForm\")} style={{outline:\"none\"}}>\n                        <AddIcon></AddIcon> Add A Mental Health Issue\n                    </NewItemColorButton>\n            <List style={{backgroundColor:themeContext.themes === \"dark\" ? \"#444444\" : \"white\",borderRadius:\"8px\",paddingTop:\"0px\"}} component=\"nav\" aria-label=\"main mailbox folders\">\n                        {Object.values(patient.problems).map((med,index)=>{\n                            if (med.type === \"physical\") return\n                            const noted =med.created_at.split(\" \")\n                            const notedDate = noted.slice(0,4).join(\" \")\n                            return(\n                                <>\n                            {selectedIndex !== index && selectedIndex !== index - 1 ? <Divider style={{ width: \"100%\" }}/> : <Divider style={{ width:\"100%\" }} light />}\n                            <ButtonBase\n                                style={{\n                                    width: \"100%\",\n                                    outline:\"none\",\n                                }}\n                                // primary\n                                TouchRippleProps={{ classes: {...rippleClasses}}}\n                            >\n                                <div style={{width:\"100%\"}} className={classes.colorSplash}>\n                            <ListItem\n                                key={`list-item-${index}`}\n                                selected={selectedIndex === index}\n                                onClick={(event) => {\n                                    handleListItemClick(med, index)\n                                }}\n                                className={\"TaskPaperListItem\"}\n                                style={{ paddingTop: \"3px\", paddingBottom: \"3px\", outline: \"none\",\n                                backgroundColor: themeContext.themes === \"dark\" ? selectedIndex === index ? \"#999999\" : \"#444444\" : selectedIndex === index ? \"aliceblue\" : \"white\",\n                                color: themeContext.themes === \"light\" ? \"#444444\" : \"white\" }}\n                            >\n                                <div style={{display:\"flex\",flexDirection:\"row\",justifyContent:\"space-between\",width:\"100%\"}}>\n                                {/* <span style={{color:themeContext.themes === \"light\" ? \"#444444\" : \"lightgreen\"}}>{notedDate}</span>  */}\n                                <span style={{fontSize:\"18px\"}}>{med.name}</span> \n                                {console.log(\"current med boi\",med.current)}\n                               {med.current === \"true\" ? <span style={{fontSize:\"18px\",background:\"yellowgreen\",padding:\"2px\", borderRadius:\"4px\",color:\"white\"}}>Current</span> : <span style={{color:\"white\",fontSize:\"18px\",background:\"darkgray\",padding:\"2px\", borderRadius:\"4px\"}}>Resolved</span>}\n                                </div>\n                                <span className={\"MuiTouchRipple-root\" + \" \" + \"rainbow\" + \" \" + \"party\"}></span>\n                            </ListItem>\n                            </div>\n                            </ButtonBase>\n                            </>\n                            )\n                        })}\n                </List>\n                </div>\n                {selectedMed.name && provider.first_name ? \n                <div style={{borderRadius:\"4px\",\n                marginLeft:\"10px\",\n                boxShadow:\"rgba(6, 24, 44, 0.4) 0px 0px 0px 2px, rgba(6, 24, 44, 0.65) 0px 4px 6px -1px, rgba(255, 255, 255, 0.08) 0px 1px 0px inset\",\n                overflow:\"scroll\",maxHeight:\"450px\",\n                display:\"flex\",flexDirection:\"column\",width:\"65%\",color:themeContext.themes === \"dark\" ? \"white\" : \"#444444\",background:themeContext.themes === \"dark\" ? \"#444444\" : \"#f9f9f9\"}}>\n                    <div style={{display:\"flex\",flexDirection:\"column\",width:\"100%\",color:themeContext.themes === \"dark\" ? \"white\" : \"#444444\",background:themeContext.themes === \"dark\" ? \"#444444\" : \"white\"}}>\n                    {selectedMed.current === \"true\" ? \"\" : <span style={{color:\"white\",fontSize:\"24px\",background:themeContext.themes === \"dark\" ? \"#222222\" : \"gainsboro\" ,padding:\"2px\", borderRadius:\"4px\",paddingLeft:\"10px\", paddingRight:\"10px\"}}>RESOLVED</span>}\n                    <div style={{display:\"flex\",flexDirection:\"row\",alignItems:\"center\",justifyContent:\"space-between\",padding:\"10px\"}}>\n                        <h2 style={{color:\"cornflowerblue\"}}>{selectedMed.name}</h2>\n                        <span style={{marginLeft:\"20px\",color:\"salmon\"}}>\n                            {\" \" + selectedMed.cui}\n                        </span>\n                        {selectedMed.current === \"false\" ? <GreenColorButton onClick={handleRestart}>Unresolve</GreenColorButton>: <ColorButton onClick={handleDiscontinue}>\n                            Resolve\n                        </ColorButton>}\n                    </div>\n                        <Divider style={{ width: \"100%\" }} light={true} />\n                        <div style={{display:\"flex\",flexDirection:\"column\"}}>\n                            <div style={{display:\"flex\",flexDirection:\"row\",justifyContent:\"space-between\",padding:\"5px\",paddingLeft:\"50px\",paddingRight:\"50px\"}}>\n                                Noted: <span>{selectedMed.created_at}</span>\n                            </div>\n                            <Divider style={{ width: \"100%\"}} light={true} />\n                            <div style={{background:themeContext.themes === \"dark\" ? \"\" : \"#f9f9f9\",display:\"flex\",flexDirection:\"column\",justifyContent:\"space-between\",padding:\"5px\",paddingLeft:\"50px\",paddingRight:\"50px\"}}>\n\n                                <div style={{color:\"cornflowerblue\"}}>Health Issue Note:</div> \n                                {!showInstructionEdit ? \n                                <>\n                                <div style={{display:\"flex\",flexDirection:\"column\",marginLeft:\"20px\",marginRight:\"20px\"}}>\n                                <div className={themeContext.themes === \"dark\" ? classes.patientInstructionsDark: classes.patientInstructions} onClick={(e)=>{setShowInstructionEdit(true)}} rows={4} style={{border:themeContext.themes === \"dark\" ? \"2px solid grey\" : \"2px solid grey\", borderRadius:\"4px\",width:\"100%\",padding:\"10px\"}}>{!selectedMedInstructions ? \"Empty\" : selectedMedInstructions}</div>\n                                <div style={{display:\"flex\",marginLeft:\"40px\"}}><BlueColorButton onClick={(e)=>{setShowInstructionEdit(true)}}><EditIcon style={{marginRight:\"4px\"}}/>Edit</BlueColorButton> </div>\n                                </div>\n                                </>\n                                 : \n                                 <div style={{display:\"flex\",flexDirection:\"column\",marginLeft:\"20px\",marginRight:\"20px\"}}>\n                                    <TextareaAutosize rows={4} style={{outline:\"none\",border:\"2px solid cornflowerblue\", borderRadius:\"4px\",width:\"100%\"}} onChange={(e)=>setSelectedMedInstructions(e.target.value)} value={!selectedMedInstructions ? \"\" : selectedMedInstructions}></TextareaAutosize>\n                                    <div style={{display:\"flex\",flexDirection:\"row\",marginLeft:\"40px\"}}>\n                                    <NewItemColorButton onClick={handleSave}> Save </NewItemColorButton>\n                                    <ColorButton onClick={handleCancel}>Cancel</ColorButton>\n                                    </div>\n                                </div>}\n                            </div>\n                            <Divider style={{ width: \"100%\"}} light={true} />\n                            <div style={{display:\"flex\",flexDirection:\"row\",justifyContent:\"space-between\",alignItems:\"center\",padding:\"5px\",paddingLeft:\"50px\",paddingRight:\"50px\"}}>\n                                Noted By Provider:\n                                <div style={{display:\"flex\",flexDirection:\"row\",justifyContent:\"center\",alignItems:\"center\",background:themeContext.themes === \"dark\" ? \"transparent\" : \"aliceblue\",borderRadius:\"30px\", padding:\"7px\",fontSize:\"18px\",border:themeContext.themes===\"dark\" ? \"2px solid cornflowerblue\" : \"\"}}>\n                                    {provider.picture ? <Avatar src={`${provider.picture}`} className={classes.large}></Avatar>\n                                    : <Avatar className={classes.large}>{provider.first_name[0] + \" \" + provider.last_name[0]}</Avatar>}\n                                    <div style={{display:\"flex\",flexDirection:\"column\",justifyContent:\"center\", marginLeft:\"5px\"}}>\n                                        <span style={{color:themeContext.themes === \"dark\" ? \"white\" : \"cornflowerblue\"}}>{provider.full_name}</span>\n                                        <span style={{color:themeContext.themes === \"dark\" ? \"white\" : \"yellowgreen\"}}>{provider.specialty}</span>\n                                    </div>\n                                    </div>\n                            </div>\n                            <Divider style={{ width: \"100%\"}} light={true} />\n                            <div style={{display:\"flex\",flexDirection:\"row\",justifyContent:\"space-between\"}}>\n                                </div>\n                            <div style={{display:\"flex\",flexDirection:\"row\",justifyContent:\"space-between\"}}>\n\n                            </div>\n                        </div>\n\n                    </div>\n                    <h5 style={{padding:\"10px\",color:\"cornflowerblue\"}}>Unified Medical Language Definitions: </h5>\n                    {selectedItemDefinitions.map((def,index)=>{\n                        return (\n                        <div key={index} style={{width:\"100%\", display:\"flex\",flexDirection:\"column\"}}>\n                        <div style={{display:\"flex\",flexDirection:\"space-between\", alignItems:\"center\"}}>\n                            <span style={{padding:\"20px\"}}>{def.source}:</span><span style={{color:themeContext.themes === \"dark\" ? \"darkgray\" : \"grey\"}}>{def.value}</span>\n                        </div>\n                        <Divider style={{ color:\"cornflowerblue\",width: \"100%\", backgroundColor:themeContext.themes === \"dark\" ? \"white\" : \"#666666\" }} light={true} />\n                        </div>\n                        )\n                    })}\n                </div> : \n                <div style={{borderRadius:\"4px\",\n                marginLeft:\"10px\",\n                // boxShadow:\"rgba(6, 24, 44, 0.4) 0px 0px 0px 2px, rgba(6, 24, 44, 0.65) 0px 4px 6px -1px, rgba(255, 255, 255, 0.08) 0px 1px 0px inset\",\n                overflow:\"scroll\",maxHeight:\"450px\",\n                justifyContent:\"center\",alignItems:\"center\",\n                display:\"flex\",flexDirection:\"column\",width:\"65%\",color:themeContext.themes === \"dark\" ? \"white\" : \"#888888\",background:\"transparent\"}}>\n                    <img src=\"https://saga-health.s3-us-west-1.amazonaws.com/istockphoto-1169420428-612x612-removebg-preview.png\" style={{width:\"460px\"}}></img>\n                    <div>Select a mental health issue to expand.</div>\n                </div>}\n                </div>\n                </Fade>\n      <Modal\n        aria-labelledby=\"transition-modal-title\"\n        aria-describedby=\"transition-modal-description\"\n        className={classes.modal}\n        open={formModalOpen}\n        onClose={handleFormModalClose}\n        closeAfterTransition\n        BackdropComponent={Backdrop}\n        BackdropProps={{\n          timeout: 200\n        }}\n      >\n        <Slide direction=\"up\" in={formModalOpen}>\n          <div className={classes.modalPaper} style={{autooverflow:\"hidden\",display:\"flex\",outline:\"none\",backgroundColor: themeContext.themes === \"dark\" ? \"#444444\" : \"white\",color: themeContext.themes === \"dark\" ? \"white\" : \"#444444\",padding:\"0\",overflow:\"hidden\"}}>\n          {modalForm === \"NewMedicationForm\" ? <NewMedicationForm patient={props.patient}></NewMedicationForm> : <></> }\n          {modalForm === \"NewOrderForm\" ? <NewOrderForm patient={props.patient}></NewOrderForm> : <></> }\n          {modalForm === \"NewMentalProblemForm\" ? <NewMentalProblemForm patient={props.patient}></NewMentalProblemForm> : <></> }\n          {modalForm === \"NewPhysicalProblemForm\" ? <NewPhysicalProblemForm patient={props.patient}></NewPhysicalProblemForm> : <></> }\n          </div>\n        </Slide>\n      </Modal>\n        </>\n    );\n}\n\nexport default PatientProblemList;","import React, { useContext,useState, useEffect } from 'react';\nimport {openPatientChart} from '../store/activities'\nimport { useDispatch, useSelector } from 'react-redux';\nimport HomeContext from './utils/HomeContext';\nimport ExitToAppTwoToneIcon from '@material-ui/icons/ExitToAppTwoTone';\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Divider from '@material-ui/core/Divider';\nimport { Grid, Container, Card, InputBase, TextField } from '@material-ui/core';\nimport ThemeContext from './utils/ThemeContext';\nimport FindInPageTwoToneIcon from '@material-ui/icons/FindInPageTwoTone';\nimport AddIcon from '@material-ui/icons/AddCircleTwoTone';\nimport IconButton from '@material-ui/core/IconButton';\nimport {createProblem} from '../store/current_patient'\nimport PatientMedicationsList from './PatientMedicationsList';\nimport PatientMentalProblemList from './PatientMentalProblemList';\n\n\nconst useStylesLoginTextField = makeStyles((theme) => ({\n    root: {\n      border: '2px solid #e2e2e1',\n      overflow: 'hidden',\n      paddingLeft: \"10px\",\n      paddingTop: \"4px\",\n      paddingBottom: \"4px\",\n      marginTop: \"14px\",\n      borderRadius: 4,\n      backgroundColor: '#fcfcfb',\n      transition: theme.transitions.create(['border-color', 'box-shadow']),\n      '&$focused': {\n        border: '2px solid rgb(94, 158, 214)',\n        backgroundColor: '#fff',\n        // boxShadow: `${fade(theme.palette.primary.main, 0.25)} 0 0 0 1px`,\n      },\n    },\n    focused: {},\n  }));\n\n  function LoginTextField(props) {\n    const classes = useStylesLoginTextField();\n    return <TextField InputProps={{ classes, disableUnderline: true }} {...props} />;\n  }\n\nconst ColorButton = withStyles((theme) => ({\n    root: {\n        paddingRight: \"10px\",\n        paddingLeft: \"10px\",\n        margin: \"4px\",\n        background:\"transparent\",\n        border:\"1px solid #ed4959\",\n        '&:hover': {\n            backgroundColor: \"#ed4959 !important\",\n            color:\"white\",\n            border:\"1px solid #ed4959\",\n        },\n    },\n    }))(Button);\n\nconst SelectMedButton = withStyles((theme) => ({\n    root: {\n        color: \"#ed4959\",\n        paddingRight: \"10px\",\n        paddingLeft: \"10px\",\n        margin: \"4px\",\n        backgroundColor:\"transparent\",\n        border:\"1px solid #ed4959\",\n        '&:hover': {\n            backgroundColor: \"#ed4959 !important\",\n            color:\"white\",\n            border:\"1px solid #ed4959\",\n        },\n    },\n    }))(Button);\n\nfunction PatientPhysicalProblems(props) { \n    console.log(props)\n    const context = useContext(HomeContext)\n    const dispatch = useDispatch()\n    const provider_id = useSelector(state=>state.auth.user.id)\n    const [medications,setMedications] = useState([])\n    const themeContext = useContext(ThemeContext)\n    const [problemSearchTerm,setProblemSearchTerm] = useState(\"\")\n    const [problemSearchResults,setProblemSearchResults]=useState([]);\n    const [problemPerformSearch,setProblemPerformSearch]=useState(false)\n    const [searchingForProblems,setSearchingForProblems]=useState(false)\n    const [selectedProblemIndex,setSelectedProblemIndex]=useState()\n    const [displayProblemQuestions,setDisplayProblemQuestions] = useState(false)\n    const [newProblemInstructions,setNewProblemInstructions] = useState(\"\")\n\n    const addProblem = (problemName) => {\n        dispatch(createProblem({problemName,patient:props.patient.id,provider_id,type:\"mental\"}))\n    }\n\n    useEffect(()=>{\n        const searchProblems= async (searchTerm) => {\n            // const response = await fetch(`/api/umls/search-cui/`)\n            const response = await fetch(`/api/umls/search-term/non-mental-problems/${searchTerm}`)\n            const data = await response.json()\n            console.log(data)\n            setSearchingForProblems(false)\n            setProblemSearchResults(data.results)\n            return;\n        }\n        if (problemSearchTerm.length > 0) {\n            searchProblems(problemSearchTerm)\n        }\n    },[problemPerformSearch])\n\n\n    return (\n        <>\n                <div style={{display:\"flex\",flexDirection:\"column\",borderRadius:\"9px\",boxShadow: \"rgba(0, 0, 0, 0.09) 0px 1px 2px 0px\", width:\"fit-content\",marginLeft:\"9px\",marginRight:\"9px\",backgroundColor:themeContext.themes === \"dark\" ? \"#999999\" : \"white\"}}>\n                    <div style={{color:\"white\",marginTop:\"10px\",padding:\"4px\", marginBottom:\"6px\", width:\"100%\", fontSize:\"16px\", backgroundImage: \"linear-gradient(to right, #b8cbb8 0%, #b8cbb8 0%, #b465da 0%, #cf6cc9 33%, #ee609c 66%, #ee609c 100%)\"}}>Mental Health Issues</div>\n                    <PatientMentalProblemList patient={{...props.patient}}/>\n                    <div style={{display:\"flex\",flexDirection:\"column\",padding:\"4px\",backgroundColor:themeContext.themes === \"dark\" ? \"#999999\" : \"white\",transition:\"all .4s ease-in-out\",transitionProperty:\"width\"}}>\n                    <div style={{display:\"flex\",flexDirection:\"column\"}}>\n                    <LoginTextField placeholder=\"add a health issue\" value={problemSearchTerm} onChange={(e)=>setProblemSearchTerm(e.target.value)}></LoginTextField>\n                    <ColorButton style={{color:themeContext.themes === \"dark\" ? \"white\" : \"#ed4959\"}} onClick={()=>{\n                        setDisplayProblemQuestions(false)\n                        setProblemSearchResults([])\n                        setSearchingForProblems(true)\n                        setProblemPerformSearch(!problemPerformSearch)\n                        }}\n                        ><FindInPageTwoToneIcon style={{marginRight:\"4px\"}}/>search</ColorButton>\n                    </div>\n                        <div style={{display:\"flex\",flexDirection:\"column\",maxHeight:\"200px\",overflow:\"scroll\",marginLeft:\"10px\"}}>\n                        {searchingForProblems ? <img src=\"https://saga-health.s3-us-west-1.amazonaws.com/ezgif.com-gif-maker.gif\" style={{height:\"140px\",marginLeft:\"10px\"}}></img> : <></>}\n                        {displayProblemQuestions ? \n                        <div style={{display:\"flex\",flexDirection:\"column\",backgroundColor:themeContext.themes === \"dark\" ? \"#999999\" : \"white\",color:themeContext.themes === \"dark\" ? \"antiquewhite\" : \"grey\",marginLeft:\"10px\", borderRadius:\"4px\",padding:\"10px\"}}>\n                            <div style={{display:\"flex\",flexDirection:\"row\",justifyContent:\"space-between\"}}>\n                            <div style={{fontSize:\"20px\"}}>{problemSearchResults[selectedProblemIndex]}</div>\n                            <Button size=\"small\" onClick={()=>setDisplayProblemQuestions(false)}>\n                                back\n                            </Button>\n                            </div>\n                            <form>\n                                <div style={{display:\"flex\",flexDirection:\"column\", justifyContent:\"center\"}}>\n                                    <p>(optional) Enter an issue note:</p>\n                                    <textarea type=\"text\"></textarea>\n                                </div>\n                                <IconButton size=\"large\">\n                                    <AddIcon style={{color:\"lightgreen\"}} onClick={()=>{\n                                        setProblemSearchResults([])\n                                        setProblemSearchTerm(\"\")\n                                        setNewProblemInstructions(\"\")\n                                        setDisplayProblemQuestions(false)\n                                        addProblem(problemSearchResults[selectedProblemIndex],newProblemInstructions)}}/>\n                                </IconButton>\n                            </form>\n                        </div>\n                        : problemSearchResults.map((problem,index)=>{\n                        return(\n                            <div onClick={()=>setSelectedProblemIndex(index)} \n                            style={{transition:\"all .4s ease-in-out\",transitionProperty:\"width\",display:\"flex\",\n                            flexDirection:\"row\", alignItems:\"center\",cursor:\"pointer\",color:themeContext.themes === \"dark\" ? \"white\" : \"black\",\n                            marginTop:\"3px\",padding:\"4px\",borderRadius:\"3px\",\n                            background:themeContext.themes === \"dark\" ? index === selectedProblemIndex ? \"#999999\" : \"#343434\" : index === selectedProblemIndex ? \"aliceblue\" : \"ivory\"}}>\n                                <IconButton size=\"small\" onClick={(e)=>setDisplayProblemQuestions(true)}>\n                                <AddIcon style={{color:themeContext.themes === \"dark\" ? \"goldenrod\" : \"goldenrod\", borderRadius:\"3px\",margin:\"2px\",padding:\"2px\",cursor:\"pointer\"}}/>\n                                </IconButton>\n                                {problem}\n                            </div>\n                        )\n                        })}\n                        </div>\n                    </div>\n                </div>\n        </>\n    );\n}\n\nexport default PatientPhysicalProblems;\n","import React, { useContext, useEffect,useState } from 'react';\nimport {openPatientChart} from '../store/activities'\nimport { useDispatch, useSelector } from 'react-redux';\nimport HomeContext from './utils/HomeContext';\nimport ExitToAppTwoToneIcon from '@material-ui/icons/ExitToAppTwoTone';\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Modal from '@material-ui/core/Modal';\nimport Backdrop from '@material-ui/core/Backdrop';\nimport Divider from '@material-ui/core/Divider';\nimport HomeTwoToneIcon from '@material-ui/icons/HomeTwoTone';\nimport HomeIcon from '@material-ui/icons/Home';\nimport StayCurrentPortraitIcon from '@material-ui/icons/StayCurrentPortrait';\nimport StayPrimaryPortraitTwoToneIcon from '@material-ui/icons/StayPrimaryPortraitTwoTone';\nimport BusinessTwoToneIcon from '@material-ui/icons/BusinessTwoTone';\nimport ContactMailIcon from '@material-ui/icons/ContactMail';\nimport ContactMailTwoToneIcon from '@material-ui/icons/ContactMailTwoTone';\nimport ThemeContext from './utils/ThemeContext';\nimport Slide from '@material-ui/core/Slide';\nimport ListItem from '@material-ui/core/ListItem';\nimport ButtonBase from \"@material-ui/core/ButtonBase\";\nimport List from '@material-ui/core/List';\nimport PatientChartContext from './utils/PatientChartContext';\nimport { Accordion, AccordionDetails, AccordionSummary, Avatar, Fade, Grid, IconButton, TextareaAutosize } from '@material-ui/core';\nimport PatientEncountersList from './PatientEncountersList';\nimport PatientOrdersList from './PatientOrdersList';\nimport AddIcon from '@material-ui/icons/Add';\nimport NewMedicationForm from './NewMedicationForm';\nimport NewMentalProblemForm from './newMentalProblemForm';\nimport NewPhysicalProblemForm from './NewPhysicalProblemForm';\nimport NewOrderForm from './NewOrderForm';\nimport {updateMedication, updateProblem} from '../store/current_patient';\nimport EditIcon from '@material-ui/icons/Edit';\n\nconst NewItemColorButton = withStyles((theme) => ({\n    root: {\n        color: \"white\",\n        paddingRight: \"10px\",\n        paddingLeft: \"10px\",\n        margin: \"4px\",\n        outline:\"none\",\n        width:\"fit-content\",\n        backgroundColor:\"#a9a9a9\",\n        '&:hover': {\n            backgroundColor: \"yellowgreen !important\",\n        },\n    },\n    }))(Button);\n\nconst GreenColorButton = withStyles((theme) => ({\n    root: {\n        color: \"white\",\n        paddingRight: \"10px\",\n        paddingLeft: \"10px\",\n        outline:\"none\",\n        margin: \"4px\",\n        backgroundColor:\"#a9a9a9\",\n        '&:hover': {\n            backgroundColor: \"yellowgreen !important\",\n        }\n    },\n    }))(Button);\n\n\nconst ColorButton = withStyles((theme) => ({\n    root: {\n        color: \"white\",\n        paddingRight: \"10px\",\n        paddingLeft: \"10px\",\n        outline:\"none\",\n        margin: \"4px\",\n        backgroundColor:\"#a9a9a9\",\n        border:\"1px solid #a9a9a9\",\n        '&:hover': {\n            backgroundColor: \"#ed462f !important\",\n            color:\"white\",\n            border:\"1px solid #ed462f\",\n        }\n    },\n    }))(Button);\n    const BlueColorButton = withStyles((theme) => ({\n        root: {\n            color: \"white\",\n            paddingRight: \"10px\",\n            paddingLeft: \"10px\",\n            outline:\"none\",\n            margin: \"4px\",\n            width:\"fit-content\",\n            backgroundColor:\"#a9a9a9\",\n            '&:hover': {\n                backgroundColor: \"dodgerblue !important\",\n            },\n        },\n        }))(Button);\n\n\n    const useStyles = makeStyles((theme) => ({\n        colorSpash: {\n            backgroundColor: \"lightgreen\",\n        },\n        child: {\n            backgroundColor: 'blue',\n            backgroundImage: `\"${\"url(\\\"../images/159960637489457530 (1).png\\\")\"}`\n        },\n        large: {\n            width: theme.spacing(7),\n            height: theme.spacing(7),\n          },\n        rippleVisible: {\n            opacity: 0.5,\n            animation: `$enter 550ms ${theme.transitions.easing.easeInOut}`\n        },\n        \"@keyframes enter\": {\n            \"0%\": {\n                transform: \"scale(0)\",\n                opacity: 0.2\n            },\n            \"100%\": {\n                transform: \"scale(1)\",\n                opacity: 0.5\n            }\n        },\n        [`${\"MuiTouchRipple-root\"}`]: {\n            top: 0,\n            left: 0,\n            right: 0,\n            bottom: 0,\n            zIndex: 0,\n            overflow: \"hidden\",\n            position: \"absolute\",\n            borderRadius: \"inherit\",\n            pointerEvents: \"none\",\n            color:\"blue\",\n            display: \"none\"\n        },\n        polygon: {\n            fill: theme.palette.common.white,\n            stroke: theme.palette.divider,\n            strokeWidth: 1,\n        },\n        touchRipple:{\n            opacity: 1,\n            color: `lightgreen`,\n        },\n        paper: {\n            backgroundColor: theme.palette.background.paper,\n            boxShadow: theme.shadows[5],\n            outline: \"none\",\n            padding: theme.spacing(2, 4, 3),\n            boxSizing: \"auto\"\n        },\n        modal: {\n            display: 'flex',\n            alignItems: 'center',\n            justifyContent: 'center',\n          },\n        modalPaper: {\n            boxShadow: theme.shadows[5],\n            padding: theme.spacing(2, 4, 3),\n          },\n        patientInstructions : {\n            cursor:\"pointer\",\n            transition:\"all .3s ease-in-out\",\n            '&:hover': {\n                background:\"gainsboro\"\n            }\n        \n        },\n        patientInstructionsDark : {\n            cursor:\"pointer\",\n            transition:\"all .3s ease-in-out\",\n            '&:hover': {\n                background:\"grey\"\n            }\n        }\n    }));\n\nfunction PatientProblemList(props) { \n    const classes = useStyles()\n    console.log(\"prs!!\",props.patient)\n    console.log(\"ptheseasdfadfddd\",{...props.patient})\n    \n    const context = useContext(PatientChartContext)\n    const themeContext = useContext(ThemeContext)\n    const dispatch = useDispatch()\n    const openTabs = useSelector(state=>state.activities.open_tabs)\n    const [patient,setPatient] = useState(props.patient)\n    const [medsArray,setMedsArray] = useState([])\n    const [selectedIndex, setSelectedIndex] = useState();\n    const [previewCui,setPreviewCui] = useState(\"\")\n    const [selectedItemDefinitions,setSelectedItemDefinitions] = useState([])\n    const [selectedMed,setSelectedMed] = useState({})\n    const [selectedMedProviderId,setSelectedMedProviderId]=useState(\"\")\n    const [provider,setProvider]=useState({})\n    const [formModalOpen, setFormModalOpen] = useState(false);\n    const [modalForm, setModalForm] = useState(\"\")\n    const [showInstructionEdit,setShowInstructionEdit] = useState(false)\n    const [selectedMedInstructions,setSelectedMedInstructions] = useState(\"\")\n\n    // console.log(props.patient)\n    const [loading,setLoading] = useState(true)\n\n    const handleListItemClick = (med, index) => {\n        setShowInstructionEdit(false)\n        setSelectedMedProviderId(med.provider_id)\n        setSelectedMed(med)\n        setSelectedMedInstructions(med.note)\n        setPreviewCui(med.cui)\n        setSelectedIndex(index)\n    };\n\n    const handleFormModalOpen = (modalForm) => {\n        setModalForm(modalForm)\n        console.log(modalForm)\n        setFormModalOpen(true);\n    };\n  \n    const handleFormModalClose = () => {\n        setModalForm(\"\")\n        setFormModalOpen(false);\n    };\n\n    useEffect(()=>{\n        if (props.patient.problems) {\n            setPatient(props.patient)\n            setLoading(false)\n        }\n    },[props.patient])\n\n    useEffect(()=>{\n        const searchForCui = async (cui) => {\n            if (cui=== \"\") return;\n            const response = await fetch(`/api/umls/search-cui/${cui}`)\n            const data = await response.json()\n            const definitions = data.definitions.map(def=>{\n                return (\n                    {\n                        value: def.value,\n                        source: def.rootSource\n                    }\n                )\n            })\n            setSelectedItemDefinitions(definitions)\n            console.log(data)\n        }\n        if (previewCui !== \"\") {\n            searchForCui(previewCui)\n        }\n    },[previewCui])\n\n    const handleSave =()=>{\n        const newMed = {...selectedMed}\n        newMed.instructions = selectedMedInstructions\n        setSelectedMed(newMed)\n        setSelectedMedInstructions(selectedMedInstructions)\n        setShowInstructionEdit(false)\n        dispatch(updateProblem({id:selectedMed.id,note:selectedMedInstructions,current:selectedMed.current}))\n    }\n\n    const handleCancel = () => {\n        setSelectedMedInstructions(selectedMed.instructions)\n        setShowInstructionEdit(false)\n    }\n\n    const handleDiscontinue = () => {\n        const newMed = {...selectedMed}\n        newMed.current = \"false\"\n        setSelectedMed(newMed)\n        dispatch(updateProblem({id:selectedMed.id,note:selectedMedInstructions,current:\"false\"}))\n    }\n\n    const handleRestart = () => {\n        const newMed = {...selectedMed}\n        newMed.current = \"true\"\n        setSelectedMed(newMed)\n        dispatch(updateProblem({id:selectedMed.id,note:selectedMedInstructions,current:\"true\"}))\n    }\n\n\n    // useEffect(()=>{\n    //     const updateItem = async (item) => {\n    //         const response = await fetch(`/api/providers/photo/${providerId}`,{\n    //             method:\"post\",\n                \n    //         })\n    //         const data = await response.json()\n    //     }\n    // },[updateRecord])\n\n    useEffect(()=>{\n        const searchForDoc = async (providerId) => {\n            console.log(\"providerID:: \",providerId)\n            if (providerId === \"\") return;\n            const response = await fetch(`/api/providers/photo/${providerId}`)\n            const data = await response.json()\n            setProvider(data.provider)\n        }\n        if (selectedMedProviderId !== \"\") {\n            searchForDoc(selectedMedProviderId)\n        }\n    },[selectedMedProviderId])\n\n    if (loading) {\n        return \"\"\n    }\n    const rippleClasses = { rippleVisible: classes.rippleVisible, child: classes.child, [`${\"@keyframes enter\"}`]: classes[`${\"@keyframes enter\"}`] }\n\n\n    return (\n        <>  \n        <Fade in={loading===false}>\n            <div style={{display:\"flex\",flexDirection:\"row\",width:\"100%\"}}>\n                    <div style={{display:\"flex\",flexDirection:\"column\",width: selectedMed.name ? \"35%\" : \"70%\",transition:\"width .2s ease-in-out\"}}>\n                    <NewItemColorButton fullWidth={\"false\"} onClick={(e)=>handleFormModalOpen(\"NewPhysicalProblemForm\")} style={{outline:\"none\"}}>\n                        <AddIcon></AddIcon> Add A Physical Health Issue\n                    </NewItemColorButton>\n            <List style={{backgroundColor:themeContext.themes === \"dark\" ? \"#444444\" : \"white\",borderRadius:\"8px\",paddingTop:\"0px\"}} component=\"nav\" aria-label=\"main mailbox folders\">\n                        {Object.values(patient.problems).map((med,index)=>{\n                            if (med.type === \"mental\") return\n                            const noted =med.created_at.split(\" \")\n                            const notedDate = noted.slice(0,4).join(\" \")\n                            return(\n                                <>\n                            {selectedIndex !== index && selectedIndex !== index - 1 ? <Divider style={{ width: \"100%\" }}/> : <Divider style={{ width:\"100%\" }} light />}\n                            <ButtonBase\n                                style={{\n                                    width: \"100%\",\n                                    outline:\"none\",\n                                }}\n                                // primary\n                                TouchRippleProps={{ classes: {...rippleClasses}}}\n                            >\n                                <div style={{width:\"100%\"}} className={classes.colorSplash}>\n                            <ListItem\n                                key={`list-item-${index}`}\n                                selected={selectedIndex === index}\n                                onClick={(event) => {\n                                    handleListItemClick(med, index)\n                                }}\n                                className={\"TaskPaperListItem\"}\n                                style={{ paddingTop: \"3px\", paddingBottom: \"3px\", outline: \"none\",\n                                backgroundColor: themeContext.themes === \"dark\" ? selectedIndex === index ? \"#999999\" : \"#444444\" : selectedIndex === index ? \"aliceblue\" : \"white\",\n                                color: themeContext.themes === \"light\" ? \"#444444\" : \"white\" }}\n                            >\n                                <div style={{display:\"flex\",flexDirection:\"row\",justifyContent:\"space-between\",width:\"100%\"}}>\n                                {/* <span style={{color:themeContext.themes === \"light\" ? \"#444444\" : \"lightgreen\"}}>{notedDate}</span>  */}\n                                <span style={{fontSize:\"18px\"}}>{med.name}</span> \n                                {console.log(\"current med boi\",med.current)}\n                               {med.current === \"true\" ? <span style={{fontSize:\"18px\",background:\"yellowgreen\",padding:\"2px\", borderRadius:\"4px\",color:\"white\"}}>Current</span> : <span style={{color:\"white\",fontSize:\"18px\",background:\"darkgray\",padding:\"2px\", borderRadius:\"4px\"}}>Resolved</span>}\n                                </div>\n                                <span className={\"MuiTouchRipple-root\" + \" \" + \"rainbow\" + \" \" + \"party\"}></span>\n                            </ListItem>\n                            </div>\n                            </ButtonBase>\n                            </>\n                            )\n                        })}\n                </List>\n                </div>\n                {selectedMed.name && provider.first_name ? \n                <Fade in={selectedMed.name && provider.first_name} timeout={500}>\n                <div style={{borderRadius:\"4px\",\n                marginLeft:\"10px\",\n                boxShadow:\"rgba(6, 24, 44, 0.4) 0px 0px 0px 2px, rgba(6, 24, 44, 0.65) 0px 4px 6px -1px, rgba(255, 255, 255, 0.08) 0px 1px 0px inset\",\n                overflow:\"scroll\",maxHeight:\"450px\",\n                display:\"flex\",flexDirection:\"column\",width:\"65%\",color:themeContext.themes === \"dark\" ? \"white\" : \"#444444\",background:themeContext.themes === \"dark\" ? \"#444444\" : \"#f9f9f9\"}}>\n                    <div style={{display:\"flex\",flexDirection:\"column\",width:\"100%\",color:themeContext.themes === \"dark\" ? \"white\" : \"#444444\",background:themeContext.themes === \"dark\" ? \"#444444\" : \"white\"}}>\n                    {selectedMed.current === \"true\" ? \"\" : <span style={{color:\"white\",fontSize:\"24px\",background:themeContext.themes === \"dark\" ? \"#222222\" : \"gainsboro\" ,padding:\"2px\", borderRadius:\"4px\",paddingLeft:\"10px\", paddingRight:\"10px\"}}>RESOLVED</span>}\n                    <div style={{display:\"flex\",flexDirection:\"row\",alignItems:\"center\",justifyContent:\"space-between\",padding:\"10px\"}}>\n                        <h2 style={{color:\"cornflowerblue\"}}>{selectedMed.name}</h2>\n                        <span style={{marginLeft:\"20px\",color:\"salmon\"}}>\n                            {\" \" + selectedMed.cui}\n                        </span>\n                        {selectedMed.current === \"false\" ? <GreenColorButton onClick={handleRestart}>Unresolve</GreenColorButton>: <ColorButton onClick={handleDiscontinue}>\n                            Resolve\n                        </ColorButton>}\n                    </div>\n                        <Divider style={{ width: \"100%\" }} light={true} />\n                        <div style={{display:\"flex\",flexDirection:\"column\"}}>\n                            <div style={{display:\"flex\",flexDirection:\"row\",justifyContent:\"space-between\",padding:\"5px\",paddingLeft:\"50px\",paddingRight:\"50px\"}}>\n                                Noted: <span>{selectedMed.created_at}</span>\n                            </div>\n                            <Divider style={{ width: \"100%\"}} light={true} />\n                            <div style={{background:themeContext.themes === \"dark\" ? \"\" : \"#f9f9f9\",display:\"flex\",flexDirection:\"column\",justifyContent:\"space-between\",padding:\"5px\",paddingLeft:\"50px\",paddingRight:\"50px\"}}>\n\n                                <div style={{color:\"cornflowerblue\"}}>Health Issue Note:</div> \n                                {!showInstructionEdit ? \n                                <>\n                                <div style={{display:\"flex\",flexDirection:\"column\",marginLeft:\"20px\",marginRight:\"20px\"}}>\n                                <div className={themeContext.themes === \"dark\" ? classes.patientInstructionsDark: classes.patientInstructions} onClick={(e)=>{setShowInstructionEdit(true)}} rows={4} style={{border:themeContext.themes === \"dark\" ? \"2px solid grey\" : \"2px solid grey\", borderRadius:\"4px\",width:\"100%\",padding:\"10px\"}}>{!selectedMedInstructions ? \"Empty\" : selectedMedInstructions}</div>\n                                <div style={{display:\"flex\",marginLeft:\"40px\"}}><BlueColorButton onClick={(e)=>{setShowInstructionEdit(true)}}><EditIcon style={{marginRight:\"4px\"}}/>Edit</BlueColorButton> </div>\n                                </div>\n                                </>\n                                 : \n                                 <div style={{display:\"flex\",flexDirection:\"column\",marginLeft:\"20px\",marginRight:\"20px\"}}>\n                                    <TextareaAutosize rows={4} style={{outline:\"none\",border:\"2px solid cornflowerblue\", borderRadius:\"4px\",width:\"100%\"}} onChange={(e)=>setSelectedMedInstructions(e.target.value)} value={!selectedMedInstructions ? \"\" : selectedMedInstructions}></TextareaAutosize>\n                                    <div style={{display:\"flex\",flexDirection:\"row\",marginLeft:\"40px\"}}>\n                                    <NewItemColorButton onClick={handleSave}> Save </NewItemColorButton>\n                                    <ColorButton onClick={handleCancel}>Cancel</ColorButton>\n                                    </div>\n                                </div>}\n                            </div>\n                            <Divider style={{ width: \"100%\"}} light={true} />\n                            <div style={{display:\"flex\",flexDirection:\"row\",justifyContent:\"space-between\",alignItems:\"center\",padding:\"5px\",paddingLeft:\"50px\",paddingRight:\"50px\"}}>\n                                Noted By Provider:\n                                <div style={{display:\"flex\",flexDirection:\"row\",justifyContent:\"center\",alignItems:\"center\",background:themeContext.themes === \"dark\" ? \"transparent\" : \"aliceblue\",borderRadius:\"30px\", padding:\"7px\",fontSize:\"18px\",border:themeContext.themes===\"dark\" ? \"2px solid cornflowerblue\" : \"\"}}>\n                                    {provider.picture ? <Avatar src={`${provider.picture}`} className={classes.large}></Avatar>\n                                    : <Avatar className={classes.large}>{provider.first_name[0] + \" \" + provider.last_name[0]}</Avatar>}\n                                    <div style={{display:\"flex\",flexDirection:\"column\",justifyContent:\"center\", marginLeft:\"5px\"}}>\n                                        <span style={{color:themeContext.themes === \"dark\" ? \"white\" : \"cornflowerblue\"}}>{provider.full_name}</span>\n                                        <span style={{color:themeContext.themes === \"dark\" ? \"white\" : \"yellowgreen\"}}>{provider.specialty}</span>\n                                    </div>\n                                    </div>\n                            </div>\n                            <Divider style={{ width: \"100%\"}} light={true} />\n                            <div style={{display:\"flex\",flexDirection:\"row\",justifyContent:\"space-between\"}}>\n                                </div>\n                            <div style={{display:\"flex\",flexDirection:\"row\",justifyContent:\"space-between\"}}>\n\n                            </div>\n                        </div>\n\n                    </div>\n                    <h5 style={{padding:\"10px\",color:\"cornflowerblue\"}}>Unified Medical Language Definitions: </h5>\n                    {selectedItemDefinitions.map((def,index)=>{\n                        return (\n                        <div key={index} style={{width:\"100%\", display:\"flex\",flexDirection:\"column\"}}>\n                        <div style={{display:\"flex\",flexDirection:\"space-between\", alignItems:\"center\"}}>\n                            <span style={{padding:\"20px\"}}>{def.source}:</span><span style={{color:themeContext.themes === \"dark\" ? \"darkgray\" : \"grey\"}}>{def.value}</span>\n                        </div>\n                        <Divider style={{ color:\"cornflowerblue\",width: \"100%\", backgroundColor:themeContext.themes === \"dark\" ? \"white\" : \"#666666\" }} light={true} />\n                        </div>\n                        )\n                    })}\n                </div>\n                </Fade> : \n                <div style={{borderRadius:\"4px\",\n                marginLeft:\"10px\",\n                // boxShadow:\"rgba(6, 24, 44, 0.4) 0px 0px 0px 2px, rgba(6, 24, 44, 0.65) 0px 4px 6px -1px, rgba(255, 255, 255, 0.08) 0px 1px 0px inset\",\n                overflow:\"scroll\",maxHeight:\"450px\",\n                justifyContent:\"center\",alignItems:\"center\",\n                display:\"flex\",flexDirection:\"column\",width:\"65%\",color:themeContext.themes === \"dark\" ? \"white\" : \"#888888\",background:\"transparent\"}}>\n                    <img src=\"https://saga-health.s3-us-west-1.amazonaws.com/student-mental-health-removebg-preview.png\" style={{width:\"400px\"}}></img>\n                    <div>Select a health issue to expand.</div>\n                </div>}\n                </div>\n                </Fade>\n      <Modal\n        aria-labelledby=\"transition-modal-title\"\n        aria-describedby=\"transition-modal-description\"\n        className={classes.modal}\n        open={formModalOpen}\n        onClose={handleFormModalClose}\n        closeAfterTransition\n        BackdropComponent={Backdrop}\n        BackdropProps={{\n          timeout: 200\n        }}\n      >\n        <Slide direction=\"up\" in={formModalOpen}>\n          <div className={classes.modalPaper} style={{autooverflow:\"hidden\",display:\"flex\",outline:\"none\",backgroundColor: themeContext.themes === \"dark\" ? \"#444444\" : \"white\",color: themeContext.themes === \"dark\" ? \"white\" : \"#444444\",padding:\"0\",overflow:\"hidden\"}}>\n          {modalForm === \"NewMedicationForm\" ? <NewMedicationForm patient={props.patient}></NewMedicationForm> : <></> }\n          {modalForm === \"NewOrderForm\" ? <NewOrderForm patient={props.patient}></NewOrderForm> : <></> }\n          {modalForm === \"NewMentalProblemForm\" ? <NewMentalProblemForm patient={props.patient}></NewMentalProblemForm> : <></> }\n          {modalForm === \"NewPhysicalProblemForm\" ? <NewPhysicalProblemForm patient={props.patient}></NewPhysicalProblemForm> : <></> }\n          </div>\n        </Slide>\n      </Modal>\n        </>\n    );\n}\n\nexport default PatientProblemList;","import React, {useState, useEffect, useContext} from 'react';\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Modal from '@material-ui/core/Modal';\nimport Backdrop from '@material-ui/core/Backdrop';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Fade from '@material-ui/core/Fade';\nimport Divider from '@material-ui/core/Divider';\nimport InboxIcon from '@material-ui/icons/Inbox';\nimport DraftsIcon from '@material-ui/icons/Drafts';\nimport FavoriteIcon from '@material-ui/icons/FavoriteTwoTone';\nimport FitnessCenterIcon from '@material-ui/icons/FitnessCenter';\nimport EventIcon from '@material-ui/icons/Event';\nimport AddBoxIcon from '@material-ui/icons/AddBox';\nimport { Slide } from '@material-ui/core';\nimport { useDispatch, useSelector } from 'react-redux';\nimport {createOrder} from '../store/orders'\nimport { set } from 'js-cookie';\nimport ThemeContext from './utils/ThemeContext';\nimport ButtonBase from \"@material-ui/core/ButtonBase\";\n\nconst useStylesLoginTextField = makeStyles((theme) => ({\n    root: {\n      border: '2px solid #e2e2e1',\n      overflow: 'hidden',\n      paddingLeft: \"10px\",\n      paddingTop: \"4px\",\n      paddingBottom: \"4px\",\n      marginTop: \"14px\",\n      borderRadius: 4,\n      backgroundColor: '#fcfcfb',\n      transition: theme.transitions.create(['border-color', 'box-shadow']),\n      '&$focused': {\n        border: '2px solid rgb(94, 158, 214)',\n        backgroundColor: '#fff',\n        // boxShadow: `${fade(theme.palette.primary.main, 0.25)} 0 0 0 1px`,\n      },\n    },\n    focused: {},\n  }));\n\n  const ColorButton = withStyles((theme) => ({\n    root: {\n        color: \"white\",\n        paddingRight: \"10px\",\n        paddingLeft: \"10px\",\n        margin: \"4px\",\n        backgroundColor:\"grey\",\n        '&:hover': {\n            backgroundColor: \"#b1f3b1 !important\",\n        },\n    },\n    }))(Button);\n\n  function LoginTextField(props) {\n    const classes = useStylesLoginTextField();\n    return <TextField InputProps={{ classes, disableUnderline: true }} {...props} />;\n  }\n\nconst useStyles = makeStyles((theme) => ({\n        colorSpash: {\n            backgroundColor: \"lightgreen\",\n        },\n      modal: {\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n      },\n      paper: {\n        backgroundColor: theme.palette.background.paper,\n        border: '2px solid #000',\n        boxShadow: theme.shadows[5],\n        padding: theme.spacing(2, 4, 3),\n        display:\"flex\",\n        flexDirection:\"column\"\n      },\n      rippleVisible: {\n        opacity: 0.5,\n        animation: `$enter 550ms ${theme.transitions.easing.easeInOut}`\n       },\n        \"@keyframes enter\": {\n        \"0%\": {\n            transform: \"scale(0)\",\n            opacity: 0.2\n        },\n        \"100%\": {\n            transform: \"scale(1)\",\n            opacity: 0.5\n        }\n    },\n    [`${\"MuiTouchRipple-root\"}`]: {\n        top: 0,\n        left: 0,\n        right: 0,\n        bottom: 0,\n        zIndex: 0,\n        overflow: \"hidden\",\n        position: \"absolute\",\n        borderRadius: \"inherit\",\n        pointerEvents: \"none\",\n        color:\"blue\",\n        display: \"none\"\n    },\n  }));\n\nfunction PatientEncounters(props) {\n    const classes = useStyles();\n    const [open, setOpen] = React.useState(false);\n    const current_user = useSelector(state=>state.auth.user)\n    const [selectedIndex, setSelectedIndex] = useState(1);\n    const [displayOrderForm,setDisplayOrderForm] = useState(false)\n    const [newOrderType,setNewOrderType] =useState(1)\n    const [newOrderPatientName,setNewOrderPatientName]=useState(props.patient.fullName)\n    const [newOrderStatus,setNewOrderStatus]=useState(\"Needs Scheduled\")\n    const [newOrderSignature,setNewOrderSignature]=useState(\"\")\n    const [createNewOrder,setCreateNewOrder]=useState(true)\n    const themeContext = useContext(ThemeContext)\n    const dispatch = useDispatch()\n\n    const rippleClasses = { rippleVisible: classes.rippleVisible, child: classes.child, [`${\"@keyframes enter\"}`]: classes[`${\"@keyframes enter\"}`] }\n\n    const handleListItemClick = (event, index) => {\n        setSelectedIndex(index);\n    };\n    const handleOpen = () => {\n        setOpen(true);\n    };\n\n    const handleClose = () => {\n        setOpen(false);\n    };\n\n    useEffect(()=>{\n        if (newOrderSignature) {\n            setNewOrderSignature(\"\")\n            dispatch(createOrder({order_type:newOrderType,patient_id:props.patient.id,status:newOrderStatus,provider_id:current_user.id}))\n        }\n    },[createNewOrder])\n\n    return (\n        <>\n            <div style={{zIndex:-1, width:\"100%\",color: themeContext.themes === \"dark\" ? \"white\" : \"black\", backgroundColor: themeContext.themes === \"dark\" ? \"#666666\" : \"white\"}}>\n                <List component=\"nav\" aria-label=\"main mailbox folders\" style={{overflow:\"scroll\",height:\"400px\"}}>\n                    {props.patient.encounters.map((encounter,index)=>{\n                        const start = encounter.start.split(\" \")\n                        const startTime = start[4]\n                        const end = encounter.end.split(\" \")\n                        const endTime = end[4]\n                        const date = start.slice(0,4).join(\" \")\n                        return (\n                            <ButtonBase\n                                style={{\n                                    width: \"100%\",\n                                    outline:\"none\",\n                                }}\n                                // primary\n                                TouchRippleProps={{ classes: {...rippleClasses}}}\n                            >\n                            <div style={{width:\"100%\"}} className={classes.colorSplash}>\n                        <ListItem\n                        button\n                        selected={selectedIndex === index}\n                        onClick={(event) => handleListItemClick(event, index)}\n                        style={{color: selectedIndex === index ? themeContext.themes === \"dark\" ? \"black\" : \"black\" : themeContext.themes === \"dark\" ? \"white\" : \"black\"}}\n                    >\n                        <ListItemIcon>\n                            <EventIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={`${date}`} />\n                        <ListItemText style={{color:\"grey\"}} primary={`From ${startTime} to ${endTime}`} />\n                        <ListItemText primary={`${encounter.type.name}`} />\n                        <ListItemText primary={`${encounter.provider.full_name}`} />\n                    </ListItem>\n                    </div>\n                    </ButtonBase>\n                    )})}\n                </List>\n                <ListItem\n                    button\n                    onClick={(event) => {\n                        handleOpen()\n                    }}\n                    style={{border:\"lightgreen\"}}\n                    >\n                        <ListItemIcon>\n                            <AddBoxIcon/>\n                        </ListItemIcon>\n                        <ListItemText primary={`New Encounter Order`} />\n                    </ListItem>\n                <div>\n                    <Modal\n                        aria-labelledby=\"transition-modal-title\"\n                        aria-describedby=\"transition-modal-description\"\n                        className={classes.modal}\n                        open={open}\n                        onClose={handleClose}\n                        closeAfterTransition\n                        BackdropComponent={Backdrop}\n                        BackdropProps={{\n                          timeout: 500,\n                        }}\n                    >\n                        <Fade in={open}>\n                          <div className={classes.paper}>\n                            <form>\n                                <div>Type: <LoginTextField disabled value={newOrderType}/></div>\n                                <div>Patient: <LoginTextField disabled value={newOrderPatientName}/></div>\n                                <div>Status: <LoginTextField disabled value={newOrderStatus}/></div>\n                                <ColorButton onClick={()=>{\n                                    setNewOrderSignature(true)\n                                    setCreateNewOrder(!createNewOrder)\n                                    handleClose()\n                                }}>Request Encounter</ColorButton>\n                            </form>\n                          </div>\n                        </Fade>\n                    </Modal>\n                </div>\n            </div>\n        </>\n    );\n}\nexport default PatientEncounters;","import React, {useState, useEffect} from 'react';\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Modal from '@material-ui/core/Modal';\nimport Backdrop from '@material-ui/core/Backdrop';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Fade from '@material-ui/core/Fade';\nimport Divider from '@material-ui/core/Divider';\nimport InboxIcon from '@material-ui/icons/Inbox';\nimport DraftsIcon from '@material-ui/icons/Drafts';\nimport FavoriteIcon from '@material-ui/icons/FavoriteTwoTone';\nimport FitnessCenterIcon from '@material-ui/icons/FitnessCenter';\nimport EventIcon from '@material-ui/icons/Event';\nimport AddBoxIcon from '@material-ui/icons/AddBox';\nimport { Slide } from '@material-ui/core';\nimport { useDispatch, useSelector } from 'react-redux';\nimport {createOrder} from '../store/orders'\nimport { set } from 'js-cookie';\n\nconst useStylesLoginTextField = makeStyles((theme) => ({\n    root: {\n      border: '2px solid #e2e2e1',\n      overflow: 'hidden',\n      paddingLeft: \"10px\",\n      paddingTop: \"4px\",\n      paddingBottom: \"4px\",\n      marginTop: \"14px\",\n      borderRadius: 4,\n      backgroundColor: '#fcfcfb',\n      transition: theme.transitions.create(['border-color', 'box-shadow']),\n      '&$focused': {\n        border: '2px solid rgb(94, 158, 214)',\n        backgroundColor: '#fff',\n        // boxShadow: `${fade(theme.palette.primary.main, 0.25)} 0 0 0 1px`,\n      },\n    },\n    focused: {},\n  }));\n\n  const ColorButton = withStyles((theme) => ({\n    root: {\n        color: \"white\",\n        paddingRight: \"10px\",\n        paddingLeft: \"10px\",\n        margin: \"4px\",\n        backgroundColor:\"grey\",\n        '&:hover': {\n            backgroundColor: \"#b1f3b1 !important\",\n        },\n    },\n    }))(Button);\n\n  function LoginTextField(props) {\n    const classes = useStylesLoginTextField();\n    return <TextField InputProps={{ classes, disableUnderline: true }} {...props} />;\n  }\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n      width: '100%',\n      backgroundColor: theme.palette.background.paper,\n    //   display:\"flex\",\n    //   flexDirection:\"row\"\n    },  modal: {\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n      },\n      paper: {\n        backgroundColor: theme.palette.background.paper,\n        border: '2px solid #000',\n        boxShadow: theme.shadows[5],\n        padding: theme.spacing(2, 4, 3),\n        display:\"flex\",\n        flexDirection:\"column\"\n      },\n  }));\n\nfunction PatientOrders(props) {\n    const classes = useStyles();\n    const [open, setOpen] = React.useState(false);\n    const current_user = useSelector(state=>state.auth.user)\n    const [selectedIndex, setSelectedIndex] = useState(1);\n    const [displayOrderForm,setDisplayOrderForm] = useState(false)\n    const [newOrderType,setNewOrderType] =useState(\"Outpatient Appointment Request\")\n    const [newOrderPatientName,setNewOrderPatientName]=useState(props.patient.fullName)\n    const [newOrderStatus,setNewOrderStatus]=useState(\"Needs Scheduling\")\n    const [newOrderSignature,setNewOrderSignature]=useState(\"\")\n    const [createNewOrder,setCreateNewOrder]=useState(true)\n    const dispatch = useDispatch()\n\n    const handleListItemClick = (event, index) => {\n        setSelectedIndex(index);\n    };\n    const handleOpen = () => {\n        setOpen(true);\n    };\n\n    const handleClose = () => {\n        setOpen(false);\n    };\n\n    useEffect(()=>{\n        if (newOrderSignature) {\n            setNewOrderSignature(\"\")\n            dispatch(createOrder({order_type: 1, newOrderType, patient_id:props.patient.id,status:newOrderStatus,provider_id:current_user.id}))\n        }\n    },[createNewOrder])\n\n    return (\n        <>\n            <div className={classes.root} style={{zIndex:-1}}>\n                <List component=\"nav\" aria-label=\"main mailbox folders\">\n                    <ListItem\n                        button\n                        disabled\n                        style={{display:\"flex\",flexDirection:\"row\",justifyContent:\"space-evenly\"}}\n                    >\n                        <div>Type</div>\n                        <div>Provider</div>\n                    </ListItem>\n                    {props.patient.orders.map((order,index)=>{\n                        // const start = encounter.start.split(\" \")\n                        // const startTime = start[4]\n                        // const end = encounter.end.split(\" \")\n                        // const endTime = end[4]\n                        // const date = start.slice(0,4).join(\" \")\n                        return (\n                        <ListItem\n                        button\n                        selected={selectedIndex === index + 1}\n                        onClick={(event) => handleListItemClick(event, index + 1)}\n                    >\n                        <ListItemIcon>\n                            <EventIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={`${order.type}`} />\n                        <ListItemText primary={`${order.provider.full_name}`} />\n                    </ListItem>)})}\n                    <ListItem\n                    button\n                    selected={selectedIndex === props.patient.orders.length + 1}\n                    onClick={(event) => {\n                        handleListItemClick(event, props.patient.orders.length + 1)\n                        handleOpen()\n                    }}\n                    style={{border:\"lightgreen\"}}\n                    >\n                        <ListItemIcon>\n                            <AddBoxIcon/>\n                        </ListItemIcon>\n                        <ListItemText primary={`New Order`} />\n                    </ListItem>\n                </List>\n                {/* <Slide direction=\"up\" in={displayOrderForm} mountOnEnter unmountOnExit>\n                    <div style={{display:\"flex\", flexDirection:\"column\"}}>\n                        <form>\n                            HELLOO!!!!!!!!!!!!!\n                        </form>\n                    </div>\n                </Slide> */}\n                <div>\n                    <Modal\n                        aria-labelledby=\"transition-modal-title\"\n                        aria-describedby=\"transition-modal-description\"\n                        className={classes.modal}\n                        open={open}\n                        onClose={handleClose}\n                        closeAfterTransition\n                        BackdropComponent={Backdrop}\n                        BackdropProps={{\n                          timeout: 500,\n                        }}\n                    >\n                        <Fade in={open}>\n                          <div className={classes.paper}>\n                            <form>\n                                <div>Type: <LoginTextField disabled value={newOrderType}/></div>\n                                <div>Patient: <LoginTextField disabled value={newOrderPatientName}/></div>\n                                <div>Status: <LoginTextField disabled value={newOrderStatus}/></div>\n                                <ColorButton onClick={()=>{\n                                    setNewOrderSignature(true)\n                                    setCreateNewOrder(!createNewOrder)\n                                    handleClose()\n                                }}>Create and Sign Order</ColorButton>\n                            </form>\n                          </div>\n                        </Fade>\n                    </Modal>\n                </div>\n            </div>\n        </>\n    );\n}\nexport default PatientOrders;","import React, { useEffect, useState, useContext} from 'react';\nimport {openPatientChart} from '../store/activities'\nimport { useDispatch, useSelector } from 'react-redux';\nimport HomeContext from './utils/HomeContext';\nimport ExitToAppTwoToneIcon from '@material-ui/icons/ExitToAppTwoTone';\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Divider from '@material-ui/core/Divider';\nimport { Grid, Container, Card, InputBase, TextField } from '@material-ui/core';\nimport PersonOutlineIcon from '@material-ui/icons/PersonOutline';\nimport DashboardIcon from '@material-ui/icons/Dashboard';\nimport DeveloperBoardIcon from '@material-ui/icons/DeveloperBoard';\nimport ShowChartIcon from '@material-ui/icons/ShowChart';\nimport AddIcon from '@material-ui/icons/Add';\nimport Modal from '@material-ui/core/Modal';\nimport Fade from '@material-ui/core/Fade';\nimport Backdrop from '@material-ui/core/Backdrop';\nimport { NavLink } from 'react-router-dom';\nimport Cookies from 'js-cookie'\n\nfunction getModalStyle() {\n    const top = 15\n    const left = 40\n  \n    return {\n      top: `${top}%`,\n      left: `${left}%`,\n      transform: `translate(-${top}%, -${left}%)`,\n    };\n  }  \n\n\nconst ColorButton = withStyles((theme) => ({\n    root: {\n        color: \"#ed4959\",\n        paddingRight: \"10px\",\n        paddingLeft: \"10px\",\n        margin: \"4px\",\n        backgroundColor:\"white\",\n        border:\"1px solid #ed4959\",\n        '&:hover': {\n            backgroundColor: \"#ed4959 !important\",\n            color:\"white\",\n            border:\"1px solid #ed4959\",\n        },\n    },\n    }))(Button);\n\nfunction PatientNotes(props) { \n    const useStyles = makeStyles((theme) => ({\n        paper: () => {\n          return {\n            position: 'absolute',\n            display: 'flex',\n            alignItems: 'flex-start',\n            justifyContent: 'flex-start',\n            width: 380,\n            backgroundColor: \"rgba(0, 121, 191, 0)\",\n            outline: 'none',\n            height: '150px',\n          }\n        },\n        teamModal: {\n          display: 'flex',\n          alignItems: 'center',\n          justifyContent: 'center',\n        },\n        teamPaper: {\n          backgroundColor: theme.palette.background.paper,\n          border: '2px solid #000',\n          boxShadow: theme.shadows[5],\n          padding: theme.spacing(2, 4, 3),\n        },\n        blue: {\n          height: \"15px\",\n          width: \"15px\",\n          backgroundColor: \"rgb(0, 121, 191)\",\n          marginBottom: \"4px\",\n          '&:hover': {\n            cursor: 'pointer',\n          }\n        },\n    \n        green: {\n          height: \"15px\",\n          width: \"15px\",\n          backgroundColor: \"rgb(75, 191, 107)\",\n          marginBottom: \"4px\",\n          '&:hover': {\n            cursor: 'pointer',\n          }\n        },\n    \n        red: {\n          height: \"15px\",\n          width: \"15px\",\n          backgroundColor: \"rgb(176, 70, 50)\",\n          marginBottom: \"4px\",\n          '&:hover': {\n            cursor: 'pointer',\n          }\n        },\n    \n        orange: {\n          height: \"15px\",\n          width: \"15px\",\n          backgroundColor: \"rgb(210, 144, 52)\",\n          marginBottom: \"4px\",\n          '&:hover': {\n            cursor: 'pointer',\n          }\n        },\n    \n        tan: {\n          height: \"15px\",\n          width: \"15px\",\n          backgroundColor: \"tan\",\n          marginBottom: \"4px\",\n          '&:hover': {\n            cursor: 'pointer',\n          }\n        },\n    \n        purple: {\n          height: \"15px\",\n          width: \"15px\",\n          backgroundColor: \"rgb(137, 96, 158)\",\n          marginBottom: \"4px\",\n          '&:hover': {\n            cursor: 'pointer',\n          }\n        },\n    \n        black: {\n          height: \"15px\",\n          width: \"15px\",\n          backgroundColor: \"black\",\n          marginBottom: \"4px\",\n          '&:hover': {\n            cursor: 'pointer',\n          }\n        },\n    \n        pink: {\n          height: \"15px\",\n          width: \"15px\",\n          backgroundColor: \"rgb(205, 90, 145)\",\n          marginBottom: \"4px\",\n          '&:hover': {\n            cursor: 'pointer',\n          }\n        },\n    \n        grey: {\n          height: \"15px\",\n          width: \"15px\",\n          backgroundColor: \"rgb(131, 140, 145)\",\n          marginBottom: \"4px\",\n          '&:hover': {\n            cursor: 'pointer',\n          }\n        },\n    \n        root: {\n          display: \"flex\",\n          justifyContent: 'center',\n          padding: theme.spacing(4),\n        },\n    \n        h3: {\n          color: \"#172b4d\",\n          margin: \"0\",\n        },\n    \n        p: {\n          textAlign: 'center',\n        },\n    \n        ul: {\n          listStyle: 'none',\n          marginRight: \"20px\",\n        },\n    \n        buttons: {\n          fontSize: \".9em\",\n        },\n    \n        Createboard: {\n          display: \"flex\",\n          height: \"80px\",\n          borderRadius: \"3px\",\n          backgroundColor: \"rgba(9,30,66,.04)\",\n          alignItems: \"center\",\n          justifyContent: \"center\",\n          '&:hover': {\n            backgroundColor: 'rgba(9, 30, 66, .2)',\n            cursor: 'pointer'\n          }\n        },\n    \n        title: {\n          display: \"flex\",\n          height: \"0\",\n          marginTop: '20px',\n          marginBottom: '20px',\n        },\n    \n        board: {\n          display: \"flex\",\n          height: \"80px\",\n          borderRadius: \"3px\",\n          backgroundColor: \"rgb(0, 121, 191)\",\n          alignItems: \"center\",\n          justifyContent: \"center\",\n          fontFamily: \"-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Noto Sans,Ubuntu,Droid Sans,Helvetica Neue,sans-serif\",\n          color: 'white',\n          fontWeight: '700',\n          '&:hover': {\n            backgroundColor: 'rgb(0, 71, 141)',\n            cursor: 'pointer'\n          }\n        },\n    \n        boardsContainer: {\n          display: 'flex',\n          flexDirection: 'column'\n        },\n    \n        modalForm: {\n          display: 'flex',\n          flexDirection: 'column',\n          justifyContent: 'space-between',\n          width: '100%',\n          height: '120px',\n        },\n    \n        modalInput: {\n          borderRadius: '5px',\n          borderBottom: 'none',\n          '&:hover': {\n            backgroundColor: 'rgba(150, 150, 150, .4)'\n          },\n          fontFamily: \"-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Noto Sans,Ubuntu,Droid Sans,Helvetica Neue,sans-serif\",\n          color: 'white',\n          fontWeight: '700',\n          paddingLeft: '5px'\n        },\n    \n        modalInputFocused: {\n          backgroundColor: 'rgba(255, 255, 255, .45)',\n          border: 'none',\n          fontFamily: \"-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Noto Sans,Ubuntu,Droid Sans,Helvetica Neue,sans-serif\",\n          color: 'white',\n          fontWeight: '700',\n          paddingLeft: '5px'\n        },\n    \n        inputContainer: {\n          borderRadius: '3px',\n          height: '80px',\n          width: '240px',\n          padding: '10px',\n    \n        },\n    \n        formButton: () => {\n          return {\n            borderRadius: '3px',\n            width: 'fit-content',\n            border: 'none',\n            backgroundColor: title ? 'green' : 'lightgrey',\n            color: title ? 'white' : 'grey',\n            fontFamily: '-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Noto Sans,Ubuntu,Droid Sans,Helvetica Neue,sans-serif',\n            padding: '6px'\n          }\n        },\n    \n        templates: {\n          paddingTop: '3px'\n        }\n    \n      }));\n    console.log(props)\n    const user = useSelector(state => state.auth.user);\n    const [title, setTitle] = useState(\"\");\n    const [dynamicColor, setDynamicColor] = useState(\"rgb(0, 121, 191)\");\n    const [modalStyle] = useState(getModalStyle);\n    const [open, setOpen] = useState(false);\n    const userId = user.id;\n    const context = useContext(HomeContext)\n    const dispatch = useDispatch()\n    const openTabs = useSelector(state=>state.activities.open_tabs)\n    const classes = useStyles();\n  const [creatingNewTeam,setCreatingNewTeam] = useState(false)\n  const [createTeam,setCreateTeam] = useState(false)\n  const [newTeamName,setNewTeamName] =useState(\"\")\n  const [newTeam,setNewTeam] =useState({})\n  const [newTeamDescription,setNewTeamDescription] =useState(\"\")\n  const [teamOpen,setTeamOpen] = useState(false)\n  const handleOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n    setDynamicColor(\"rgb(0, 121, 191)\")\n  };\n\n  const handleSubmit = async () => {\n    console.log(title, userId, dynamicColor)\n    debugger\n    // dispatch(createBoard(title, userId, dynamicColor))\n    setTitle(\"\");\n    handleClose()\n  };\n\n  const handleBoard = (e) => {\n    setTitle(e.target.value)\n  }\n\n  // const boards = useSelector(state => state.currentPatient.encounters);\n  const boards = []\n\n  if (boards === undefined) {\n    return null;\n  }\n\n  return (\n    <>\n    <Container maxWidth='lg' className={classes.root}>\n      <Grid container>\n        <Grid item xs={21}>\n          <Grid container className={classes.boardsContainer}>\n            <Grid item xs={21}>\n              <Grid container maxWidth='lg' spacing={2}>\n                {Object.values(boards).map(object => {\n                  return (\n                    <Grid key={object.id} item lg={3}>\n                      <NavLink style={{ textDecoration: \"none\" }} to={`boards/${object.id}`}>\n                        <Card className={classes.board} style={{color:\"black\", backgroundColor: object.color ? object.color : \"white\",padding:\"5px\" }}>\n                          <p>{object.start}</p>\n                        </Card>\n                      </NavLink>\n                    </Grid>\n                  )\n                })}\n                <Grid item xs={3}>\n                  <Card onClick={handleOpen} className={classes.Createboard}>\n                    Create Board\n                    </Card>\n                  <Modal\n                    open={open}\n                    onClose={handleClose}\n                    aria-labelledby=\"simple-modal-title\"\n                    aria-describedby=\"simple-modal-description\"\n                  >\n                    <Grid style={modalStyle} className={classes.paper}>\n                      <Grid item xs={8}>\n                        <form className={classes.modalForm}>\n                          <div style={{ backgroundColor: dynamicColor }} className={classes.inputContainer}>\n                            <InputBase autoFocus className={classes.modalInput} classes={{ focused: classes.modalInputFocused }} placeholder=\"Add Board Title\" name=\"title\" value={title} onChange={handleBoard} />\n                          </div>\n                          <button className={classes.formButton} onClick={handleSubmit}>Create Board</button>\n                        </form>\n                      </Grid>\n                      <Grid container item xs={2} className={classes.templates}>\n                        <Grid item xs={4}>\n                          <Card className={classes.blue} onClick={() => setDynamicColor(\"rgb(0, 121, 191)\")} />\n                        </Grid>\n                        <Grid item xs={4}>\n                          <Card className={classes.green} onClick={() => setDynamicColor(\"rgb(75, 191, 107)\")} />\n                        </Grid>\n                        <Grid item xs={4}>\n                          <Card className={classes.red} onClick={() => setDynamicColor(\"rgb(176, 70, 50)\")} />\n                        </Grid>\n                        <Grid item xs={4}>\n                          <Card className={classes.orange} onClick={() => setDynamicColor(\"rgb(210, 144, 52)\")} />\n                        </Grid>\n                        <Grid item xs={4}>\n                          <Card className={classes.tan} onClick={() => setDynamicColor(\"tan\")} />\n                        </Grid>\n                        <Grid item xs={4}>\n                          <Card className={classes.purple} onClick={() => setDynamicColor(\"rgb(137, 96, 158)\")} />\n                        </Grid>\n                        <Grid item xs={4}>\n                          <Card className={classes.black} onClick={() => setDynamicColor(\"black\")} />\n                        </Grid>\n                        <Grid item xs={4}>\n                          <Card className={classes.pink} onClick={() => setDynamicColor(\"rgb(205, 90, 145)\")} />\n                        </Grid>\n                        <Grid item xs={4}>\n                          <Card className={classes.grey} onClick={() => setDynamicColor(\"rgb(131, 140, 145)\")} />\n                        </Grid>\n                      </Grid>\n                    </Grid>\n                  </Modal>\n                </Grid>\n              </Grid>\n            </Grid>\n          </Grid>\n        </Grid>\n      </Grid>\n    </Container>\n    </>\n    )\n}\n\nexport default PatientNotes;","import React, {useEffect, useState} from \"react\";\nimport _ from \"lodash\";\nimport { Responsive, WidthProvider } from \"react-grid-layout\";\nimport FavoriteIcon from '@material-ui/icons/FavoriteTwoTone';\nimport FitnessCenterIcon from '@material-ui/icons/FitnessCenter';\nimport BasicPatientAttributes from './BasicPatientAttributes';\nimport PatientPhoneNumbers from './PatientPhoneNumbers';\nimport PatientAddressInfo from './PatientAddressInfo';\nimport PatientMedications from './PatientMedications';\nimport ThemeContext from './utils/ThemeContext';\nimport PatientProblems from './PatientMentalProblems';\nimport PatientMentalProblemList from './PatientMentalProblemList';\nimport PatientPhysicalProblemList from './PatientPhysicalProblemList';\nimport PatientMedicationsList from './PatientMedicationsList';\nimport PatientEncounters from '../components/PatientEncounters';\nimport PatientOrders from '../components/PatientOrders';\nimport { useSelector } from 'react-redux';\nimport PatientNotes from '../components/PatientNotes';\nimport { Grid, IconButton } from '@material-ui/core';\nimport PatientEncountersList from './PatientEncountersList';\nimport PatientOrdersList from './PatientOrdersList';\nimport AddIcon from '@material-ui/icons/AddCircleOutlineTwoTone';\nconst ResponsiveReactGridLayout = WidthProvider(Responsive);\n\n\nclass ToolBoxItem extends React.Component {\n  render() {\n    return (\n      <div\n        className=\"toolbox__items__item\"\n        onClick={this.props.onTakeItem.bind(undefined, this.props.item)}\n      >\n        {this.props.item.i}\n      </div>\n    );\n  }\n}\nclass ToolBox extends React.Component {\n  render() {\n    return (\n      <div className=\"toolbox\">\n        <span className=\"toolbox__title\">Toolbox</span>\n        <div className=\"toolbox__items\">\n          {this.props.items.map(item => (\n            <ToolBoxItem\n              key={item.i}\n              item={item}\n              onTakeItem={this.props.onTakeItem}\n            />\n          ))}\n        </div>\n      </div>\n    );\n  }\n}\n\nconst ChartReviewInfo = (props)=> {\n  const defaultProps = {\n    className: \"layout\",\n    rowHeight: 30,\n    onLayoutChange: function() {},\n    cols: { lg: 3, md: 2, sm: 2, xs: 1, xxs: 1 },\n    initialLayout: generateLayout()\n  };\n\n  const [currentBreakpoint,setCurrentBreakpoint] = useState(\"lg\")\n  const [compactType,setCompactType] = useState(\"vertical\")\n  const [mounted,setMounted] = useState(false)\n  const [layouts,setLayouts] = useState({lg:generateLayout()})\n  const [toolbox,setToolbox] = useState({lg:[]})\n\n  const state = {\n    currentBreakpoint: \"lg\",\n    compactType: \"vertical\",\n    mounted: false,\n    layouts: { lg: generateLayout() },\n    toolbox: { lg: [] }\n  };\n\n  const componentDidMount = () => {\n    setMounted(true)\n  }\n\n  useEffect(()=>{\n      setMounted(true)\n  },[])\n\n  const generateDOM = () => {\n    return _.map(layouts[currentBreakpoint], l => {\n      return (\n        // <div key={l.i} className={l.static ? \"static\" : \"\"}>\n        //   <div className=\"hide-button\" onClick={onPutItem.bind(this, l)}>\n        //     &times;\n        //   </div>\n        //   {l.static ? (\n        //     <span\n        //       className=\"text\"\n        //       title=\"This item is static and cannot be removed or resized.\"\n        //     >\n        //       Static - {l.i}\n        //     </span>\n        //   ) : (\n        //     <span className=\"text\">{l.i}</span>\n        //   )}\n          <div key={l.i} style={{display:\"flex\",flexDirection:\"column\",borderRadius:\"9px\",boxShadow: \"rgba(60, 64, 67, 0.3) 0px 1px 2px 0px, rgba(60, 64, 67, 0.15) 0px 1px 3px 1px\",backgroundColor:\"dark\" === \"dark\" ? \"#999999\" : \"white\"}}>\n                        <div style={{display:\"flex\",flexDirection:\"row\", alignContent:\"center\",alignItems:\"center\",justifyContent:\"space-between\"}}>\n                            <div style={{display:\"flex\",flexDirection:\"row\", alignContent:\"center\",alignItems:\"center\"}}>\n                            <img style={{height:\"25px\",width:\"25px\", marginLeft:\"5px\"}} src=\"https://saga-health.s3-us-west-1.amazonaws.com/256x256.png\"></img>\n                            <div style={{color: \"dark\" === \"dark\" ? \"white\" : \"rgb(85, 177, 250)\", width:\"100%\", padding:\"4px\", fontSize:\"16px\"}}> Physical Health Problems</div>\n                            </div>\n                            <div style={{display:\"flex\",flexDirection:\"row\", alignContent:\"center\",alignItems:\"center\"}}>\n                                <IconButton style={{height:\"25px\",width:\"25px\", marginRight:\"10px\"}}>\n                                    <AddIcon style={{height:\"25px\",width:\"25px\",color:\"lightgreen\"}}></AddIcon>\n                                </IconButton>\n                            </div>\n                        </div>\n                        <PatientPhysicalProblemList patient={props.patient}/>\n                        </div>\n        // </div>\n      );\n    });\n  }\n\n  const onBreakpointChange = breakpoint => {\n    // this.setState(prevState => ({\n    //   currentBreakpoint: breakpoint,\n    //   toolbox: {\n    //     ...prevState.toolbox,\n    //     [breakpoint]:\n    //       prevState.toolbox[breakpoint] ||\n    //       prevState.toolbox[prevState.currentBreakpoint] ||\n    //       []\n    //   }\n    // }));\n    setCurrentBreakpoint(breakpoint)\n    setToolbox({...toolbox})\n  };\n\n  const onCompactTypeChange = () => {\n    const oldCompactType = compactType\n    setCompactType( oldCompactType === \"horizontal\"\n    ? \"vertical\"\n    : oldCompactType === \"vertical\"\n    ? null\n    : \"horizontal\")\n  };\n\n  const onTakeItem = item => {\n    this.setState(prevState => ({\n      toolbox: {\n        ...prevState.toolbox,\n        [prevState.currentBreakpoint]: prevState.toolbox[\n          prevState.currentBreakpoint\n        ].filter(({ i }) => i !== item.i)\n      },\n      layouts: {\n        ...prevState.layouts,\n        [prevState.currentBreakpoint]: [\n          ...prevState.layouts[prevState.currentBreakpoint],\n          item\n        ]\n      }\n    }));\n  };\n\n  const onPutItem = item => {\n    this.setState(prevState => {\n      return {\n        toolbox: {\n          ...prevState.toolbox,\n          [prevState.currentBreakpoint]: [\n            ...(prevState.toolbox[prevState.currentBreakpoint] || []),\n            item\n          ]\n        },\n        layouts: {\n          ...prevState.layouts,\n          [prevState.currentBreakpoint]: prevState.layouts[\n            prevState.currentBreakpoint\n          ].filter(({ i }) => i !== item.i)\n        }\n      };\n    });\n  };\n\n  const onLayoutChange = (layout, layouts) => {\n    props.onLayoutChange(layout, layouts);\n    setLayouts(layouts)\n  };\n\n  const onNewLayout = () => {\n    this.setState({\n      layouts: { lg: generateLayout() }\n    });\n  };\n    return (\n      <div>\n        <div>\n          Current Breakpoint: {currentBreakpoint} (\n          {props.cols[currentBreakpoint]} columns)\n        </div>\n        <div>\n          Compaction type:{\" \"}\n          {_.capitalize(compactType) || \"No Compaction\"}\n        </div>\n        <button onClick={onNewLayout}>Generate New Layout</button>\n        <button onClick={onCompactTypeChange}>\n          Change Compaction Type\n        </button>\n\n        <ToolBox\n          items={toolbox[currentBreakpoint] || []}\n          onTakeItem={onTakeItem}\n        />\n\n        <ResponsiveReactGridLayout\n          {...props}\n          layouts={layouts}\n          autoSize={true}\n          onBreakpointChange={onBreakpointChange}\n          onLayoutChange={onLayoutChange}\n          // WidthProvider option\n          measureBeforeMount={false}\n          // I like to have it animate on mount. If you don't, delete `useCSSTransforms` (it's default `true`)\n          // and set `measureBeforeMount={true}`.\n          useCSSTransforms={mounted}\n          compactType={compactType}\n          preventCollision={false}\n        >\n          {generateDOM()}\n        </ResponsiveReactGridLayout>\n      </div>\n    );\n}\n\nfunction generateLayout() {\n  return _.map(_.range(0, 5), function(item, i) {\n    var y = Math.ceil(Math.random() * 4) + 1;\n    return {\n      x: (_.random(0, 5) * 2) % 12,\n      y: Math.floor(i / 6) * y,\n      w: 1,\n      h: y,\n      i: i.toString()\n    };\n  });\n}\n\nexport default ChartReviewInfo\n\n// if (process.env.STATIC_EXAMPLES === true) {\n//   import(\"../test-hook.jsx\").then(fn => fn.default(ToolboxLayout));\n// }","import React, { useContext } from 'react';\nimport {openPatientChart} from '../store/activities'\nimport { useDispatch, useSelector } from 'react-redux';\nimport HomeContext from './utils/HomeContext';\nimport ExitToAppTwoToneIcon from '@material-ui/icons/ExitToAppTwoTone';\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Divider from '@material-ui/core/Divider';\nimport HomeTwoToneIcon from '@material-ui/icons/HomeTwoTone';\nimport HomeIcon from '@material-ui/icons/Home';\nimport StayCurrentPortraitIcon from '@material-ui/icons/StayCurrentPortrait';\nimport StayPrimaryPortraitTwoToneIcon from '@material-ui/icons/StayPrimaryPortraitTwoTone';\nimport BusinessTwoToneIcon from '@material-ui/icons/BusinessTwoTone';\nimport ThemeContext from './utils/ThemeContext';\nimport PatientPhoneNumbers from './PatientPhoneNumbers';\nimport PatientAddressInfo from './PatientAddressInfo';\n\n\nconst ColorButton = withStyles((theme) => ({\n    root: {\n        color: \"#ed4959\",\n        paddingRight: \"10px\",\n        paddingLeft: \"10px\",\n        margin: \"4px\",\n        backgroundColor:\"white\",\n        border:\"1px solid #ed4959\",\n        '&:hover': {\n            backgroundColor: \"#ed4959 !important\",\n            color:\"white\",\n            border:\"1px solid #ed4959\",\n        },\n    },\n    }))(Button);\n\nfunction SelectedOrderPreviewCard(props) { \n    console.log(props)\n    const context = useContext(HomeContext)\n    const dispatch = useDispatch()\n    const openTabs = useSelector(state=>state.activities.open_tabs)\n    const themeContext = useContext(ThemeContext)\n\n    const openChart=(id)=>{\n        if (!openTabs.some(activity=>activity.name === `${props.patient.lastName}, ${props.patient.firstName}`)) dispatch(openPatientChart(id))\n        context.setSelectedTab(`${props.patient.lastName}, ${props.patient.firstName}`,props.patient)\n    }\n\n    return (\n        <>\n            <div style={{display:\"flex\",flexDirection:\"column\",borderRadius:\"7px\",padding:\"10px\",margin:\"10px\",backgroundColor:themeContext.themes === \"dark\" ? \"#999999\" : \"white\",boxShadow: \"rgba(0, 0, 0, 0.1) 0px 1px 3px 0px, rgba(0, 0, 0, 0.06) 0px 1px 2px 0px\"}}>\n                <div style={{display:\"flex\",flexDirection:\"row\",alignItems:\"center\", justifyContent:\"space-between\"}}>\n                    <p style={{color:themeContext.themes === \"dark\" ? \"white\" : \"#999999\"}}>{props.patient.firstName} {props.patient.lastName}</p>\n                    <ColorButton style={{backgroundColor:themeContext.themes === \"dark\" ? \"#666666\" : \"\",color:themeContext.themes === \"dark\" ? \"white\" : \"\"}} size=\"small\" onClick={()=>openChart(props.patient.id)}>\n                        <span>Open Chart</span> \n                        <ExitToAppTwoToneIcon style={{marginLeft:\"3px\"}}/>\n                    </ColorButton></div>\n                <Divider style={{marginTop:\"3px\",marginBottom:\"3px\"}}/>\n                <div style={{display:\"flex\",flexDirction:\"row\"}}>\n                {/* <div className={\"small-circular--portrait\"} style={{justifyContent:\"left\", marginTop:\"5px\"}}>\n                <img id=\"user-photo\" src={props.patient.picture ? props.patient.picture : \"\"}/>\n                </div> */}\n                <div style={{display:\"flex\",flexDirection:\"column\",marginLeft:\"6px\"}}>\n                <div style={{display:\"flex\",flexDirection:\"column\",alignItems:\"center\",justifyContent:\"center\"}}>\n                    <PatientPhoneNumbers patient={props.patient}/>\n                    <PatientAddressInfo patient={props.patient}/>\n                </div>\n                    {/* <div style={{display:\"flex\",flexDirection:\"column\",padding:\"4px\",borderRadius:\"4px\",backgroundColor:themeContext.themes === \"dark\" ? \"#666666\" : \"white\",border:\"2px solid ivory\", width:\"fit-content\"}}>\n                        <span><HomeTwoToneIcon style={{color:\"coral\"}} size=\"small\"/> <span style={{fontWeight:\"bolder\",color:themeContext.themes === \"dark\" ? \"white\" : \"#343434\"}}>{props.patient.home_phone}</span></span>\n                        <span><StayPrimaryPortraitTwoToneIcon style={{color:\"lightblue\"}} size=\"small\"/> <span style={{fontWeight:\"bolder\",color:themeContext.themes === \"dark\" ? \"white\" : \"#343434\"}}>{props.patient.mobile_phone}</span></span>\n                        <span><BusinessTwoToneIcon style={{color:\"lightgreen\"}} size=\"small\"/> <span style={{fontWeight:\"bolder\",color:themeContext.themes === \"dark\" ? \"white\" : \"#343434\"}}>{props.patient.work_phone}</span></span>\n                    </div> */}\n                    <div>\n                        Ordering Provider: {props.order.provider.full_name}\n                    </div>\n                    <div>\n                        Order Note: {props.order.note}\n                    </div>\n                </div>\n                </div>\n            </div>\n        </>\n    );\n}\n\nexport default SelectedOrderPreviewCard;","import React, { useContext } from 'react';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport Typography from '@material-ui/core/Typography';\nimport Box from '@material-ui/core/Box';\nimport ChartReview from './ChartReview';\nimport PatientEncountersList from './PatientEncountersList';\nimport PatientMedicationList from './PatientMedicationsList'\nimport PatientMentalProblemsList from './PatientMentalProblemList'\nimport PatientMedsTable from './PatientMedsTable';\nimport PatientMedications from './PatientMedications';\nimport ThemeContext from './utils/ThemeContext';\nimport PatientPhysicalProblemsList from './PatientPhysicalProblemList'\nimport { Fade } from '@material-ui/core';\nimport PatientOrdersList from './PatientOrdersList';\n\nconst tabStyle = {\n  outline: \"none\",\n  zIndex:1,\n  transition:\"all .3s ease-in-out\",\n}\n\nfunction TabPanel(props) {\n  const { children, value, index, ...other } = props;\n\n  return (\n    <div\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`scrollable-auto-tabpanel-${index}`}\n      aria-labelledby={`scrollable-auto-tab-${index}`}\n      {...other}\n    >\n      {value === index && (\n        <Box p={3}>\n          <Typography>{children}</Typography>\n        </Box>\n      )}\n    </div>\n  );\n}\n\nTabPanel.propTypes = {\n  children: PropTypes.node,\n  index: PropTypes.any.isRequired,\n  value: PropTypes.any.isRequired,\n};\n\nfunction a11yProps(index) {\n  return {\n    id: `scrollable-auto-tab-${index}`,\n    'aria-controls': `scrollable-auto-tabpanel-${index}`,\n  };\n}\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n    width: '100%',\n    marginRight:\"0px\",\n  },\n}));\n\nexport default function ChartReviewTabs(props) {\n  const classes = useStyles();\n  const [value, setValue] = React.useState(0);\n  const themeContext = useContext(ThemeContext)\n\n  const handleChange = (event, newValue) => {\n    setValue(newValue);\n  };\n\n  return (\n    <div className={classes.root} style={{backgroundColor:themeContext.themes === \"dark\" ? \"#444444\" : \"white\"}}>\n      <AppBar position=\"static\" style={{backgroundColor:themeContext.themes === \"dark\" ? \"#666666\" : \"white\"}}>\n        <Tabs\n          value={value}\n          onChange={handleChange}\n          indicatorColor=\"primary\"\n          textColor=\"primary\"\n          variant=\"scrollable\"\n          scrollButtons=\"auto\"\n          aria-label=\"scrollable auto tabs example\"\n        >\n          <Tab label=\"Medications\" style={{...tabStyle, color:themeContext.themes === \"dark\" ? \"white\" : \"\"}} \n            icon={<img style={{height:\"30px\",width:\"30px\",transition:\"all .3s ease-in-out\"}} src=\"https://saga-health.s3-us-west-1.amazonaws.com/91-919780_stimulant-drugs-clipart-png-download.png\"></img>} \n            {...a11yProps(0)}\n          />\n          <Tab label=\"Mental Health\" style={{...tabStyle, color:themeContext.themes === \"dark\" ? \"white\" : \"\"}} \n            icon={<img style={{height:\"30px\",width:\"30px\",transition:\"all .3s ease-in-out\"}} src=\"https://saga-health.s3-us-west-1.amazonaws.com/icons8-brain-100+(6).png\"></img>} \n            {...a11yProps(1)}\n          />\n          <Tab label=\"Problem List\" style={{...tabStyle, color:themeContext.themes === \"dark\" ? \"white\" : \"\"}} \n            icon={<img style={{height:\"30px\",width:\"30px\",transition:\"all .3s ease-in-out\"}} src=\"https://saga-health.s3-us-west-1.amazonaws.com/256x256.png\"></img>} \n            {...a11yProps(2)}\n          />\n          <Tab label=\"Procedure Orders\" style={{...tabStyle, color:themeContext.themes === \"dark\" ? \"white\" : \"\"}} \n            icon={<img style={{height:\"30px\",width:\"30px\",transition:\"all .3s ease-in-out\"}} src=\"https://saga-health.s3-us-west-1.amazonaws.com/paper-rocket-flat.svg\"></img>} \n            {...a11yProps(3)}\n          />\n          <Tab label=\"Encounters\" style={{...tabStyle, color:themeContext.themes === \"dark\" ? \"white\" : \"\"}} \n            icon={<img style={{height:\"30px\",width:\"30px\",transition:\"all .3s ease-in-out\"}} src=\"https://saga-health.s3-us-west-1.amazonaws.com/icons8-calendar-100.png\"></img>} \n            {...a11yProps(4)}\n          />\n        </Tabs>\n      </AppBar>\n      <TabPanel value={value} index={0}>\n        <div style={{width:\"100%\",display:\"flex\"}}></div>\n        <PatientMedications patient={props.patient}/>\n      </TabPanel>\n      <TabPanel value={value} index={1}>\n        <PatientMentalProblemsList patient={props.patient}/>\n      </TabPanel>\n      <TabPanel value={value} index={2}>\n        <PatientPhysicalProblemsList patient={props.patient}/>\n      </TabPanel>\n      <TabPanel value={value} index={3}>\n        <PatientOrdersList patient={props.patient}/>\n      </TabPanel>\n      <TabPanel value={value} index={4}>\n        <PatientEncountersList patient={props.patient}/>\n      </TabPanel>\n    </div>\n  );\n}","import React, { useContext, useState } from 'react';\nimport FavoriteIcon from '@material-ui/icons/FavoriteTwoTone';\nimport FitnessCenterIcon from '@material-ui/icons/FitnessCenter';\nimport BasicPatientAttributes from './BasicPatientAttributes';\nimport PatientPhoneNumbers from './PatientPhoneNumbers';\nimport PatientAddressInfo from './PatientAddressInfo';\nimport ThemeContext from './utils/ThemeContext';\nimport PatientProblems from './PatientMentalProblems';\nimport PatientMentalProblemList from './PatientMentalProblemList';\nimport NativeSelect from '@material-ui/core/NativeSelect';\nimport InputBase from '@material-ui/core/InputBase';\nimport FormControl from '@material-ui/core/FormControl';\nimport Modal from '@material-ui/core/Modal';\nimport Backdrop from '@material-ui/core/Backdrop';\nimport PatientPhysicalProblemList from './PatientPhysicalProblemList';\nimport PatientMedicationsList from './PatientMedicationsList';\nimport PatientEncounters from '../components/PatientEncounters';\nimport PatientOrders from '../components/PatientOrders';\nimport { useSelector } from 'react-redux';\nimport PatientNotes from '../components/PatientNotes';\nimport { Accordion, AccordionDetails, AccordionSummary, Grid, IconButton, TextField } from '@material-ui/core';\nimport PatientEncountersList from './PatientEncountersList';\nimport PatientOrdersList from './PatientOrdersList';\nimport AddIcon from '@material-ui/icons/Add';\nimport ChartReviewInfo from './ChartReviewInfo'\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport Slide from '@material-ui/core/Slide';\nimport Button from '@material-ui/core/Button';\nimport { List } from '@material-ui/core';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport SelectedOrderPreviewCard from '../components/SelectedOrderPreviewCard';\nimport ExitToAppTwoToneIcon from '@material-ui/icons/ExitToAppTwoTone';\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport NewMedicationForm from './NewMedicationForm';\nimport NewMentalProblemForm from './newMentalProblemForm';\nimport NewPhysicalProblemForm from './NewPhysicalProblemForm';\nimport NewOrderForm from './NewOrderForm';\nimport PatientChartContext from './utils/PatientChartContext';\nimport encountersReducer from '../store/encounters';\nimport ChartReviewTabs from './ChartReviewTabs'\n\nconst ColorButton = withStyles((theme) => ({\n    root: {\n        color: \"white\",\n        paddingRight: \"10px\",\n        paddingLeft: \"10px\",\n        margin: \"4px\",\n        backgroundColor:\"grey\",\n        '&:hover': {\n            backgroundColor: \"#b1f3b1 !important\",\n        },\n    },\n    }))(Button);\n\nconst useStyles = makeStyles((theme) => ({\n    modal: {\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'center',\n    },\n    paper: {\n      boxShadow: theme.shadows[5],\n      padding: theme.spacing(2, 4, 3),\n    },\n    accordion : {\n        transition: \"all .1s ease-in-out\",\n        '&:hover': {\n            boxShadow:\"rgba(0, 0, 0, 0.24) 0px 3px 8px\"\n        }\n    }\n  }));\n  \n\nconst imageStyle={\n    hieght:\"32px\",\n    width:\"32px\"\n  }\n\n\nconst useStylesLoginTextField = makeStyles((theme) => ({\n    root: {\n      border: '2px solid #e2e2e1',\n      overflow: 'hidden',\n      paddingLeft: \"10px\",\n      paddingTop: \"4px\",\n      paddingBottom: \"4px\",\n      marginTop: \"14px\",\n      borderRadius: 4,\n      backgroundColor: '#fcfcfb',\n      transition: theme.transitions.create(['border-color', 'box-shadow']),\n      '&$focused': {\n        border: '2px solid rgb(94, 158, 214)',\n        backgroundColor: '#fff',\n        // boxShadow: `${fade(theme.palette.primary.main, 0.25)} 0 0 0 1px`,\n      },\n    },\n    focused: {},\n  }));\n\n  function LoginTextField(props) {\n    const classes = useStylesLoginTextField();\n    return <TextField InputProps={{ classes, disableUnderline: true }} {...props} />;\n  }\n\nconst SelectMedButton = withStyles((theme) => ({\n    root: {\n        color: \"#ed4959\",\n        paddingRight: \"10px\",\n        paddingLeft: \"10px\",\n        margin: \"4px\",\n        backgroundColor:\"white\",\n        border:\"1px solid #ed4959\",\n        '&:hover': {\n            backgroundColor: \"#ed4959 !important\",\n            color:\"white\",\n            border:\"1px solid #ed4959\",\n        },\n    },\n    }))(Button);\n\nfunction PatientMedications(props) { \n    const classes = useStyles()\n    console.log(props)\n    const provider_id = useSelector(state=>state.auth.user.id)\n    const [medications,setMedications] = useState([])\n    const themeContext = useContext(ThemeContext)\n    const [formModalOpen, setFormModalOpen] = useState(false);\n    const [modalForm, setModalForm] = useState(\"\")\n    const [dxSearchTerm,setDxSearchTerm] = useState(\"\")\n    const [dxSearchResults,setDxSearchResults]=useState([]);\n    const [dxPerformSearch,setDxPerformSearch]=useState(false)\n    const [searchingForMeds,setSearchingForMeds]=useState(false)\n    const [selectedMedicationIndex,setSelectedMedicationIndex]=useState()\n    const [displayMedicationQuestions,setDisplayMedicationQuestions] = useState(false)\n    const [newMedInstructions,setNewMedInstructions] = useState(\"\")\n\n    const handleFormModalOpen = (modalForm) => {\n        setModalForm(modalForm)\n        console.log(modalForm)\n        setFormModalOpen(true);\n    };\n  \n    const handleFormModalClose = () => {\n        setModalForm(\"\")\n        setFormModalOpen(false);\n    };\n\n\n    return (\n        <>\n                    <PatientMedicationsList patient={{...props.patient}}/>\n        </>\n    );\n}\n\nexport default PatientMedications;\n","import React, { useContext, useState } from 'react';\nimport FavoriteIcon from '@material-ui/icons/FavoriteTwoTone';\nimport FitnessCenterIcon from '@material-ui/icons/FitnessCenter';\nimport BasicPatientAttributes from './BasicPatientAttributes';\nimport PatientPhoneNumbers from './PatientPhoneNumbers';\nimport PatientAddressInfo from './PatientAddressInfo';\nimport PatientMedications from './PatientMedications';\nimport ThemeContext from './utils/ThemeContext';\nimport PatientProblems from './PatientMentalProblems';\nimport PatientMentalProblemList from './PatientMentalProblemList';\nimport NativeSelect from '@material-ui/core/NativeSelect';\nimport InputBase from '@material-ui/core/InputBase';\nimport FormControl from '@material-ui/core/FormControl';\nimport Modal from '@material-ui/core/Modal';\nimport Backdrop from '@material-ui/core/Backdrop';\nimport PatientPhysicalProblemList from './PatientPhysicalProblemList';\nimport PatientMedicationsList from './PatientMedicationsList';\nimport PatientEncounters from '../components/PatientEncounters';\nimport PatientOrders from '../components/PatientOrders';\nimport { useSelector } from 'react-redux';\nimport PatientNotes from '../components/PatientNotes';\nimport { Accordion, AccordionDetails, AccordionSummary, Grid, IconButton } from '@material-ui/core';\nimport PatientEncountersList from './PatientEncountersList';\nimport PatientOrdersList from './PatientOrdersList';\nimport AddIcon from '@material-ui/icons/Add';\nimport ChartReviewInfo from './ChartReviewInfo'\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport Slide from '@material-ui/core/Slide';\nimport Button from '@material-ui/core/Button';\nimport { List } from '@material-ui/core';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport SelectedOrderPreviewCard from '../components/SelectedOrderPreviewCard';\nimport ExitToAppTwoToneIcon from '@material-ui/icons/ExitToAppTwoTone';\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport NewMedicationForm from './NewMedicationForm';\nimport NewMentalProblemForm from './newMentalProblemForm';\nimport NewPhysicalProblemForm from './NewPhysicalProblemForm';\nimport NewOrderForm from './NewOrderForm';\nimport PatientChartContext from './utils/PatientChartContext';\nimport encountersReducer from '../store/encounters';\nimport ChartReviewTabs from './ChartReviewTabs'\n\nconst ColorButton = withStyles((theme) => ({\n    root: {\n        color: \"white\",\n        paddingRight: \"10px\",\n        paddingLeft: \"10px\",\n        margin: \"4px\",\n        backgroundColor:\"grey\",\n        '&:hover': {\n            backgroundColor: \"#b1f3b1 !important\",\n        },\n    },\n    }))(Button);\n\nconst useStyles = makeStyles((theme) => ({\n    modal: {\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'center',\n    },\n    paper: {\n      boxShadow: theme.shadows[5],\n      padding: theme.spacing(2, 4, 3),\n    },\n    accordion : {\n        transition: \"all .1s ease-in-out\",\n        '&:hover': {\n            boxShadow:\"rgba(0, 0, 0, 0.24) 0px 3px 8px\"\n        }\n    }\n  }));\n  \n\nconst imageStyle={\n    hieght:\"32px\",\n    width:\"32px\"\n  }\n\n\nconst defaultProps = {\n    className: \"layout\",\n    rowHeight: 30,\n    onLayoutChange: function() {},\n    cols: { lg: 3, md: 2, sm: 2, xs: 1, xxs: 1 },\n  };\n\nconst metricTextStyle ={\n    marginLeft:\"6px\"\n}\nfunction ChartReview(props) {\n    const classes = useStyles()\n    const themeContext = useContext(ThemeContext)\n\n    const [formModalOpen, setFormModalOpen] = useState(false);\n    const [modalForm, setModalForm] = useState(\"\")\n    const [medsExpanded,setMedsExpanded] = useState(true)\n    const [physicalProblemsExpanded,setPhysicalProblemsExpanded] = useState(true)\n    const [mentalProblemsExpanded,setMentalProblemsExpanded] = useState(true)\n    const [ordersExpanded,setOrdersExpanded] = useState(true)\n    const [encountersExpanded,setEncountersExpanded] = useState(true)\n\n    \n\n    const handleFormModalOpen = (modalForm) => {\n        setModalForm(modalForm)\n        setFormModalOpen(true);\n    };\n  \n    const handleFormModalClose = () => {\n        setModalForm(\"\")\n        setFormModalOpen(false);\n    };\n\n    const updateMentalProblems = () => {\n        setMentalProblemsExpanded(!mentalProblemsExpanded)\n    }\n\n    return (\n        <>\n            <PatientChartContext.Provider value={{handleFormModalOpen,handleFormModalClose,setModalForm,setFormModalOpen}}>\n                <ChartReviewTabs />\n                            {/* <div style={{display:\"flex\",marginBottom:\"8px\",flexDirection:\"column\",borderRadius:\"9px\",backgroundColor:themeContext.themes === \"dark\" ? \"#444444\" : \"white\", width:\"25%\",marginLeft:\"2px\",marginRight:\"2px\"}}>\n                            <Accordion expanded={medsExpanded} className={classes.accordion} style={{margin:\"0px\",backgroundColor:\"rgb(156, 203, 87)\",\n                            color: themeContext.themes === \"light\" ? \"white\" : \"white\",borderRadius:\"25px\",border:\"2px solid #9ccb57\",overflow:\"hidden\"}}>\n                            <AccordionSummary\n                                expandIcon={<ExpandMoreIcon \n                                    onClick={(e)=>{setMedsExpanded(!medsExpanded)}} \n                                    style={{color: \"white\"}}/>}\n                                aria-label=\"Expand\"\n                                aria-controls=\"additional-actions1-content\"\n                                id=\"additional-actions1-header\"\n                                style={{justifyContent:\"space-between\", height:\"30px\"}}\n                            >\n                                <div style={{display:\"flex\",flexDirection:\"row\", alignContent:\"center\",width:\"100%\",alignItems:\"center\",justifyContent:\"space-between\"}}>\n                            <div style={{display:\"flex\",flexDirection:\"row\", alignContent:\"center\",alignItems:\"center\"}}>\n                            <img style={{height:\"47px\",width:\"47px\", marginLeft:\"5px\"}} src=\"https://saga-health.s3-us-west-1.amazonaws.com/91-919780_stimulant-drugs-clipart-png-download.png\"></img>\n                            <div style={{color: themeContext.themes === \"dark\" ? \"white\" : \"white\", width:\"100%\", padding:\"4px\", fontSize:\"16px\"}}> Medications</div>\n                            </div>\n                            <div style={{display:\"flex\",flexDirection:\"row\", alignContent:\"center\",alignItems:\"center\"}}>\n                                <IconButton onClick={(e)=>handleFormModalOpen(e,\"NewMedicationForm\")}  style={{height:\"47px\",width:\"47px\", marginRight:\"4px\",outline:\"none\"}}>\n                                    <AddIcon style={{height:\"24px\",width:\"24px\",color:\"white\"}}></AddIcon>\n                                </IconButton>\n                            </div>\n                            </div>\n                            </AccordionSummary>\n                            <AccordionDetails style={{maxHeight:\"80vh\",overflow:\"scroll\"}}>\n                                <PatientMedicationsList patient={props.patient}/>\n                            </AccordionDetails>\n                            </Accordion>\n                            </div>\n\n                            <div style={{display:\"flex\",marginBottom:\"8px\",flexDirection:\"column\",borderRadius:\"9px\",backgroundColor:themeContext.themes === \"dark\" ? \"#444444\" : \"white\", width:\"25%\",marginLeft:\"2px\",marginRight:\"2px\"}}>\n                            <Accordion expanded={physicalProblemsExpanded}\n                            style={{width:\"100%\",margin:\"0px\",backgroundColor: \"#ed6969\"\n                            ,color: themeContext.themes === \"light\" ? \"white\" : \"white\",borderRadius:\"25px\",border:\"2px solid #ed6969\",overflow:\"hidden\"}}>\n                            <AccordionSummary\n                                expandIcon={<ExpandMoreIcon \n                                    onClick={(e)=>{setPhysicalProblemsExpanded(!physicalProblemsExpanded)}} \n                                    style={{color: \"white\"}}/>}\n                                aria-label=\"Expand\"\n                                aria-controls=\"additional-actions1-content\"\n                                id=\"additional-actions1-header\"\n                                style={{justifyContent:\"space-between\", height:\"30px\"}}\n                            >\n                                <div style={{display:\"flex\",flexDirection:\"row\", alignContent:\"center\",width:\"100%\",alignItems:\"center\",justifyContent:\"space-between\"}}>\n                            <div style={{display:\"flex\",flexDirection:\"row\", alignContent:\"center\",alignItems:\"center\"}}>\n                            <img style={{height:\"47px\",width:\"47px\", marginLeft:\"5px\"}} src=\"https://saga-health.s3-us-west-1.amazonaws.com/256x256.png\"></img>\n                            <div style={{color: themeContext.themes === \"dark\" ? \"white\" : \"white\", width:\"100%\", padding:\"4px\", fontSize:\"16px\"}}> Physical Health History</div>\n                            </div>\n                            <div style={{display:\"flex\",flexDirection:\"row\", alignContent:\"center\",alignItems:\"center\"}}>\n                                <IconButton onClick={(e)=>handleFormModalOpen(e,\"NewPhysicalProblemForm\")} style={{height:\"47px\",width:\"47px\", marginRight:\"4px\",outline:\"none\"}}>\n                                    <AddIcon style={{height:\"24px\",width:\"24px\",color:\"white\"}}></AddIcon>\n                                </IconButton>\n                            </div>\n                            </div>\n                            </AccordionSummary>\n                            <AccordionDetails style={{maxHeight:\"35vh\",overflow:\"scroll\"}}>\n                                <PatientPhysicalProblemList patient={props.patient}/>\n                            </AccordionDetails>\n                            </Accordion>\n                            </div>\n\n                            <div style={{display:\"flex\",marginBottom:\"8px\",flexDirection:\"column\",borderRadius:\"9px\",backgroundColor:themeContext.themes === \"dark\" ? \"#444444\" : \"white\", width:\"25%\",marginLeft:\"2px\",marginRight:\"2px\"}}>\n                            <Accordion expanded={mentalProblemsExpanded}\n                            style={{width:\"100%\",margin:\"0px\",backgroundColor: \"cornflowerblue\"\n                            ,color: themeContext.themes === \"light\" ? \"white\" : \"white\",borderRadius:\"25px\",border:\"2px solid cornflowerblue\",overflow:\"hidden\"}}>\n                            <AccordionSummary\n                                expandIcon={<ExpandMoreIcon \n                                    onClick={updateMentalProblems} \n                                    style={{color: \"white\"}}/>}\n                                aria-label=\"Expand\"\n                                aria-controls=\"additional-actions1-content\"\n                                id=\"additional-actions1-header\"\n                                style={{justifyContent:\"space-between\", height:\"30px\"}}\n                            >\n                                <div style={{display:\"flex\",flexDirection:\"row\", alignContent:\"center\",width:\"100%\",alignItems:\"center\",width:\"100%\",justifyContent:\"space-between\"}}>\n                                    <div style={{display:\"flex\",flexDirection:\"row\", alignContent:\"center\",alignItems:\"center\"}}>\n                                        <img style={{height:\"47px\",width:\"47px\", marginLeft:\"5px\"}} src=\"https://saga-health.s3-us-west-1.amazonaws.com/icons8-brain-100+(6).png\"></img>\n                                    <div style={{color: themeContext.themes === \"dark\" ? \"white\" : \"white\", width:\"100%\", padding:\"4px\", fontSize:\"16px\"}}> Mental Health History</div>\n                                </div>\n                                <div style={{display:\"flex\",flexDirection:\"row\", alignContent:\"center\",alignItems:\"center\"}}>\n                                    <IconButton onClick={(e)=>handleFormModalOpen(e,\"NewMentalProblemForm\")} style={{height:\"47px\",width:\"47px\", marginRight:\"4px\",outline:\"none\"}}>\n                                    <AddIcon style={{height:\"24px\",width:\"24px\",color:\"white\"}}></AddIcon>\n                                </IconButton>\n                                </div>\n                            </div>\n                            </AccordionSummary>\n                            <AccordionDetails style={{maxHeight:\"35vh\",overflow:\"scroll\"}}>\n                                <PatientMentalProblemList patient={props.patient}/>\n                            </AccordionDetails>\n                            </Accordion>\n                            </div>\n\n                        <div style={{display:\"flex\",marginBottom:\"8px\",flexDirection:\"column\",borderRadius:\"9px\",backgroundColor:themeContext.themes === \"dark\" ? \"#444444\" : \"white\", width:\"25%\",marginLeft:\"2px\",marginRight:\"2px\"}}>\n                            <Accordion expanded={ordersExpanded}\n                            style={{width:\"100%\",margin:\"0px\",backgroundColor: \"#a998f4\"\n                            ,color: themeContext.themes === \"light\" ? \"white\" : \"white\",borderRadius:\"25px\",border:\"2px solid #a998f4\",overflow:\"hidden\"}}>\n                            <AccordionSummary\n                                expandIcon={<ExpandMoreIcon \n                                    onClick={(e)=>setOrdersExpanded(!ordersExpanded)} \n                                    style={{color: \"white\"}}/>}\n                                aria-label=\"Expand\"\n                                aria-controls=\"additional-actions1-content\"\n                                id=\"additional-actions1-header\"\n                                style={{justifyContent:\"space-between\", height:\"30px\"}}\n                            >\n                                <div style={{display:\"flex\",flexDirection:\"row\", alignContent:\"center\",width:\"100%\",alignItems:\"center\",justifyContent:\"space-between\"}}>\n                            <div style={{display:\"flex\",flexDirection:\"row\", alignContent:\"center\",alignItems:\"center\"}}>\n                            <img style={{height:\"47px\",width:\"47px\", marginLeft:\"5px\"}} src=\"https://saga-health.s3-us-west-1.amazonaws.com/paper-rocket-flat.svg\"></img>\n                            <div style={{color: themeContext.themes === \"dark\" ? \"white\" : \"white\", width:\"100%\", padding:\"4px\", fontSize:\"16px\"}}> Orders</div>\n                            </div>\n                            <div style={{display:\"flex\",flexDirection:\"row\", alignContent:\"center\",alignItems:\"center\"}}>\n                                <IconButton onClick={(e)=>handleFormModalOpen(e,\"NewOrderForm\")} style={{height:\"47px\",width:\"47px\", marginRight:\"4px\",outline:\"none\"}}>\n                                    <AddIcon style={{height:\"24px\",width:\"24px\",color:\"white\"}}></AddIcon>\n                                </IconButton>\n                            </div>\n                            </div>\n                            </AccordionSummary>\n                            <AccordionDetails style={{maxHeight:\"80vh\",overflow:\"scroll\"}}>\n                                <PatientOrdersList patient={props.patient}/>\n                            </AccordionDetails>\n                            </Accordion>\n                            </div>\n\n                            <div style={{display:\"flex\",flexDirection:\"column\",borderRadius:\"9px\",backgroundColor:themeContext.themes === \"dark\" ? \"#444444\" : \"white\", width:\"25%\",marginLeft:\"2px\",marginRight:\"2px\"}}>\n                            <Accordion expanded={encountersExpanded}\n                            style={{width:\"100%\",margin:\"0px\",backgroundColor: \"#f9dc5f\"\n                            ,color: themeContext.themes === \"light\" ? \"white\" : \"white\",borderRadius:\"25px\",border:\"2px solid #f9dc5f\",overflow:\"hidden\"}}>\n                            <AccordionSummary\n                                expandIcon={<ExpandMoreIcon \n                                    style={{color: \"white\"}}/>}\n                                aria-label=\"Expand\"\n                                aria-controls=\"additional-actions1-content\"\n                                id=\"additional-actions1-header\"\n                                style={{justifyContent:\"space-between\", height:\"30px\"}}\n                            >\n                                <div style={{display:\"flex\",flexDirection:\"row\", alignContent:\"center\",width:\"100%\",alignItems:\"center\"}}>\n                                    <img style={{height:\"47px\",width:\"47px\", marginLeft:\"5px\"}} src=\"https://saga-health.s3-us-west-1.amazonaws.com/icons8-calendar-100.png\"></img>\n                                    <div style={{color: themeContext.themes === \"dark\" ? \"white\" : \"white\", width:\"100%\", padding:\"4px\", fontSize:\"16px\"}}> Encounters</div>\n                                </div>\n                            </AccordionSummary>\n                            <AccordionDetails style={{maxHeight:\"80vh\",overflow:\"scroll\"}}>\n                                <PatientEncountersList patient={props.patient}/>\n                            </AccordionDetails>\n                            </Accordion>\n                <div> */}\n    <div>\n      <Modal\n        aria-labelledby=\"transition-modal-title\"\n        aria-describedby=\"transition-modal-description\"\n        className={classes.modal}\n        open={formModalOpen}\n        onClose={handleFormModalClose}\n        closeAfterTransition\n        // BackdropComponent={Backdrop}\n        // BackdropProps={{\n        //   timeout: 200\n        // }}\n      >\n        <Slide direction=\"up\" in={formModalOpen}>\n          <div className={classes.paper} style={{overflow:\"hidden\",display:\"flex\",outline:\"none\",backgroundColor: themeContext.themes === \"dark\" ? \"#444444\" : \"white\",color: themeContext.themes === \"dark\" ? \"white\" : \"#444444\",padding:\"0\",overflow:\"hidden\"}}>\n        {/* <InputLabel htmlFor=\"demo-customized-select-native\">Department</InputLabel> */}\n        {/* <NativeSelect\n          id=\"demo-customized-select-native\"\n          onChange={handleChange}\n          input={<BootstrapInput style={{color:themeContext.themes === \"dark\" ? \"white\" : \"black\", backgroundColor:themeContext.themes === \"dark\" ? \"#444444\" : \"white\"}}/>}\n        > \n        <option aria-label=\"None\" value=\"\" />\n        {\n          departments.map((dept,index)=>{\n            return <option value={index}>{dept.name}</option>\n          })\n        }\n          </NativeSelect> */}\n          {modalForm === \"NewMedicationForm\" ? <NewMedicationForm patient={props.patient}></NewMedicationForm> : <></> }\n          {modalForm === \"NewOrderForm\" ? <NewOrderForm patient={props.patient}></NewOrderForm> : <></> }\n          {modalForm === \"NewMentalProblemForm\" ? <NewMentalProblemForm patient={props.patient}></NewMentalProblemForm> : <></> }\n          {modalForm === \"NewPhysicalProblemForm\" ? <NewPhysicalProblemForm patient={props.patient}></NewPhysicalProblemForm> : <></> }\n          </div>\n        </Slide>\n      </Modal>\n    </div>\n            </PatientChartContext.Provider>\n        </>\n    );\n}\nexport default ChartReview;","import React, { useContext,useState, useEffect } from 'react';\nimport {openPatientChart} from '../store/activities'\nimport { useDispatch, useSelector } from 'react-redux';\nimport HomeContext from './utils/HomeContext';\nimport ExitToAppTwoToneIcon from '@material-ui/icons/ExitToAppTwoTone';\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Divider from '@material-ui/core/Divider';\nimport { Grid, Container, Card, InputBase, TextField } from '@material-ui/core';\nimport ThemeContext from './utils/ThemeContext';\nimport FindInPageTwoToneIcon from '@material-ui/icons/FindInPageTwoTone';\nimport AddIcon from '@material-ui/icons/AddCircleTwoTone';\nimport IconButton from '@material-ui/core/IconButton';\nimport {createProblem} from '../store/current_patient'\nimport PatientMedicationsList from './PatientMedicationsList';\nimport PatientPhysicalProblemList from './PatientPhysicalProblemList';\n\n\nconst useStylesLoginTextField = makeStyles((theme) => ({\n    root: {\n      border: '2px solid #e2e2e1',\n      overflow: 'hidden',\n      paddingLeft: \"10px\",\n      paddingTop: \"4px\",\n      paddingBottom: \"4px\",\n      marginTop: \"14px\",\n      borderRadius: 4,\n      backgroundColor: '#fcfcfb',\n      transition: theme.transitions.create(['border-color', 'box-shadow']),\n      '&$focused': {\n        border: '2px solid rgb(94, 158, 214)',\n        backgroundColor: '#fff',\n        // boxShadow: `${fade(theme.palette.primary.main, 0.25)} 0 0 0 1px`,\n      },\n    },\n    focused: {},\n  }));\n\n  function LoginTextField(props) {\n    const classes = useStylesLoginTextField();\n    return <TextField InputProps={{ classes, disableUnderline: true }} {...props} />;\n  }\n\nconst ColorButton = withStyles((theme) => ({\n    root: {\n        paddingRight: \"10px\",\n        paddingLeft: \"10px\",\n        margin: \"4px\",\n        background:\"transparent\",\n        border:\"1px solid #ed4959\",\n        '&:hover': {\n            backgroundColor: \"#ed4959 !important\",\n            color:\"white\",\n            border:\"1px solid #ed4959\",\n        },\n    },\n    }))(Button);\n\nconst SelectMedButton = withStyles((theme) => ({\n    root: {\n        color: \"#ed4959\",\n        paddingRight: \"10px\",\n        paddingLeft: \"10px\",\n        margin: \"4px\",\n        backgroundColor:\"transparent\",\n        border:\"1px solid #ed4959\",\n        '&:hover': {\n            backgroundColor: \"#ed4959 !important\",\n            color:\"white\",\n            border:\"1px solid #ed4959\",\n        },\n    },\n    }))(Button);\n\nfunction PatientPhysicalProblems(props) { \n    console.log(props)\n    const context = useContext(HomeContext)\n    const dispatch = useDispatch()\n    const provider_id = useSelector(state=>state.auth.user.id)\n    const [medications,setMedications] = useState([])\n    const themeContext = useContext(ThemeContext)\n    const [problemSearchTerm,setProblemSearchTerm] = useState(\"\")\n    const [problemSearchResults,setProblemSearchResults]=useState([]);\n    const [problemPerformSearch,setProblemPerformSearch]=useState(false)\n    const [searchingForProblems,setSearchingForProblems]=useState(false)\n    const [selectedProblemIndex,setSelectedProblemIndex]=useState()\n    const [displayProblemQuestions,setDisplayProblemQuestions] = useState(false)\n    const [newProblemInstructions,setNewProblemInstructions] = useState(\"\")\n\n    const addProblem = (problemName) => {\n        dispatch(createProblem({problemName,patient:props.patient.id,provider_id,type:\"physical\"}))\n    }\n\n    useEffect(()=>{\n        const searchProblems= async (searchTerm) => {\n            // const response = await fetch(`/api/umls/search-cui/`)\n            const response = await fetch(`/api/umls/search-term/non-mental-problems/${searchTerm}`)\n            const data = await response.json()\n            console.log(data)\n            setSearchingForProblems(false)\n            setProblemSearchResults(data.results)\n            return;\n        }\n        if (problemSearchTerm.length > 0) {\n            searchProblems(problemSearchTerm)\n        }\n    },[problemPerformSearch])\n\n\n    return (\n        <>\n                <div style={{display:\"flex\",flexDirection:\"column\",borderRadius:\"9px\",boxShadow: \"rgba(0, 0, 0, 0.09) 0px 1px 2px 0px\", width:\"fit-content\",marginLeft:\"9px\",marginRight:\"9px\",backgroundColor:themeContext.themes === \"dark\" ? \"#999999\" : \"white\"}}>\n                    <div style={{color:\"white\", marginTop:\"10px\",marginBottom:\"6px\", width:\"100%\", padding:\"4px\", fontSize:\"16px\", backgroundImage: \"linear-gradient(-225deg, #AC32E4 0%, #7918F2 48%, #4801FF 100%)\"}}>Physical Health Issues</div>\n                    <PatientPhysicalProblemList patient={{...props.patient}}/>\n                    <div style={{display:\"flex\",flexDirection:\"column\",padding:\"4px\",backgroundColor:themeContext.themes === \"dark\" ? \"#999999\" : \"white\",transition:\"all .4s ease-in-out\",transitionProperty:\"width\"}}>\n                    <div style={{display:\"flex\",flexDirection:\"column\"}}>\n                    <LoginTextField placeholder=\"add a health issue\" value={problemSearchTerm} onChange={(e)=>setProblemSearchTerm(e.target.value)}></LoginTextField>\n                    <ColorButton style={{color:themeContext.themes === \"dark\" ? \"white\" : \"#ed4959\"}} onClick={()=>{\n                        setDisplayProblemQuestions(false)\n                        setProblemSearchResults([])\n                        setSearchingForProblems(true)\n                        setProblemPerformSearch(!problemPerformSearch)\n                        }}\n                        ><FindInPageTwoToneIcon style={{marginRight:\"4px\"}}/>search</ColorButton>\n                    </div>\n                        <div style={{display:\"flex\",flexDirection:\"column\",maxHeight:\"200px\",overflow:\"scroll\",marginLeft:\"10px\"}}>\n                        {searchingForProblems ? <img src=\"https://saga-health.s3-us-west-1.amazonaws.com/ezgif.com-gif-maker.gif\" style={{height:\"140px\",marginLeft:\"10px\"}}></img> : <></>}\n                        {displayProblemQuestions ? \n                        <div style={{display:\"flex\",flexDirection:\"column\",backgroundColor:themeContext.themes === \"dark\" ? \"#999999\" : \"white\",color:themeContext.themes === \"dark\" ? \"antiquewhite\" : \"grey\",marginLeft:\"10px\", borderRadius:\"4px\",padding:\"10px\"}}>\n                            <div style={{display:\"flex\",flexDirection:\"row\",justifyContent:\"space-between\"}}>\n                            <div style={{fontSize:\"20px\"}}>{problemSearchResults[selectedProblemIndex]}</div>\n                            <Button size=\"small\" onClick={()=>setDisplayProblemQuestions(false)}>\n                                back\n                            </Button>\n                            </div>\n                            <form>\n                                <div style={{display:\"flex\",flexDirection:\"column\", justifyContent:\"center\"}}>\n                                    <p>Insructions:</p>\n                                    {/* <input value={newMedInstructions} onChange={(e)=>setNewMedInstructions(e.target.value)}></input> */}\n                                </div>\n                                <IconButton size=\"large\">\n                                    <AddIcon style={{color:\"lightgreen\"}} onClick={()=>{\n                                        setProblemSearchResults([])\n                                        setProblemSearchTerm(\"\")\n                                        setNewProblemInstructions(\"\")\n                                        setDisplayProblemQuestions(false)\n                                        addProblem(problemSearchResults[selectedProblemIndex],newProblemInstructions)}}/>\n                                </IconButton>\n                            </form>\n                        </div>\n                        : problemSearchResults.map((problem,index)=>{\n                        return(\n                            <div onClick={()=>setSelectedProblemIndex(index)} \n                            style={{transition:\"all .4s ease-in-out\",transitionProperty:\"width\",display:\"flex\",\n                            flexDirection:\"row\", alignItems:\"center\",cursor:\"pointer\",color:themeContext.themes === \"dark\" ? \"white\" : \"black\",\n                            marginTop:\"3px\",padding:\"4px\",borderRadius:\"3px\",\n                            background:themeContext.themes === \"dark\" ? index === selectedProblemIndex ? \"#999999\" : \"#343434\" : index === selectedProblemIndex ? \"aliceblue\" : \"ivory\"}}>\n                                <IconButton size=\"small\" onClick={(e)=>setDisplayProblemQuestions(true)}>\n                                <AddIcon style={{color:themeContext.themes === \"dark\" ? \"goldenrod\" : \"goldenrod\", borderRadius:\"3px\",margin:\"2px\",padding:\"2px\",cursor:\"pointer\"}}/>\n                                </IconButton>\n                                {problem}\n                            </div>\n                        )\n                        })}\n                        </div>\n                    </div>\n                </div>\n        </>\n    );\n}\n\nexport default PatientPhysicalProblems;\n","import React, { useContext } from 'react';\nimport PatientMentalProblems from './PatientMentalProblems'\nimport PatientPhysicalProblems from './PatientPhysicalProblems'\nimport ThemeContext from './utils/ThemeContext';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport Paper from '@material-ui/core/Paper';\nimport Divider from '@material-ui/core/Divider';\nimport Grid from '@material-ui/core/Grid';\n\nconst useStyles = makeStyles((theme) => ({\n  container: {\n    display: 'grid',\n    gridTemplateColumns: 'repeat(12, 1fr)',\n    gridGap: theme.spacing(1),\n  },\n  paper: {\n    padding: theme.spacing(1),\n    textAlign: 'center',\n    color: theme.palette.text.secondary,\n    whiteSpace: 'nowrap',\n    marginBottom: theme.spacing(1),\n  },\n  divider: {\n    margin: theme.spacing(2, 0),\n  },\n}));\n\nfunction AllProblems(props) {\n    const classes = useStyles();\n    const themeContext = useContext(ThemeContext)\n    return (\n        <>\n            <Grid container spacing={1} style={{backgroundColor: themeContext.themes === \"dark\" ? \"#343434\" : \"white\"}}>\n                <Grid item xs={12} sm={4}>\n                    <PatientMentalProblems patient={props.patient}/>\n                </Grid>\n                <Grid item xs={12} sm={4}>\n                    <PatientPhysicalProblems patient={props.patient}/>\n                </Grid>\n            </Grid>\n        </>\n    );\n}\nexport default AllProblems;","import React, { useContext } from 'react';\nimport {openPatientChart} from '../store/activities'\nimport { useDispatch, useSelector } from 'react-redux';\nimport HomeContext from './utils/HomeContext';\nimport FavoriteIcon from '@material-ui/icons/FavoriteTwoTone';\nimport FitnessCenterIcon from '@material-ui/icons/FitnessCenter';\nimport PatientPhoneNumbers from './PatientPhoneNumbers';\nimport PatientAddressInfo from './PatientAddressInfo';\nimport ThemeContext from './utils/ThemeContext';\n\n\nconst imageStyle={\n    hieght:\"34px\",\n    width:\"34px\"\n  }\n\nconst tabStyle = {\n'&:hover': {\n  background:\"grey\"\n}\n\n}\n\nconst metricContainerStyle={\ndisplay:\"flex\",\nflexDirection:\"row\",\nfontSize:\"18px\",\nborderRadius:\"9px\",\nmargin:\"4px\",\ncursor:\"pointer\",\nfontWeight:\"strong\",\npadding:\"4px\",\nalignItems:\"center\",\n'&:hover': {\n    boxShadow: \"rgba(60, 64, 67, 0.3) 0px 1px 2px 0px, rgba(60, 64, 67, 0.15) 0px 1px 3px 1px\"\n}\n}\n\nconst metricTextStyle ={\nmarginLeft:\"6px\"\n}\n\nfunction ChartReviewBasicAttributes(props) { \n    const context = useContext(HomeContext)\n    const dispatch = useDispatch()\n    const themeContext = useContext(ThemeContext)\n    const openTabs = useSelector(state=>state.activities.open_tabs)\n\n    const openChart=(id)=>{\n        if (!openTabs.some(activity=>activity.name === `${props.patient.lastName}, ${props.patient.firstName}`)) dispatch(openPatientChart(id))\n        context.setSelectedTab(`${props.patient.lastName}, ${props.patient.firstName}`,props.patient)\n    }\n\n    return (\n        <>\n            <div style={{display:\"flex\",flexDirection:\"column\",borderRadius:\"7px\",backgroundColor:themeContext.themes === \"dark\" ? \"#444444\" : \"white\",marginLeft:\"10px\", marginRight:\"5px\",\n            // boxShadow: \"rgba(0, 0, 0, 0.12) 0px 1px 3px, rgba(0, 0, 0, 0.24) 0px 1px 2px\",\n            }}>\n            <div style={{display:\"flex\",flexDirection:\"column\",alignItems:\"center\"}}>\n                <div style={{display:\"flex\",flexDirection:\"column\"}}>\n                    {/* <div style={{display:\"flex\",flexDirection:\"row\",alignItems:\"center\"}} >\n                        <div style={{...metricContainerStyle,color:themeContext.themes === \"dark\" ? \"white\" : \"grey\",backgroundColor:themeContext.themes === \"dark\" ? \"#444444\" : \"white\"}}>\n                            {props.patient.sex === \"female\" ? \n                                <img style={{height:\"29px\"}} src=\"https://saga-health.s3-us-west-1.amazonaws.com/female-removebg-preview.png\"></img>\n                                :\n                                <img style={{...imageStyle}} src=\"https://saga-health.s3-us-west-1.amazonaws.com/_Pngtree_vector_male_sign_icon_4184181-removebg-preview.png\"></img>}\n                        </div>\n                        <div style={{borderRadius:\"9px\",display:\"flex\",color: themeContext.themes === \"dark\" ? \"white\" : \"grey\",fontSize:\"20px\",zIndex:\"3\",padding:\"9px\",boxShadow: \"rgba(0, 0, 0, 0.09) 0px 1px 2px 0px\"}}>[ she / her ]</div>\n                        <div style={{...metricContainerStyle,marginTop:\"4px\",color:themeContext.themes === \"dark\" ? \"white\" : \"grey\",backgroundColor:themeContext.themes === \"dark\" ? \"#444444\" : \"white\"}}>\n                            {props.patient.smoker ? \n                                <img style={{...imageStyle}} src=\"https://saga-health.s3-us-west-1.amazonaws.com/images-removebg-preview.png\"></img>\n                                :\n                                <img style={{ width: \"50px\", height: \"35px\"}}  src=\"https://saga-health.s3-us-west-1.amazonaws.com/no-smoking-smoke-cigarette-forbidden-habit-cigar-tobacco-nicotine-prohibition-toxic-unhealthy_1--removebg-preview.png\"></img>\n                            }\n                        </div>\n                    </div> */}\n                </div>\n                <div style={{display:\"flex\",flexDirection:\"row\"}}>\n                    <div style={{...metricContainerStyle,color:themeContext.themes === \"dark\" ? \"white\" : \"grey\",backgroundColor:themeContext.themes === \"dark\" ? \"#444444\" : \"white\"}}>\n                        {/* <img style={{...imageStyle}} src=\"https://saga-health.s3-us-west-1.amazonaws.com/heart-removebg-preview.png\"></img> */}\n                        {/* <img style={{...imageStyle}} src=\"https://saga-health.s3-us-west-1.amazonaws.com/heart-compact-flat.svg\"></img> */}\n                        <div>Heart Rate:</div>\n                        <span style={{...metricTextStyle}}>{props.patient.beats_per_minute}<span style={{fontSize:\"18px\", color:\"lightgrey\"}}> bpm</span></span>\n                    </div>\n                    <div style={{...metricContainerStyle,color:themeContext.themes === \"dark\" ? \"white\" : \"grey\",backgroundColor:themeContext.themes === \"dark\" ? \"#444444\" : \"white\"}}>\n                        {/* <img style={{...imageStyle}} src=\"https://saga-health.s3-us-west-1.amazonaws.com/113553339-weights-concept-vector-linear-icon-isolated-on-transparent-background-weights-concept-transparency-c-removebg-preview.png\"></img> */}\n                        {/* <img style={{...imageStyle}} src=\"https://saga-health.s3-us-west-1.amazonaws.com/icons8-barbell-100.png\"></img> */}\n                        <div>Weight:</div>\n                        <span style={{...metricTextStyle}}>{props.patient.weight}<span style={{fontSize:\"18px\", color:\"lightgrey\"}}>kgs</span></span>\n                    </div>\n                    <div style={{...metricContainerStyle,color:themeContext.themes === \"dark\" ? \"white\" : \"grey\",backgroundColor:themeContext.themes === \"dark\" ? \"#444444\" : \"white\"}}>\n                        {/* <img style={{...imageStyle}} src=\"https://saga-health.s3-us-west-1.amazonaws.com/icons8-compare-heights-100+(1).png\"></img> */}\n                        <div>Height:</div>\n                        <span style={{...metricTextStyle}}>{props.patient.height}</span>\n                    </div>\n                    <div style={{...metricContainerStyle,color:themeContext.themes === \"dark\" ? \"white\" : \"grey\",backgroundColor:themeContext.themes === \"dark\" ? \"#444444\" : \"white\"}}>\n                        {/* <img style={{...imageStyle}} src=\"https://saga-health.s3-us-west-1.amazonaws.com/icons8-bmi-100+(1).png\"></img> */}\n                        <div>BMI:</div>\n                        <span style={{...metricTextStyle}}>{props.patient.bmi}</span>\n                    </div>\n                </div>\n                {/* <div style={{display:\"flex\",flexDirection:\"column\",alignItems:\"center\",justifyContent:\"center\"}}>\n                    <PatientPhoneNumbers patient={props.patient}/>\n                    <PatientAddressInfo patient={props.patient}/>\n                </div> */}\n                </div>\n            </div>\n        </>\n    );\n}\n\nexport default ChartReviewBasicAttributes;","import React, { useState, useEffect, useRef, useLayoutEffect, useContext } from 'react';\nimport {withStyles,makeStyles} from '@material-ui/core/styles';\nimport Drawer from '@material-ui/core/Drawer';\nimport AppBar from '@material-ui/core/AppBar';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport List from '@material-ui/core/List';\nimport Typography from '@material-ui/core/Typography';\nimport Divider from '@material-ui/core/Divider';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport InboxIcon from '@material-ui/icons/MoveToInbox';\nimport MailIcon from '@material-ui/icons/Mail';\nimport TextField from '@material-ui/core/TextField';\nimport BorderColorTwoToneIcon from '@material-ui/icons/BorderColorTwoTone';\nimport EventNoteTwoToneIcon from '@material-ui/icons/EventNoteTwoTone';\nimport NoteAddTwoToneIcon from '@material-ui/icons/NoteAddTwoTone';\nimport TableChartIcon from '@material-ui/icons/TableChart';\nimport { useScrollPosition } from '../components/utils/useScrollPosition'\nimport HomeContext from '../components/utils/HomeContext'\nimport '../styles/PatientChart.css'\nimport ChartReview from '../components/ChartReview';\nimport FavoriteIcon from '@material-ui/icons/FavoriteTwoTone';\nimport FitnessCenterIcon from '@material-ui/icons/FitnessCenter';\nimport { CircularProgress, Fade, Slide } from '@material-ui/core';\nimport PatientEncounters from '../components/PatientEncounters';\nimport PatientOrders from '../components/PatientOrders';\nimport { useSelector } from 'react-redux';\nimport PatientNotes from '../components/PatientNotes';\nimport ThemeContext from '../components/utils/ThemeContext';\nimport PatientProblems from '../components/PatientMentalProblems';\nimport PatientMedications from '../components/PatientMedications';\nimport BasicPatientAttributes from '../components/BasicPatientAttributes';\nimport AllProblems from '../components/PatientAllProblems';\nimport ChartReviewBasicAttributes from '../components/ChartReviewBasicAttributes';\nimport PatientPhoneNumbers from '../components/PatientPhoneNumbers';\nimport HomeIcon from '@material-ui/icons/Home';\nimport PatientAddressInfo from '../components/PatientAddressInfo';\nimport '../styles/PatientChartRibbon.css'\nimport ChartReviewTabs from '../components/ChartReviewTabs';\n\nconst isBrowser = typeof window !== `undefined`\n\nconst useStylesLoginTextField = makeStyles((theme) => ({\n    root: {\n      border: '2px solid #e2e2e1',\n      overflow: 'hidden',\n      paddingLeft: \"10px\",\n      paddingTop: \"4px\",\n      paddingBottom: \"4px\",\n      marginTop: \"14px\",\n      borderRadius: 4,\n      backgroundColor: '#fcfcfb',\n      transition: theme.transitions.create(['border-color', 'box-shadow']),\n      '&$focused': {\n        border: '2px solid rgb(94, 158, 214)',\n        backgroundColor: '#fff',\n        // boxShadow: `${fade(theme.palette.primary.main, 0.25)} 0 0 0 1px`,\n      },\n    },\n    focused: {},\n  }));\n\n  function LoginTextField(props) {\n    const classes = useStylesLoginTextField();\n    return <TextField InputProps={{ classes, disableUnderline: true }} {...props} />;\n  }\n\n  const drawerWidth = 240;\n\n  const useStyles = makeStyles((theme) => ({\n    root: {\n      display: 'flex',\n    },\n    appBar: {\n      zIndex: theme.zIndex.drawer + 1,\n    },\n    drawer: {\n      width: drawerWidth,\n      flexShrink: 0,\n    },\n    drawerPaper: {\n      width: drawerWidth,\n    },\n    drawerContainer: {\n      overflow: 'auto',\n    },\n    content: {\n      flexGrow: 1,\n      padding: theme.spacing(3),\n    },\n  }));\n\n  const imageStyle={\n      hieght:\"32px\",\n      width:\"32px\"\n    }\n\nconst tabStyle = {\n  '&:hover': {\n    background:\"grey\"\n  }\n\n}\n\nconst metricContainerStyle={\n  marginRight:\"12px\",\n  fontSize:\"24px\",\n  borderRadius:\"9px\",\n  background:\"white\",\n  fontWeight:\"strong\",\n  boxShadow: \"rgb(204, 219, 232) 3px 3px 6px 0px inset, rgba(255, 255, 255, 0.5) -3px -3px 6px 1px inset\",\n  padding:\"4px\",\n  color:\"grey\",\n  alignItems:\"center\"\n  }\n\nconst metricTextStyle ={\n  marginLeft:\"6px\"\n}\n\nfunction PatientChart(props) {\n    const currentPatient = useSelector(state=>state.currentPatient)\n    const classes = useStyles();\n    const context = useContext(HomeContext)\n    const [dxSearchTerm,setDxSearchTerm] = useState(\"\")\n    const [dxSearchResults,setDxSearchResults]=useState([]);\n    const [patient,setPatient] = useState(props.patient)\n    const [loadingPicture,setLoadingPicture] = useState(false)\n    const [loading,setLoading] = useState(true)\n    const form = useRef(null)\n    const [patientTabs,setPatientTabs] = useState([\"Chart Review\",\"Encounters\",\"Orders\",\"Problem List\",\"Meds\",\"Notes\",\"Allergies\",\"Media\"])\n    const [currentPatientTab,setCurrentPatientTab] =useState(\"Chart Review\")\n    const themeContext = useContext(ThemeContext)\n\n    // useScrollPosition(({ prevPos, currPos }) => {\n    //   console.log(currPos.x)\n    //   console.log(currPos.y)\n    // })\n\n    // const [hideOnScroll, setHideOnScroll] = useState(true)\n\n    // useScrollPosition(({ prevPos, currPos }) => {\n    // const isShow = currPos.y > -15\n    // if (isShow !== hideOnScroll) {\n    //   context.setSideBarDisplay(isShow)\n    //   setHideOnScroll(isShow)\n    // }\n    // }, [hideOnScroll])\n\n    const submit = e => {\n        setLoadingPicture(true)\n        e.preventDefault()\n        const data = new FormData(form.current)\n        fetch(`/api/patients/upload/${patient.id}`, {\n        method: 'POST',\n        body: data,\n        })\n        .then(res => res.json())\n        .then(json => {\n        console.log(json)\n        setPatient(json.patient)\n        setLoadingPicture(false)\n        })\n    }\n\n  const imageStyle={\n      hieght:\"28px\",\n      width:\"28px\"\n  }\n  \n  const tabStyle = {\n  '&:hover': {\n    background:\"grey\"\n  }\n  \n  }\n  \n  const metricContainerStyle={\n  display:\"flex\",\n  flexDirection:\"column\",\n  fontSize:\"18px\",\n  borderRadius:\"9px\",\n  cursor:\"pointer\",\n  fontWeight:\"strong\",\n  padding:\"4px\",\n  alignItems:\"center\",\n  '&:hover': {\n      boxShadow: \"rgba(60, 64, 67, 0.3) 0px 1px 2px 0px, rgba(60, 64, 67, 0.15) 0px 1px 3px 1px\"\n  }\n  }\n\n    useEffect(()=>{\n        const searchDxs= async (searchTerm) => {\n            const response = await fetch(`/api/umls/search-term/${searchTerm}`)\n            const data = await response.json()\n            console.log(data)\n            setDxSearchResults(data.results)\n            return;\n        }\n        if (dxSearchTerm.length > 0) {\n            searchDxs(dxSearchTerm)\n        }\n    },[dxSearchTerm])\n\n    const submitProfilePicture=(e)=>{\n        console.log(e)\n    }\n\n    useEffect(()=>{\n      if (props.patient.id === currentPatient.id) {\n        setLoading(false)\n      }\n    },[currentPatient])\n\n    const [selectedIndex, setSelectedIndex] = React.useState(0);\n\n    const handleListItemClick = (event, index) => {\n      setSelectedIndex(index);\n    };\n    console.log(\"Patient AHHHH!\",props.patient)\n\n    if (loading) {\n      return (\n      <div style={{display:\"flex\",flexDirection:\"column\",width:\"100%\",alignItems:\"center\",alignContent:\"center\",justifyContent:\"center\"}}>\n        <CircularProgress style={{width:\"230px\",height:\"230px\",alignSelf:\"center\",justifySelf:\"center\",marginTop:\"200px\"}} />\n      </div>\n      )\n    }\n    return (\n        <>\n        <div style={{display:\"flex\",marginRight:\"10px\",width:\"100%\",backgroundColor:themeContext.themes === \"dark\" ? \"#444444\" : \"white\",flexDirection:\"row\"}}>\n          {/* <div style={{display:\"flex\",flexDirection:\"row\",zIndex:8,margin:0,width:\"100%\",backgroundColor:themeContext.themes === \"dark\" ? \"#444444\" : \"white\"}}>\n            <div>\n              <div style={{display:\"flex\", alignItems:\"center\", cursor:\"pointer\",display:\"flex\",flexDirection:\"row\", background:themeContext.themes === \"dark\" ? \"#444444\" : \"white\"}} >\n                <div style={{...metricContainerStyle,color:themeContext.themes === \"dark\" ? \"white\" : \"grey\",backgroundColor:themeContext.themes === \"dark\" ? \"#444444\" : \"white\"}}>\n                            {props.patient.sex === \"female\" ? \n                                <img style={{height:\"24px\"}} src=\"https://saga-health.s3-us-west-1.amazonaws.com/female-removebg-preview.png\"></img>\n                                :\n                                <img style={{...imageStyle}} src=\"https://saga-health.s3-us-west-1.amazonaws.com/_Pngtree_vector_male_sign_icon_4184181-removebg-preview.png\"></img>}\n                </div>\n                <div style={{borderRadius:\"9px\",display:\"flex\",color: themeContext.themes === \"dark\" ? \"white\" : \"grey\",fontSize:\"17px\",zIndex:\"3\",padding:\"3px\"}}>{props.patient.sex === \"female\" ? \"[ she / her ]\" : \"[ he / him ]\"}</div>\n              </div>\n            </div>\n            </div> */}\n            {/* <Fade in={!hideOnScroll} timeout={250} mountOnEnter unmountOnExit>\n            <div style={{display:\"flex\",flexDirection:\"row\", background:\"white\",alignItems:\"center\",justifyContent:\"space-between\", margin:\"8px\"}}>\n                    <div style={{...metricContainerStyle}}>\n                        {props.patient.sex === \"female\" ? \n                            <img style={{height:\"29px\"}} src=\"https://saga-health.s3-us-west-1.amazonaws.com/female-removebg-preview.png\"></img>\n                            :\n                            <img style={{...imageStyle}} src=\"https://saga-health.s3-us-west-1.amazonaws.com/_Pngtree_vector_male_sign_icon_4184181-removebg-preview.png\"></img>}\n                    </div>\n                    <div style={{...metricContainerStyle}}>\n                        <img style={{...imageStyle}} src=\"https://saga-health.s3-us-west-1.amazonaws.com/my-baby-page-height-38152201fffe401cf5b4a5c923b5ad80.png\"></img>\n                        <span style={{...metricTextStyle}}>{props.patient.height}</span>\n                    </div>\n                    <div style={{...metricContainerStyle}}>\n                        <FitnessCenterIcon style={{height: \"32px\", width:\"32px\", color:\"rgb(85, 177, 250)\"}} />\n                        <span style={{...metricTextStyle}}>{props.patient.weight}<span style={{fontSize:\"18px\", color:\"lightgrey\"}}>kgs</span></span>\n                    </div>\n                    <div style={{...metricContainerStyle}}>\n                        <FavoriteIcon style={{height: \"32px\", width:\"32px\", color:\"red\"}}/>\n                        <span style={{...metricTextStyle}}>{props.patient.beats_per_minute}<span style={{fontSize:\"18px\", color:\"lightgrey\"}}>bpm</span></span>\n                    </div>\n                    <div style={{...metricContainerStyle}}>\n                        <img style={{...imageStyle}} src=\"https://saga-health.s3-us-west-1.amazonaws.com/unnamed.png\"></img>\n                        <span style={{...metricTextStyle}}>{props.patient.bmi}</span>\n                    </div>\n                    <div style={{...metricContainerStyle}}>\n                        {props.patient.smoker ? \n                            <img style={{...imageStyle}} src=\"https://saga-health.s3-us-west-1.amazonaws.com/images-removebg-preview.png\"></img>\n                            :\n                            <img style={{...imageStyle}} src=\"https://saga-health.s3-us-west-1.amazonaws.com/no-smoking-smoke-cigarette-forbidden-habit-cigar-tobacco-nicotine-prohibition-toxic-unhealthy_1--removebg-preview.png\"></img>\n                        }\n                    </div>\n                </div>\n                </Fade> */}\n        <div style={{display:\"flex\",flexDirection:\"column\",borderRight:themeContext.themes === \"dark\" ? \"\" : \"\",borderRight:themeContext.themes === \"dark\" ? \"1px solid black\" : \"1px solid gainsboro\"}}>\n          <span style={{fontFamily:\"inherit\",letterSpacing:\"2px\",textAlign:\"center\",textTransform:\"uppercase\",fontSize:\"20px\",padding:\"6px\",textDecoration:\"none\",color:themeContext.themes === \"dark\" ? \"white\" : \"black\",backgroundColor:themeContext.themes === \"dark\" ? \"#444444\" : \"white\",fontWeight:\"500\",marginTop:\"30px\"}}>{patient.firstName + \" \" + patient.lastName}</span>\n\n        <div style={{display:\"flex\",flexDirection:\"column\", height:\"100%\",backgroundColor:themeContext.themes === \"dark\" ? \"#444444\" : \"white\"}}>\n          {/* <span style={{fontSize:\"34px\",color:themeContext.themes === \"dark\" ? \"white\" : \"grey\"}}>{patient.fullName}</span> */}\n            <div style={{display:\"flex\",flexDirection:\"row\",justifyContent:\"center\",background:themeContext.themes === \"dark\" ? \"#4444\" : \"white\",borderLeft:themeContext.themes === \"dark\" ? \"\" : \"\"}}>\n            <div className={\"circular--portrait\"} style={{justifyContent:\"center\",alignSelf:\"center\", marginLeft:\"10px\",marginTop:\"10px\",marginBottom:\"10px\",boxShadow: themeContext.themes === \"dark\" ? \"\" : \"rgba(0, 0, 0, 0.12) 0px 1px 3px, rgba(0, 0, 0, 0.24) 0px 1px 2px\"}}>\n                {loadingPicture ? <img id=\"user-photo\" src=\"https://media.giphy.com/media/xTk9ZvMnbIiIew7IpW/giphy.gif\"/> : <img id=\"user-photo\" src={patient.picture ? patient.picture : \"\"}/>}\n            </div>\n            </div>\n            <div style={{display:\"flex\",flexDirection:\"row\",justifyContent:\"center\",alignItems:\"center\",paddingTop:\"10px\"}}>\n                <div style={{display:\"flex\",flexDirection:\"column\",justifyContent:\"center\"}}>\n                    <PatientPhoneNumbers patient={props.patient}/>\n                    <PatientAddressInfo patient={props.patient}/>\n                </div>\n            </div>\n        </div>\n        </div>\n      <div style={{padding:\"10px\",display:\"flex\", flexDirection:\"column\",alignContent:\"flex-start\",backgroundColor: themeContext.themes === \"dark\" ? \"#444444\" : \"white\",width:\"100%\",alignContent:\"center\"}}> \n            {/* <div className={ themeContext.themes === \"dark\" ? \"dark-tabs\" : \"tabs\"} style={{display:\"flex\",flexDirection:\"row\",background:themeContext.themes === \"dark\" ? \"#212121\" : \"rgb(221,224,230)\",zIndex:8,paddingTop:\"8px\",paddingLeft:\"19px\",position:\"sticky\",top:\"91px\",width:\"100%\"}}>\n              {patientTabs.map((tab,index)=>{\n                return (\n                <li style={{borderRadius:\"4px\",listStyleType:\"none\",cursor:\"pointer\",...tabStyle}} className={`${currentPatientTab === tab ? \"active\" : \"\"}`} onClick={()=>{setCurrentPatientTab(tab)}}>\n                  <a style={{...tabStyle, color:themeContext.themes === \"dark\" ? \"white\" : \"black\"}}>\n                    {tab}\n                  </a>\n                </li>\n                )\n              })}\n            </div> */}\n                <div>\n                  <ChartReviewBasicAttributes patient={props.patient}></ChartReviewBasicAttributes>\n                </div>\n              {currentPatientTab === \"Chart Review\" ? <ChartReviewTabs patient={currentPatient}/> : <></>}\n            </div>\n            {/* <div style={{minWidth:\"400px\",marginTop:\"0px\",position:\"sticky\",top:\"85px\",}}>\n             Care Timeline \n            </div> */}\n            </div>\n            {/* <form ref={form} onSubmit={submit}>\n                <input type=\"file\" name=\"file\"></input>\n                <input type=\"submit\" name=\"Sign Up\" />\n            </form> */}\n        </>\n    );\n}\nexport default PatientChart;","import React, { Component } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { DragDropContext, Droppable, Draggable } from \"react-beautiful-dnd\";\n\n// fake data generator\nconst getItems = count =>\n  Array.from({ length: count }, (v, k) => k).map(k => ({\n    id: `item-${k}`,\n    content: `item ${k}`\n  }));\n\n// a little function to help us with reordering the result\nconst reorder = (list, startIndex, endIndex) => {\n  const result = Array.from(list);\n  const [removed] = result.splice(startIndex, 1);\n  result.splice(endIndex, 0, removed);\n\n  return result;\n};\n\nconst grid = 8;\n\nconst getItemStyle = (isDragging, draggableStyle) => ({\n  // some basic styles to make the items look a bit nicer\n  userSelect: \"none\",\n  padding: grid * 2,\n  margin: `0 0 ${grid}px 0`,\n\n  // change background colour if dragging\n  background: isDragging ? \"lightgreen\" : \"grey\",\n\n  // styles we need to apply on draggables\n  ...draggableStyle\n});\n\nconst getListStyle = isDraggingOver => ({\n  background: isDraggingOver ? \"lightblue\" : \"lightgrey\",\n  padding: grid,\n  width: 250\n});\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      items: getItems(10)\n    };\n    this.onDragEnd = this.onDragEnd.bind(this);\n  }\n\n  onDragEnd(result) {\n    // dropped outside the list\n    if (!result.destination) {\n      return;\n    }\n\n    const items = reorder(\n      this.state.items,\n      result.source.index,\n      result.destination.index\n    );\n\n    this.setState({\n      items\n    });\n  }\n\n  // Normally you would want to split things out into separate components.\n  // But in this example everything is just done in one place for simplicity\n  render() {\n    return (\n      <DragDropContext onDragEnd={this.onDragEnd}>\n        <Droppable droppableId=\"droppable\">\n          {(provided, snapshot) => (\n            <div\n              {...provided.droppableProps}\n              ref={provided.innerRef}\n              style={getListStyle(snapshot.isDraggingOver)}\n            >\n              {this.state.items.map((item, index) => (\n                <Draggable key={item.id} draggableId={item.id} index={index}>\n                  {(provided, snapshot) => (\n                    <div\n                      ref={provided.innerRef}\n                      {...provided.draggableProps}\n                      {...provided.dragHandleProps}\n                      style={getItemStyle(\n                        snapshot.isDragging,\n                        provided.draggableProps.style\n                      )}\n                    >\n                      {item.content}\n                    </div>\n                  )}\n                </Draggable>\n              ))}\n              {provided.placeholder}\n            </div>\n          )}\n        </Droppable>\n      </DragDropContext>\n    );\n  }\n}\n\nexport default App\n\n// Put the thing into the DOM!","import React, { useContext, useEffect, useState } from 'react'\nimport { Calendar, momentLocalizer,Views } from 'react-big-calendar' \nimport moment from 'moment'\nimport withDragAndDrop from \"react-big-calendar/lib/addons/dragAndDrop\";\nimport \"react-big-calendar/lib/addons/dragAndDrop/styles.css\";\nimport 'react-big-calendar/lib/css/react-big-calendar.css';\nimport { useDispatch, useSelector } from 'react-redux';\nimport '../styles/DepartmentScheduler.css'\nimport { createNewEncounter } from '../store/encounters';\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport NativeSelect from '@material-ui/core/NativeSelect';\nimport InputBase from '@material-ui/core/InputBase';\nimport Modal from '@material-ui/core/Modal';\nimport Backdrop from '@material-ui/core/Backdrop';\nimport Fade from '@material-ui/core/Fade';\nimport Slide from '@material-ui/core/Slide';\nimport Button from '@material-ui/core/Button';\nimport OrderList from '../components/OrderList'\nimport { Accordion, AccordionDetails, AccordionSummary, CircularProgress, Grid, List } from '@material-ui/core';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Divider from '@material-ui/core/Divider';\nimport InboxIcon from '@material-ui/icons/Inbox';\nimport DraftsIcon from '@material-ui/icons/Drafts';\nimport LocalHospitalTwoToneIcon from '@material-ui/icons/LocalHospitalTwoTone';\nimport SelectedOrderPreviewCard from '../components/SelectedOrderPreviewCard';\nimport ExitToAppTwoToneIcon from '@material-ui/icons/ExitToAppTwoTone';\nimport ThemeContext from '../components/utils/ThemeContext';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\n\nconst BootstrapInput = withStyles((theme) => ({\n  rootList: {\n    width: '100%',\n    maxWidth: 360,\n  },\n  root: {\n    'label + &': {\n      marginTop: theme.spacing(3),\n    },\n  },\n  input: {\n    borderRadius: 4,\n    position: 'relative',\n    border: '1px solid #ced4da',\n    fontSize: 16,\n    padding: '10px 26px 10px 12px',\n    transition: theme.transitions.create(['border-color', 'box-shadow']),\n    // Use the system font instead of the default Roboto font.\n    fontFamily: [\n      '-apple-system',\n      'BlinkMacSystemFont',\n      '\"Segoe UI\"',\n      'Roboto',\n      '\"Helvetica Neue\"',\n      'Arial',\n      'sans-serif',\n      '\"Apple Color Emoji\"',\n      '\"Segoe UI Emoji\"',\n      '\"Segoe UI Symbol\"',\n    ].join(','),\n    '&:focus': {\n      borderRadius: 4,\n      borderColor: '#80bdff',\n      boxShadow: '0 0 0 0.2rem rgba(0,123,255,.25)',\n    },\n  },\n}))(InputBase);\n\nconst ColorButton = withStyles((theme) => ({\n  root: {\n      color: \"white\",\n      paddingRight: \"10px\",\n      paddingLeft: \"10px\",\n      margin: \"4px\",\n      backgroundColor:\"grey\",\n      '&:hover': {\n          backgroundColor: \"#b1f3b1 !important\",\n      },\n  },\n  }))(Button);\n  const DepartmentColorButton = withStyles((theme) => ({\n    root: {\n        color: \"Black\",\n        paddingRight: \"10px\",\n        paddingLeft: \"10px\",\n        fontStyle:\"bold\",\n        fontSize:\"20px\",\n        textTransform:\"none\",\n        borderRadius:\"4px\",\n        '&:hover': {\n            backgroundColor: \"lightgrey !important\",\n        },\n    },\n    }))(Button);\n\n    const SmallColorButton = withStyles((theme) => ({\n      root: {\n          color: \"Black\",\n          paddingRight: \"10px\",\n          paddingLeft: \"10px\",\n          paddingTop:\"0\",\n          paddingBottom:\"0\",\n          fontSize:\"12px\",\n          marginLeft:\"5px\",\n          textTransform:\"none\",\n          borderRadius:\"4px\",\n          border:\"1px solid white\",\n          '&:hover': {\n              backgroundColor: \"#b1f3b1 !important\",\n          },\n      },\n      }))(Button);\n\n\nconst useStyles = makeStyles((theme) => ({\n  modal: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  paper: {\n    boxShadow: theme.shadows[5],\n    padding: theme.spacing(2, 4, 3),\n  },\n}));\n\nconst now = new Date()\nconst es = [\n    {\n       id: 15,\n       title: 'Point in Time Event',\n       start: now,\n       end: now,\n    }\n]\nconst localizer = momentLocalizer(moment) // or globalizeLocalizer\nconst DndCalendar = withDragAndDrop(Calendar)\n\n\nconst DepartmentSchedule = props => {\n  const classes = useStyles();\n  const [selectedIndex, setSelectedIndex] = React.useState(1);\n  const [selectedOrder,setSelectedOrder] = useState({})\n\n  const handleListItemClick = (event, index,order) => {\n    setSelectedIndex(index);\n    setSelectedOrder(order)\n  };\n  const [open, setOpen] = React.useState(true);\n\n  const handleOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n    const dispatch = useDispatch()\n    // const orders = Object.values(appointmentOrders).map((order,index)=>{\n    // })\n\n    const [events,setEvents] = useState([])\n    const [loading,setLoading] = useState(true)\n    const [orders,setOrders] = useState({})\n    const [displayDragItemInCell,setDisplayDragItemInCell] =useState(true)\n    const [draggedEvent,setDraggedEvent] = useState({order:{}})\n    const [calendarLoading,setCalendarLoading] = useState(true)\n    const [departmentIndex, setDepartmentIndex] = React.useState();\n    const [departments,setDepartments] = useState({})\n    const [department,setDepartment] = useState({})\n    const [slideIn,setSlideIn] = useState(false)\n    const [resourceMap,setResourceMap] = useState([])\n    const themeContext = useContext(ThemeContext)\n\n    const handleChange = (event) => {\n      console.log(event.target.value)\n      setDepartmentIndex(event.target.value);\n    };\n    // const [dragFromOutsideItem,setDragFromOutsideItem] = useState(null)\n    // useEffect(()=>{\n    //   if (encounters || appointmentOrders) {\n    //     setLoading(false)\n    //   }\n    // },[encounters,appointmentOrders])\n\n    useEffect(()=>{\n      const getDepartment = async (id) => {\n        const response = await fetch(`/api/orders/department/${id}`)\n        const data = await response.json()\n        console.log(\"departmentDATAT: \",data)\n        setDepartment(data.department)\n        selectDepartment(data.department)\n        setLoading(false)\n        console.log(data)\n      }\n      if (props.department.name) {\n          getDepartment(props.department.id)\n      }\n    },[props.department])\n\n    const selectDepartment = (departmento) => {\n        console.log(\"DEOPARTENA: \",departmento)\n      const dept = departmento\n      const encs = dept.encounters.map((encounter,index)=>{\n        const eventEnd = encounter.end + \"-500\"\n        const eventStart = encounter.start + \"-500\"\n        return {\n          id: encounter.id,\n          title: encounter.patient_full_name,\n          end: new Date(eventEnd),\n          start: new Date(eventStart),\n          resourceId: encounter.resource_id,\n        }\n      })\n      console.log(encs)\n      const ordObj = {}\n      dept.orders.forEach(order=>{\n        ordObj[order.id] = order\n      })\n      setOrders(ordObj)\n      console.log(\"orders: \",dept.orders)\n      setEvents(encs)\n      console.log(\"EVENTS\",encs)\n      const resMap = dept.resources.map(resource=>{\n        return { resourceId: resource.id, resourceTitle: resource.name }\n      })\n      setResourceMap(resMap)\n      setCalendarLoading(false)\n    }\n    useEffect(()=>{\n      if (calendarLoading === false) {\n        setSlideIn(true)\n      }\n    },[calendarLoading])\n\n    const dragFromOutsideItem = () => {\n        return draggedEvent\n    }\n\n    const handleDragStart = (evt,event,index,order) => {\n        setDraggedEvent(event)\n        setSelectedIndex(index);\n        setSelectedOrder(order)\n        // Now setup our dataTransfer object properly\n// First we'll allow a move action — this is used for the cursor\n        evt.dataTransfer.effectAllowed = 'move';\n// Setup some dummy drag-data to ensure dragging\n        evt.dataTransfer.setData('text/plain', 'some_dummy_data');\n// Now we'll create a dummy image for our dragImage\n        var dragImage = document.createElement('div');\n        dragImage.setAttribute('style', 'border-radius:4px;position: absolute; left: 0px; top: 0px; width: 140px;cursor:grabbing; padding:6px; color:white; height: 58px; background: rgb(66, 133, 244); z-index: -1');\n        document.body.appendChild(dragImage);\n        dragImage.innerHTML=`${event.title}`\n// And finally we assign the dragImage and center it on cursor\n        evt.dataTransfer.setDragImage(dragImage, 20, 20);\n    }\n\n    const resizeEvent = ({ event, start, end }) => {\n    \n        const nextEvents = events.map(existingEvent => {\n          return existingEvent.id == event.id\n            ? { ...existingEvent, start, end }\n            : existingEvent\n        })\n    \n        setEvents(nextEvents)\n        //alert(`${event.title} was resized to ${start}-${end}`)\n      }\n\n    const moveEvent = ({ event, start, end, isAllDay: droppedOnAllDaySlot }) => {\n        // const { events } = this.state\n    \n        // let allDay = event.allDay\n    \n        // if (!event.allDay && droppedOnAllDaySlot) {\n        //   allDay = true\n        // } else if (event.allDay && !droppedOnAllDaySlot) {\n        //   allDay = false\n        // }\n    \n        const nextEvents = events.map(existingEvent => {\n          return existingEvent.id == event.id\n            ? { ...existingEvent, start, end }\n            : existingEvent\n        })\n    \n        setEvents(nextEvents)\n    \n        // alert(`${event.title} was dropped onto ${updatedEvent.start}`)\n      }\n\n\n      const onDropFromOutside = ({ start, end, allDay,resource }) => {\n        if (!draggedEvent) return;\n        const event = {\n          id: draggedEvent.id,\n          title: draggedEvent.title,\n          start,\n          end,\n          allDay: allDay,\n          resource\n        }\n\n        removeOrderFromList(draggedEvent.order.id)\n        console.log(\"EVENT TO CREATE\",event)\n        dispatch(createNewEncounter({...event,order:draggedEvent.order}))\n        console.log(\"draggedEvent: \",draggedEvent)\n        setDraggedEvent({order:{}})\n        newEvent(event)\n      }\n\n      const removeOrderFromList = (order) => {\n        console.log(orders)\n        const prevOrders = {...orders}\n        delete prevOrders[order]\n        console.log(prevOrders)\n        setOrders(prevOrders)\n      }\n\n      const newEvent = event => {\n        let idList = events.map(a => a.id)\n        let newId = Math.max(...idList) + 1\n        let hour = {\n          id: newId,\n          title: event.title,\n          allDay: event.isAllDay,\n          start: event.start,\n          end: event.end,\n          resourceId: event.resource\n        }\n        setEvents([...events,hour])\n      }\n      \n    if (loading) {\n      return (\n      <div style={{display:\"flex\",flexDirection:\"column\",width:\"100%\",alignItems:\"center\",alignContent:\"center\",justifyContent:\"center\"}}>\n        <CircularProgress style={{width:\"230px\",height:\"230px\",alignSelf:\"center\",justifySelf:\"center\",marginTop:\"200px\"}} />\n      </div>\n      )\n    }\n    \n    return (\n        <>\n        <Grid container style={{maxWidth:\"1700px\", justifyContent:\"center\",margin:\"0\",width:\"100%\",marginRight:\"0\",backgroundColor: themeContext.themes === \"dark\" ? \"#444444\" : \"white\"}}>\n          <Grid item lg={3} md={3} xs={3} sm={3} style={{width:\"100%\"}}>\n          <div style={{display: \"flex\",flexDirection:\"column\",margin:\"10px\",borderRadius:\"4px\",backgroundColor: themeContext.themes === \"dark\" ? \"#444444\" : \"white\"}}>\n          <Slide direction=\"up\" in={slideIn} timeout={350}>\n          <div style={{display: calendarLoading ? \"none\": \"flex\",flexDirection:\"row\",margin:\"5px\",alignItems:\"center\",background: themeContext.themes === \"dark\" ? \"#444444\" : \"white\",color:themeContext.themes === \"dark\" ? \"white\" : \"black\"}}>\n          {calendarLoading ? \"\" : \n          <>\n          <div style={{width:\"fit-content\",fontSize:\"18px\",margin:\"5px\",color:themeContext.themes === \"dark\" ? \"white\" : \"black\"}} onClick={handleOpen}> <div style={{display:\"flex\",flexDirection:\"row\",alignItems:\"center\"}}><span>{props.department.name}</span></div></div>          </>\n          }\n          </div>\n          </Slide>\n          <Slide direction=\"up\" in={slideIn} timeout={350}>\n        <div style={{display:\"flex\",flexDirection:\"column\",overflow:\"scroll\",borderRadius:\"4px\",backgroundColor: themeContext.themes === \"dark\" ? \"#999999\" : \"white\",padding:\"10px\"}}>\n          <div className={classes.rootList} style={{maxHeight:\"300px\",overflow:\"scroll\",backgroundColor: themeContext.themes === \"dark\" ? \"#666666\" : \"white\"}}>\n          {Object.values(orders).length === 0 ? <div style={{display:\"flex\",color:\"black\", backgroundColor: themeContext.themes === \"dark\" ? \"#343434\" : \"white\",margin:\"20px\",padding:\"30px\", height:\"100%\", justifyContent:\"center\",alignItems:\"center\",flexDirection:\"column\"}}>\n            <div style={{display:\"flex\",flexDirection:\"column\",color:\"black\", boxShadow: \"rgba(0, 0, 0, 0.1) 0px 1px 3px 0px, rgba(0, 0, 0, 0.06) 0px 1px 2px 0px\",backgroundColor: themeContext.themes === \"dark\" ? \"#999999\" : \"white\",padding:\"10px\",borderRadius:\"4px\", marginBottom:\"20px\"}}>\n              <span style={{color: themeContext.themes === \"dark\" ? \"white\" : \"#999999\"}}>No remaining unscheduled orders. With the right security, you can place orders from the Orders tab of a patient's chart.</span>\n              {/* <ColorButton>Place Orders<ExitToAppTwoToneIcon style={{marginLeft:\"3px\"}}/></ColorButton> */}\n              </div>\n            </div> : \n            <List style={{marginBottom:\"20px\",color:themeContext.themes === \"dark\" ? \"white\" : \"black\",backgroundColor:themeContext.themes === \"dark\" ? \"#999999\" : \"white\"}} component=\"nav\" aria-label=\"main mailbox folders\">\n            {Object.values(orders).map((order,index)=> {\n            return (\n                <Accordion style={{width:\"100%\",margin:\"0px\",backgroundColor: themeContext.themes === \"dark\" ? \"#444444\" : \"white\",color: themeContext.themes === \"light\" ? \"#444444\" : \"white\"}}>\n                            <AccordionSummary\n                                expandIcon={<ExpandMoreIcon style={{color: themeContext.themes === \"dark\" ? \"white\" : \"#444444\"}}/>}\n                                aria-label=\"Expand\"\n                                aria-controls=\"additional-actions1-content\"\n                                id=\"additional-actions1-header\"\n                                style={{justifyContent:\"space-between\", height:\"30px\"}}\n                            >\n            <ListItem\n              className={'order-list-item'}\n              button\n              style={{color: selectedIndex === index ? themeContext.themes === \"dark\" ? \"black\" : \"black\" : themeContext.themes === \"dark\" ? \"white\" : \"black\"}}\n              selected={selectedIndex === index}\n              onClick={(event) => handleListItemClick(event, index, order)}\n            >\n              <div\n                    className={`draggable ${draggedEvent.order.id === order.id ? \"dragging\" : \"\"}`}\n                    onDragEnd={()=>{setDraggedEvent({order:{}})}}\n                    style={{\n                      margin:\"4px\",\n                      borderRadius: '4px',\n                      padding:\"4px\",\n                      color: themeContext.themes === \"dark\" ? \"white\" : \"white\",\n                      border: themeContext.themes === \"dark\" ? \"1px solid white\" : \"1px solid cornflowerblue\",\n                      backgroundColor: themeContext.themes === \"dark\" ? \"cornflowerblue\" : \"cornflowerblue\",\n                      cursor: draggedEvent.order.id === order.id ? \"grabbing\" : \"grab\",\n                      width:\"fit-content\",\n                      boxShadow: \"rgba(0, 0, 0, 0.1) 0px 1px 3px 0px, rgba(0, 0, 0, 0.06) 0px 1px 2px 0px\",\n                    }}\n                    draggable=\"true\"\n                    onDragStart={(e) =>\n                      handleDragStart(e,{ title: order.patient.fullName, order:order },index,order)\n                    }\n                  >\n                    {order.patient.fullName}\n                </div>\n            </ListItem>\n            </AccordionSummary>\n            <AccordionDetails>\n                HEllo my friend hello\n            </AccordionDetails>\n            </Accordion>\n                  )})}\n                  </List>\n          }\n              </div>\n        </div>\n        </Slide>\n        </div>\n        <Slide direction=\"up\" in={selectedOrder.patient}>\n        <div>\n        {selectedOrder.patient ?\n          <SelectedOrderPreviewCard patient={selectedOrder.patient} order={selectedOrder}/> \n          : \"\"}\n        </div>\n        </Slide>\n        </Grid>\n        <Slide direction=\"up\" in={slideIn} timeout={350}>\n            <Grid item sm={8} style={{borderRadius:\"4px\",backgroundColor: themeContext.themes === \"dark\" ? \"#444444\" : \"white\"}}>\n                <DndCalendar\n                    style={{ backgroundColor: themeContext.themes === \"dark\" ? \"#444444\" : \"white\",color: themeContext.themes === \"dark\" ? \"white\" : \"black\",maxHeight:\"700px\", height: \"680px\",width:\"100%\",borderRadius:\"4px\" }}\n                    localizer={localizer}\n                    startAccessor=\"start\"\n                    selectable\n                    popup={true}\n                    step={60}\n                    min={new Date(1970, 1, 1, 8)}\n                    max={new Date(1970, 1, 1, 17)}\n                    scrollToTime={new Date(1970, 1, 1, 3)}\n                    onEventDrop={moveEvent}\n                    endAccessor=\"end\"\n                    onEventResize={resizeEvent}\n                    defaultView={'day'}\n                    views={['day','month']}\n                    dragFromOutsideItem = {dragFromOutsideItem}\n                    onDropFromOutside={onDropFromOutside}\n                    defaultDate={moment().toDate()}\n                    resources={resourceMap}\n                    resourceIdAccessor=\"resourceId\"\n                    resourceTitleAccessor=\"resourceTitle\"\n                    // displayDragItemInCell={true}\n                    handleDragStart={handleDragStart}\n                    events={events}\n                    eventPropGetter={\n                      (event, start, end, isSelected) => {\n                        let newStyle = {\n                          backgroundColor: \"cornflowerblue\",\n                          color: 'white',\n                          borderRadius: \"4px\",\n                          border: \"1px solid white\",\n                        };\n                  \n                        return {\n                          className: \"\",\n                          style: newStyle\n                        };\n                      }\n                    }\n                  />\n\n\n            </Grid>\n            </Slide>\n        </Grid>\n        {/* <div>\n      <Modal\n        aria-labelledby=\"transition-modal-title\"\n        aria-describedby=\"transition-modal-description\"\n        className={classes.modal}\n        open={open}\n        onClose={handleClose}\n        closeAfterTransition\n        BackdropComponent={Backdrop}\n        BackdropProps={{\n          timeout: 500,\n        }}\n      >\n        <Slide direction=\"up\" in={open}>\n          <div className={classes.paper} style={{display:\"flex\",flexDirection:\"column\",outline:\"none\",borderRadius:\"4px\",backgroundColor: themeContext.themes === \"dark\" ? \"#444444\" : \"white\",color: themeContext.themes === \"dark\" ? \"white\" : \"#444444\"}}>\n            <h3>Select a department to continue</h3>\n            <form onSubmit={selectDepartment} style={{display:\"flex\",flexDirection:\"column\"}}>\n            <FormControl className={classes.margin}>\n        <InputLabel htmlFor=\"demo-customized-select-native\">Department</InputLabel>\n        <NativeSelect\n          id=\"demo-customized-select-native\"\n          value={departmentIndex}\n          onChange={handleChange}\n          input={<BootstrapInput style={{color:themeContext.themes === \"dark\" ? \"white\" : \"black\", backgroundColor:themeContext.themes === \"dark\" ? \"#444444\" : \"white\"}}/>}\n        > \n        <option aria-label=\"None\" value=\"\" />\n        {\n          departments.map((dept,index)=>{\n            return <option value={index}>{dept.name}</option>\n          })\n        }\n          </NativeSelect>\n          </FormControl>\n          <ColorButton style={{marginTop:\"10px\"}} type=\"submit\">Let's go!</ColorButton>\n          </form>\n          </div>\n        </Slide>\n      </Modal>\n    </div> */}\n        </>\n        )\n}\n\nexport default DepartmentSchedule","import React, { useContext } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport BottomNavigation from '@material-ui/core/BottomNavigation';\nimport BottomNavigationAction from '@material-ui/core/BottomNavigationAction';\nimport RestoreIcon from '@material-ui/icons/Restore';\nimport FavoriteIcon from '@material-ui/icons/Favorite';\nimport LocationOnIcon from '@material-ui/icons/LocationOn';\nimport ThemeContext from './utils/ThemeContext';\nimport HomeIcon from '@material-ui/icons/Home';\nimport EventNoteIcon from '@material-ui/icons/EventNote';\nimport ChatIcon from '@material-ui/icons/Chat';\nimport ViewHeadlineIcon from '@material-ui/icons/ViewHeadline';\nimport DashboardIcon from '@material-ui/icons/Dashboard';\nimport Crop169Icon from '@material-ui/icons/Crop32';\nimport TabIcon from '@material-ui/icons/Tab';\n\nconst useStyles = makeStyles({\n  root: {\n    width:\"100%\",\n    bottom:\"0px\",\n    position:\"fixed\"\n  },\n});\n\nexport default function MobileBottomNav() {\n  const classes = useStyles();\n  const [value, setValue] = React.useState(0);\n  const themeContext = useContext(ThemeContext);\n\n  return (\n    <BottomNavigation\n      value={value}\n      onChange={(event, newValue) => {\n        setValue(newValue);\n      }}\n      showLabels\n      className={classes.root}\n      style={{background: themeContext.themes === \"dark\" ? \"#999999\" : \"white\"}}\n    >\n      <BottomNavigationAction style={{outline:\"none\"}} label=\"secure chat\" icon={<ChatIcon />} />\n      <BottomNavigationAction  style={{outline:\"none\"}} label=\"home\" icon={<DashboardIcon />} />\n      <BottomNavigationAction  style={{outline:\"none\"}} label=\"open tabs\" icon={<Crop169Icon />} />\n    </BottomNavigation>\n  );\n}","import React from 'react';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/core/styles';\nimport SwipeableDrawer from '@material-ui/core/SwipeableDrawer';\nimport Button from '@material-ui/core/Button';\nimport List from '@material-ui/core/List';\nimport Divider from '@material-ui/core/Divider';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport InboxIcon from '@material-ui/icons/MoveToInbox';\nimport MailIcon from '@material-ui/icons/Mail';\nimport ScheduleSelector from './ScheduleSelector';\n\nconst useStyles = makeStyles({\n  list: {\n    width: 250,\n  },\n  fullList: {\n    width: 'auto',\n  },\n});\n\nexport default function MobileBottomMenu() {\n  const classes = useStyles();\n  const [state, setState] = React.useState({\n    top: false,\n    left: false,\n    bottom: false,\n    right: false,\n  });\n\n  const toggleDrawer = (anchor, open) => (event) => {\n    if (event && event.type === 'keydown' && (event.key === 'Tab' || event.key === 'Shift')) {\n      return;\n    }\n\n    setState({ ...state, [anchor]: open });\n  };\n\n  const list = (anchor) => (\n    <div\n      className={clsx(classes.list, {\n        [classes.fullList]: anchor === 'top' || anchor === 'bottom',\n      })}\n      role=\"presentation\"\n      onClick={toggleDrawer(anchor, false)}\n      onKeyDown={toggleDrawer(anchor, false)}\n    >\n      <List>\n        {['Inbox', 'Starred', 'Send email', 'Drafts'].map((text, index) => (\n          <ListItem button key={text}>\n            <ListItemIcon>{index % 2 === 0 ? <InboxIcon /> : <MailIcon />}</ListItemIcon>\n            <ListItemText primary={text} />\n          </ListItem>\n        ))}\n      </List>\n      <Divider />\n      <List>\n        {['All mail', 'Trash', 'Spam'].map((text, index) => (\n          <ListItem button key={text}>\n            <ListItemIcon>{index % 2 === 0 ? <InboxIcon /> : <MailIcon />}</ListItemIcon>\n            <ListItemText primary={text} />\n          </ListItem>\n        ))}\n      </List>\n    </div>\n  );\n\n  return (\n    <div>\n      {['bottom'].map((anchor) => (\n        <React.Fragment key={anchor}>\n          {/* <Button onClick={toggleDrawer(anchor, true)}>{anchor}</Button> */}\n          <SwipeableDrawer\n            anchor={anchor}\n            open={state[anchor]}\n            onClose={toggleDrawer(anchor, false)}\n            onOpen={toggleDrawer(anchor, true)}\n          >\n            <ScheduleSelector/>\n          </SwipeableDrawer>\n        </React.Fragment>\n      ))}\n    </div>\n  );\n}","import { createContext } from 'react';\n\nconst RegistrationContext = createContext();\n\nexport default RegistrationContext;","import React, {useState,useContext} from 'react'\nimport TextField from '@material-ui/core/TextField'\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport RegistrationContext from './utils/RegistrationContext';\n\n\n\nexport default function RegistrationBasicInfoForm() {\n\n    const regContext = useContext(RegistrationContext)\n\n    return (\n        <div style={{display:\"flex\",flexDirection:\"column\",alignItems:\"center\",width:\"100%\"}}>\n            <div style={{display:\"flex\",flexDirection:\"column\",width:\"100%\"}}>\n                <TextField fullWidth value={regContext.firstName} onChange={(e)=>regContext.setFirstName(e.target.value)} style={{margin:\"10px\"}}id=\"outlined-basic\" label=\"First Name\" variant=\"outlined\" />\n                <TextField fullWidth value={regContext.lastName} onChange={(e)=>regContext.setLastName(e.target.value)}style={{margin:\"10px\"}}id=\"outlined-basic\" label=\"Last Name\" variant=\"outlined\" />\n            </div>\n            <div style={{display:\"flex\",flexDirection:\"row\",width:\"100%\",justifyContent:\"space-around\"}}>\n\n            <div style={{display:\"flex\",flexDirection:\"column\",alignItems:\"center\",justifyContent:\"center\"}}>\n                <FormLabel >Date Of Birth: </FormLabel>\n                <TextField value={regContext.birthday} onChange={(e)=>regContext.setBirthday(e.target.value)} type=\"date\" style={{margin:\"10px\"}}id=\"outlined-basic\" variant=\"standard\" />\n            </div>\n            <FormControl component=\"fieldset\">\n                <div style={{display:\"flex\",flexDirection:\"column\",alignItems:\"center\"}}>\n                <FormLabel component=\"legend\">Gender Identity: </FormLabel>\n                <RadioGroup aria-label=\"gender\" name=\"gender1\" value={regContext.sex} onChange={(e)=>regContext.setSex(e.target.value)}>\n                    <div style={{display:\"flex\",flexDirection:\"column\"}}>\n                    <FormControlLabel value=\"female\" control={<Radio />} label=\"Female\" />\n                    <FormControlLabel value=\"male\" control={<Radio />} label=\"Male\" />\n                    <FormControlLabel value=\"other\" control={<Radio />} label=\"Other\" />\n                    </div>\n                </RadioGroup>\n                </div>\n            </FormControl>\n            </div>\n        <div style={{display:\"flex\",flexDirection:\"column\",width:\"100%\"}}>\n            <div style={{display:\"flex\",flexDirection:\"column\",width:\"100%\"}}>\n                <TextField fullWidth value={regContext.addressLineOne} onChange={(e)=>regContext.setAddressLineOne(e.target.value)} style={{margin:\"10px\"}}id=\"outlined-basic\" label=\"Address Line 1\" variant=\"outlined\" />\n                <TextField fullWidth value={regContext.addressLineTwo} onChange={(e)=>regContext.setAddressLineTwo(e.target.value)} style={{margin:\"10px\"}}id=\"outlined-basic\" label=\"Address Line 2\" variant=\"outlined\" />\n            </div>\n            <div style={{display:\"flex\",flexDirection:\"column\",width:\"100%\"}}>\n                <TextField fullWidth value={regContext.addressCity} onChange={(e)=>regContext.setAddressCity(e.target.value)} style={{margin:\"10px\"}}id=\"outlined-basic\" label=\"City\" variant=\"outlined\" />\n                <TextField fullWidth value={regContext.addressState} onChange={(e)=>regContext.setAddressState(e.target.value)} style={{margin:\"10px\"}}id=\"outlined-basic\" label=\"State\" variant=\"outlined\" />\n                <TextField fullWidth value={regContext.addressZip} onChange={(e)=>regContext.setAddressZip(e.target.value)} style={{margin:\"10px\"}}id=\"outlined-basic\" label=\"Zip Code\" variant=\"outlined\" />\n            </div>\n        </div>\n        <div style={{display:\"flex\",flexDirection:\"row\",width:\"100%\"}}>\n            <div style={{display:\"flex\",flexDirection:\"column\", width:\"100%\"}}>\n                <TextField type=\"tel\" value={regContext.homePhone} onChange={(e)=>regContext.setHomePhone(e.target.value)} fullWidth style={{margin:\"10px\"}}id=\"outlined-basic\" label=\"Home Phone Number\" variant=\"standard\" />\n                <TextField type=\"tel\" value={regContext.mobilePhone} onChange={(e)=>regContext.setMobilePhone(e.target.value)} fullWidth style={{margin:\"10px\"}}id=\"outlined-basic\" label=\"Mobile Phone Number\" variant=\"standard\" />\n                <TextField type=\"tel\" value={regContext.workPhone} onChange={(e)=>regContext.setWorkPhone(e.target.value)} fullWidth style={{margin:\"10px\"}}id=\"outlined-basic\" label=\"Work Phone Number\" variant=\"standard\" />\n                <TextField type=\"email\" value={regContext.email} onChange={(e)=>regContext.setEmail(e.target.value)} fullWidth style={{margin:\"10px\"}}id=\"outlined-basic\" label=\"Email\" variant=\"outlined\" />\n            </div>\n        </div>\n        </div>\n    )\n}","import React, {useContext, useState} from 'react'\nimport TextField from '@material-ui/core/TextField'\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport RegistrationContext from './utils/RegistrationContext';\n\n\n\nexport default function RegistrationBiometricInfo() {\n\n    const regContext = useContext(RegistrationContext)\n\n    const [value, setValue] = React.useState('female');\n\n  const handleChange = (event) => {\n    setValue(event.target.value);\n  };\n    return (\n        <div style={{display:\"flex\",flexDirection:\"column\",alignItems:\"center\",width:\"100%\"}}>\n            <div style={{display:\"flex\",flexDirection:\"row\",width:\"100%\"}}>\n                <TextField fullWidth value={regContext.weight} onChange={(e)=>regContext.setWeight(e.target.value)} style={{margin:\"10px\"}}id=\"outlined-basic\" label=\"Weight\" variant=\"outlined\" />\n                <TextField fullWidth value={regContext.height} onChange={(e)=>regContext.setHeight(e.target.value)} style={{margin:\"10px\"}}id=\"outlined-basic\" label=\"Height\" variant=\"outlined\" />\n            </div>\n            <div style={{display:\"flex\",flexDirection:\"row\",width:\"100%\"}}>\n                <TextField fullWidth value={regContext.bmi} onChange={(e)=>regContext.setBmi(e.target.value)} style={{margin:\"10px\"}}id=\"outlined-basic\" label=\"BMI\" variant=\"outlined\" />\n                <TextField fullWidth value={regContext.heartRate} onChange={(e)=>regContext.setHeartRate(e.target.value)}style={{margin:\"10px\"}}id=\"outlined-basic\" label=\"Heart Rate\" variant=\"outlined\" />\n            </div>\n            <div style={{display:\"flex\",flexDirection:\"row\",width:\"100%\",justifyContent:\"space-around\"}}>\n            <FormControl component=\"fieldset\">\n                <div style={{display:\"flex\",flexDirection:\"column\",alignItems:\"center\"}}>\n                <RadioGroup aria-label=\"gender\" name=\"gender1\" value={regContext.smoker} onChange={(e)=>regContext.setSmoker(e.target.value)}>\n                    <div style={{display:\"flex\",flexDirection:\"row\"}}>\n                        <FormControlLabel value=\"yes\" control={<Radio />} label=\"Smoker\" />\n                        <FormControlLabel value=\"no\" control={<Radio />} label=\"Non-Smoker\" />\n                    </div>\n                </RadioGroup>\n                </div>\n            </FormControl>\n            </div>\n            <div style={{display:\"flex\",flexDirection:\"row\",width:\"100%\"}}>\n                <TextField fullWidth value={regContext.occupation} onChange={(e)=>regContext.setOccupation(e.target.value)} style={{margin:\"10px\"}}id=\"outlined-basic\" label=\"Occupation\" variant=\"outlined\" />\n            </div>\n            <div style={{display:\"flex\",flexDirection:\"row\",width:\"100%\"}}>\n                <TextField fullWidth style={{margin:\"10px\"}}id=\"outlined-basic\" label=\"Reason for Today's Visit\" variant=\"outlined\" />\n            </div>\n        </div>\n    )\n}","import React, { useContext, useEffect, useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Stepper from '@material-ui/core/Stepper';\nimport Step from '@material-ui/core/Step';\nimport StepLabel from '@material-ui/core/StepLabel';\nimport StepContent from '@material-ui/core/StepContent';\nimport Button from '@material-ui/core/Button';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\nimport BasicPatientAttributes from '../components/BasicPatientAttributes';\nimport RegistrationBasicInfoForm from '../components/RegistrationBasicInfoForm';\nimport RegistrationBiometricInfo from '../components/RegistrationBiometricInfo';\nimport RegistrationContext from '../components/utils/RegistrationContext';\nimport Cookies from 'js-cookie'\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: '100%',\n    display:\"flex\",\n    justifyContent:\"center\",\n    maxWidth:\"800px\"\n  },\n  button: {\n    marginTop: theme.spacing(1),\n    marginRight: theme.spacing(1),\n  },\n  actionsContainer: {\n    marginBottom: theme.spacing(2),\n  },\n  resetContainer: {\n    padding: theme.spacing(3),\n  },\n}));\n\nfunction getSteps() {\n  return ['Basic Info', 'Biometrics', 'Create New Patient'];\n}\n\nfunction getStepContent(step) {\n  switch (step) {\n    case 0:\n      return `Enter the patient's basic information and click NEXT to continue.`;\n    case 1:\n      return `Enter the patient's biometric details and click NEXT to continue`;\n    case 2:\n      return `Confirm the accuracy of the information you've entered and click CREATE`;\n    default:\n      return 'Unknown step';\n  }\n}\n\nexport default function Registration() {\n  const classes = useStyles();\n  const [activeStep, setActiveStep] = useState(0);\n  const [firstName,setFirstName] = useState(\"\")\n  const [lastName,setLastName] = useState(\"\")\n  const [birthday,setBirthday] = useState(\"\")\n  const [sex,setSex] = useState(\"\")\n  const [homePhone,setHomePhone] = useState(\"\")\n  const [mobilePhone,setMobilePhone] =useState(\"\")\n  const [workPhone,setWorkPhone] = useState(\"\")\n  const [weight,setWeight] =useState(\"\")\n  const [height,setHeight]=useState(\"\")\n  const [occupation,setOccupation]=useState(\"\")\n  const [bmi,setBmi] = useState(\"\")\n  const [heartRate,setHeartRate]=useState(\"\")\n  const [smoker,setSmoker] =useState(\"\")\n  const [addressLineOne,setAddressLineOne]=useState(\"\")\n  const [addressLineTwo,setAddressLineTwo]=useState(\"\")\n  const [addressLineThree,setAddressLineThree]=useState(\"\")\n  const [addressCity,setAddressCity]=useState(\"\")\n  const [addressState,setAddressState]=useState(\"\")\n  const [addressZip,setAddressZip]=useState(\"\")\n  const [picture,setPicture]=useState(\"\")\n  const [creatingPatient,setCreatingPatient]=useState(false)\n  const [patientToCreate,setPatientToCreate]=useState({})\n\n  useEffect(()=>{\n    const createPatient = async (patient) => {\n        const csrfToken = Cookies.get(\"XSRF-TOKEN\")\n        const jsonPatient = JSON.stringify(patient)\n        const res = await fetch('/api/patients/create',{\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n                \"X-CSRF-TOKEN\": csrfToken,\n            },\n            body: jsonPatient\n        })\n        const data = await res.json()\n        setPatientToCreate({})\n        handleNext()\n    }\n    if (patientToCreate.firstName && patientToCreate.lastName) {\n        createPatient(patientToCreate)\n    }\n\n  },[creatingPatient])\n\n\n  const steps = getSteps();\n\n  const handleCreateNewPatient = () => {\n      setPatientToCreate({\n        firstName,\n        lastName,\n        sex,\n        mobilePhone,\n        workPhone,\n        homePhone,\n        birthday,\n        weight,\n        bmi,\n        height,\n        smoker,\n        heartRate,\n        occupation,\n        addressCity,\n        addressZip,\n        addressLineOne,\n        addressLineThree,\n        addressLineTwo,\n        addressState,\n        picture,\n      })\n      setCreatingPatient(!creatingPatient)\n  }\n\n  const handleNext = () => {\n    setActiveStep((prevActiveStep) => prevActiveStep + 1);\n  };\n\n  const handleBack = () => {\n    setActiveStep((prevActiveStep) => prevActiveStep - 1);\n  };\n\n  const handleReset = () => {\n    setActiveStep(0);\n  };\n\n  const contextObject = {\n        firstName,\n        setFirstName,\n        setLastName,\n        setBirthday,\n        setSex,\n        setHomePhone,\n        setMobilePhone,\n        setWorkPhone,\n        lastName,\n        sex,\n        mobilePhone,\n        workPhone,\n        homePhone,\n        birthday,\n        weight,\n        setWeight,\n        bmi,\n        setBmi,\n        height,\n        setHeight,\n        occupation,\n        setOccupation,\n        smoker,\n        setSmoker,\n        addressCity,\n        setAddressCity,\n        addressZip,\n        setAddressZip,\n        addressLineOne,\n        setAddressLineOne,\n        setAddressLineTwo,\n        setAddressLineThree,\n        addressLineThree,\n        addressLineTwo,\n        setAddressState,\n        addressState,\n        picture,\n        setPicture\n  }\n\n  return (\n      <RegistrationContext.Provider value={contextObject}>\n    <div className={classes.root} style={{overflow:\"scroll\",maxHeight:\"80vh\",width:\"100%\"}}>\n      <Stepper activeStep={activeStep} orientation=\"vertical\">\n        {steps.map((label, index) => (\n          <Step key={label}>\n            <StepLabel>{label}</StepLabel>\n            <StepContent>\n              <Typography>{getStepContent(index)}</Typography>\n              {index === 0 ? <RegistrationBasicInfoForm/> : \"\"}\n              {index === 1 ? <RegistrationBiometricInfo/> : \"\"}\n              <div className={classes.actionsContainer}>\n                <div>\n                  <Button\n                    disabled={activeStep === 0}\n                    onClick={handleBack}\n                    className={classes.button}\n                  >\n                    Back\n                  </Button>\n                  \n                    {activeStep === steps.length - 1 ? <Button\n                    variant=\"contained\"\n                    color=\"primary\"\n                    onClick={handleCreateNewPatient}\n                    className={classes.button}\n                  >Create New Patient</Button> : <Button\n                  variant=\"contained\"\n                  color=\"primary\"\n                  onClick={handleNext}\n                  className={classes.button}\n                >Next</Button>}\n                </div>\n              </div>\n            </StepContent>\n          </Step>\n        ))}\n      </Stepper>\n      {activeStep === steps.length && (\n        <Paper square elevation={0} className={classes.resetContainer}>\n          <Typography>New Patient successfully created - you&apos;re finished!</Typography>\n          <Button onClick={handleReset} className={classes.button}>\n            Reset\n          </Button>\n        </Paper>\n      )}\n    </div>\n    </RegistrationContext.Provider>\n  );\n}","import React, { useContext, useEffect, useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { BrowserRouter, NavLink, Switch } from 'react-router-dom'\nimport { ProtectedRoute } from '../components/utils/routes'\nimport Dashboard from './Dashboard'\nimport Orders from './Orders'\nimport Schedule from './Schedule'\nimport NavBar from '../components/NavBar'\nimport HomeContext from '../components/utils/HomeContext'\nimport { makeStyles, withStyles, useTheme } from '@material-ui/core/styles';\nimport '../styles/HomePage.css'\nimport ActivityTab from '../components/ActivityTab'\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\nimport DepSchedule from './DepSchedule'\nimport PatientSearch from './PatientSearch'\nimport PatientChart from './PatientChart'\nimport clsx from 'clsx';\nimport Drawer from '@material-ui/core/Drawer';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport List from '@material-ui/core/List';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Typography from '@material-ui/core/Typography';\nimport Divider from '@material-ui/core/Divider';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport InboxIcon from '@material-ui/icons/MoveToInbox';\nimport MailIcon from '@material-ui/icons/Mail';\nimport FaceIcon from '@material-ui/icons/Face';\nimport EncryptionIcon from '@material-ui/icons/LockTwoTone';\nimport TelegramIcon from '@material-ui/icons/Telegram';\nimport ExitToAppTwoToneIcon from '@material-ui/icons/ExitToAppTwoTone';\nimport SettingsIcon from '@material-ui/icons/Settings';\nimport Slide from '@material-ui/core/Slide';\nimport Fade from '@material-ui/core/Fade';\nimport {setCurrentPatient} from '../store/current_patient'\n// import DepartmentScheduler from './DepartmentScheduler'\n// import ProviderSchedule from './ProviderSchedule'\nimport ThemeContext from '../components/utils/ThemeContext'\nimport DepartmentSchedule from './DepartmentSchedule'\nimport {Breakpoint} from 'react-socks'\n  import { fromPairs } from 'lodash'\nimport { BottomNavigation } from '@material-ui/core'\nimport MobileBottomNav from '../components/MobileBottomNav'\nimport MobileBottomMenu from '../components/MobileBottomMenu'\nimport Registration from './Registration'\n\nconst drawerWidth = 240;\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n  },\n  paperDark:{\n      position:\"fixed\",\n      top:\"32px\",\n      backgroundColor:\"#444444\",\n      width: \"62px\",\n  },\n  paperLight:{\n    position:\"fixed\",\n    top:\"32px\",\n    backgroundColor:\"white\",\n    width: \"62px\",\n  },\n  appBar: {\n    zIndex: theme.zIndex.drawer + 1,\n    transition: theme.transitions.create(['width', 'margin'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n  },\n  appBarShift: {\n    marginLeft: drawerWidth,\n    width: `calc(100% - ${drawerWidth}px)`,\n    transition: theme.transitions.create(['width', 'margin'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  menuButton: {\n    marginRight: 36,\n  },\n  hide: {\n    display: 'none',\n  },\n  drawer: {\n    width: drawerWidth,\n    position:\"inherit\",\n    flexShrink: 0,\n    whiteSpace: 'nowrap',\n  },\n  drawerOpen: {\n    width: drawerWidth,\n    transition: theme.transitions.create('width', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  drawerClose: {\n    transition: theme.transitions.create('width', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n    overflowX: 'hidden',\n    width: theme.spacing(7) + 1,\n    [theme.breakpoints.up('sm')]: {\n      width: theme.spacing(9) + 1,\n    },\n  },\n  toolbar: {\n    display: 'flex',\n    alignItems: 'center',\n    padding: theme.spacing(0, 1),\n    // necessary for content to be below app bar\n    ...theme.mixins.toolbar,\n  },\n  content: {\n    flexGrow: 1,\n    // padding: theme.spacing(3),\n  },\n  tabStyle: {\n    cursor:\"pointer\",\n    margin:\"5px\",\n    padding:\"3px\",\n    color:\"grey\",\n    borderRadius: \"5px\",\n    display:\"flex\",\n    transition: \"all .1s ease-in-out\",\n    '&:hover': {\n        transform: \"scale(1.15)\",\n    }\n},\n}));\n\nconst tabStyle = {\n    cursor:\"pointer\",\n    padding:\"3px\",\n    color:\"grey\",\n    borderRadius: \"5px\",\n    display:\"flex\",\n    alignItems:\"center\",\n    alignContent:\"center\",\n    transition: \"all .1s ease-in-out\",\n    '&:hover': {\n        transform: \"scale(1.15)\",\n    }\n}\n\nconst HomePage=(props)=>{\n  const [sideBarDisplay,setSideBarDisplay] = useState(true)\n  const classes = useStyles();\n  const theme = useTheme();\n  const currentUser = useSelector(state => state.auth.user)\n  const [open, setOpen] = React.useState(false);\n  const dispatch = useDispatch()\n  const [themes,setThemes] = useState(\"dark\")\n  const context = useContext(ThemeContext)\n\n  const handleDrawerOpen = () => {\n    setOpen(true);\n  };\n\n  const handleDrawerClose = () => {\n    setOpen(false);\n  };\n    const [tabs,setTabs] = useState([])\n    const [selectedTabName,setSelectedTabName] = useState(\"dashboard\")\n    const openTabs = useSelector(state=>state.activities.open_tabs)\n    const [activities,setActivities] =useState([])\n    const allActivities = useSelector(state=>state.activities)\n\n    const setSelectedTab = (tabName,patient) => {\n      if (tabName.includes(\",\")){\n        console.log(tabName)\n        dispatch(setCurrentPatient(patient))\n      }\n      setSelectedTabName(tabName)\n      console.log(\"new selected tab name: \", tabName)\n    }\n\n    useEffect(()=>{\n        if (openTabs && (allActivities.role_activities || allActivities.user_activities)){\n            setTabs(openTabs)\n            setActivities([{name:\"dashboard\",id:0 },...Object.values(allActivities.role_activities),...Object.values(allActivities.user_activities)])\n        }\n    },[openTabs, allActivities])\n\n    const tabStyle = {\n        '&:hover': {\n            backgroundColor: \"hsla(0,0%,100%,.32)\",\n        }\n    }\n\n    const globalTheme = createMuiTheme => ({\n      overrides: {\n        MuiCssBaseline: {\n          '@global': {\n            html: {\n              WebkitFontSmoothing: 'auto',\n            },\n          },\n        },\n      },\n    });\n\n    return (\n        <>    \n                <HomeContext.Provider value={{setSelectedTab,setSelectedTabName, selectedTabName, setSideBarDisplay,openTabs}}>\n                <Breakpoint medium up>\n                <NavBar currentUser={currentUser}>\n                </NavBar>\n              <div style={{display:\"flex\",flexDirection:\"row\",backgroundColor:context.themes === \"light\" ? \"white\" : \"#444444\",height:\"100%\"}}>\n\n              <div className={classes.content}>\n                <div style={{display:\"flex\",flexDirection:\"column\",backgroundColor:context.themes === \"dark\" ? \"#212121\" : \"rgb(221,224,230)\"}}>\n                    <div className={context.themes === \"dark\" ? \"dark-tabs\" : \"tabs\"} style={{display:\"flex\",flexDirection:\"row\",marginBottom:0,marginLeft:\"20px\", marginTop:\"8px\",listStyleType:\"none\"}}>\n                    {tabs.map((activity, index)=>\n                        (   \n                            <ActivityTab key={activity.name} style={{...tabStyle}} index={index} activity={activity}/>\n                        ))}\n                    </div>\n                    <div style={{background:context.themes === \"dark\" ? \"#444444\" : \"white\", display:\"flex\"}}>\n                    {tabs.map(( activity, index)=>\n                    (\n                        <div style={{width:\"100%\",display: activity.name === selectedTabName ? \"flex\" : \"none\", flexDirection:\"column\",backgroundColor:context.themes === \"dark\" ? \"#444444\" : \"white\",alignItems:\"center\"}}>\n                            {activity.name === \"dashboard\" ? <Dashboard/> : <></>}\n                            {activity.name === \"Patient Registration\" ? <Registration/> : <></>}\n                            {activity.name === \"Patient Search\" ? <PatientSearch/>: <></>}\n                            {activity.patient ? <PatientChart patient={activity.patient}/> : <></>}\n                            {activity.department ? <DepartmentSchedule department={activity.department}/> : <></>}\n                        </div>\n                        \n                        ))}\n                </div>\n                </div>\n            </div>\n            </div>\n            </Breakpoint>\n            <Breakpoint small down>\n                <NavBar currentUser={currentUser}>\n                </NavBar>\n              <div style={{display:\"flex\",flexDirection:\"row\",backgroundColor:context.themes === \"light\" ? \"white\" : \"#444444\",height:\"100%\"}}>\n\n              <div className={classes.content}>\n                <div style={{display:\"flex\",flexDirection:\"column\",backgroundColor:context.themes === \"dark\" ? \"#212121\" : \"rgb(221,224,230)\"}}>\n                    {/* <div className={context.themes === \"dark\" ? \"dark-tabs\" : \"tabs\"} style={{display:\"flex\",flexDirection:\"row\",marginBottom:0,marginLeft:\"20px\", marginTop:\"8px\",listStyleType:\"none\"}}>\n                    {tabs.map((activity, index)=>\n                        (   \n                            <ActivityTab key={index} style={{...tabStyle}} index={index} activity={activity}/>\n                        ))}\n                    </div> */}\n                    <div style={{background:context.themes === \"dark\" ? \"#444444\" : \"white\", display:\"flex\"}}>\n                    {tabs.map(( activity, index)=>\n                    (\n                        <Fade in={activity.name === selectedTabName} timeout={350} mountOnEnter unmountOnExit>\n                        <div key={activity.name} style={{width:\"100%\",display: activity.name === selectedTabName ? \"flex\" : \"none\", flexDirection:\"column\",backgroundColor:context.themes === \"dark\" ? \"#444444\" : \"white\",alignItems:\"center\"}}>\n                            {activity.name === \"dashboard\" ? <Dashboard/> : <></>}\n                            {/* {activity.name === \"My Schedule\" ? <ProviderSchedule/> : <></>} */}\n                            {/* {activity.name === \"Place Orders\" ? <Orders/> : <></>} */}\n                            {activity.name === \"Patient Search\" ? <PatientSearch/>: <></>}\n                            {activity.name === \"Registration\" ? <Registration/> : <></>}\n                            {activity.patient ? <PatientChart patient={activity.patient}/> : <></>}\n                            {activity.department ? <DepartmentSchedule department={activity.department}/> : <></>}\n                        </div>\n                        </Fade>\n                        ))}\n                </div>\n                </div>\n            </div>\n            </div>\n            <MobileBottomMenu/>\n            <MobileBottomNav ></MobileBottomNav>\n            </Breakpoint>\n            </HomeContext.Provider>\n        </>\n    )\n}\n\nexport default HomePage\n","import { BrowserRouter, Switch, Route, NavLink } from 'react-router-dom';\nimport React, { useEffect, useState } from 'react';\nimport { AuthRoute, ProtectedRoute } from './components/utils/routes';\nimport SignUpPage from './pages/SignUpPage'\nimport Dashboard from './pages/Dashboard'\nimport LoginPage from './pages/LoginPage'\nimport NavBar from './components/NavBar'\nimport Home from './pages/HomePage'\nimport { CircularProgress, CssBaseline, ThemeProvider, createMuiTheme } from '@material-ui/core';\nimport { useDispatch } from 'react-redux';\nimport { useSelector } from 'react-redux';\nimport {setUser} from './store/auth'\nimport {loadActivities} from './store/activities'\nimport HomeContext from './components/utils/HomeContext'\nimport { loadProviderEncounters , loadDepartmentEncounters} from './store/encounters';\nimport { loadDepartmentOrders} from './store/orders';\nimport ThemeContext from './components/utils/ThemeContext';\nimport {BreakpointProvider} from 'react-socks'\n\n\nfunction App() {\n  const [loading, setLoading] = useState(true)\n  const [themes,setThemes] = useState(\"light\")\n  const dispatch = useDispatch()\n  useEffect(()=>{\n    const loadUser = async () => {\n      const res = await fetch(\"/api/session/current_user\");\n      if (res.ok) {\n        res.data = await res.json(); // current user info\n        if (res.data.user) {\n          dispatch(setUser(res.data.user))\n          dispatch(loadActivities())\n          console.log(res.data.user)\n          // if (res.data.user.roles) {\n          //   // const userRoles = res.data.user.roles.map(role=>role.name)\n          //   // if (userRoles.includes(\"scheduler\")) {\n          //   //   dispatch(loadDepartmentEncounters())\n          //   //   dispatch(loadDepartmentOrders())\n          //   // }\n          // }\n        }\n      }\n      setLoading(false);\n    }\n    loadUser();\n  }, [dispatch]);\n\n  const currentUser = useSelector(state => state.auth.user);\n\n  if (loading) {\n    return (\n    <div style={{display:\"flex\",flexDirection:\"column\",width:\"100%\",alignItems:\"center\",alignContent:\"center\",justifyContent:\"center\"}}>\n      <CircularProgress style={{width:\"230px\",height:\"230px\",alignSelf:\"center\",justifySelf:\"center\",marginTop:\"200px\"}} />\n    </div>\n    )\n  }\n  const darkTheme = createMuiTheme({\n    overrides: {\n      MuiCssBaseline: {\n        '@global': {\n          body: {\n            backgroundColor: '#444444',\n          },\n        },\n      },\n    },\n  })\n  \n  const lightTheme = createMuiTheme({\n    overrides: {\n      MuiCssBaseline: {\n        '@global': {\n          body: {\n            backgroundColor: 'white',\n          },\n        },\n      },\n    },\n  })\n\n  console.log(\"____Rendering app_____\")\n    return (\n    <>\n    <ThemeProvider theme={themes === \"light\" ? lightTheme : darkTheme}>\n    <BreakpointProvider>\n    <CssBaseline/>\n    <ThemeContext.Provider value={{themes,setThemes}}>\n    <BrowserRouter>\n        <Switch>\n            <AuthRoute exact path='/signup' component={SignUpPage} currentUserId={currentUser.id}/>\n            <AuthRoute exact path='/login' component={LoginPage} currentUserId={currentUser.id}/>\n            <ProtectedRoute exact path='/dashboard' component={Dashboard} currentUserId={currentUser.id}/>\n            <ProtectedRoute exact path='/' component={Home} currentUserId={currentUser.id}/>\n            <AuthRoute exact path='/' component={LoginPage} currentUserId={currentUser.id}/>\n        </Switch>\n    </BrowserRouter>\n    </ThemeContext.Provider>\n    </BreakpointProvider>\n    </ThemeProvider>\n    </>\n  );\n}\n\nexport default App;\n","import { createStore, compose, combineReducers, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport auth from './auth';\nimport activities from './activities'\nimport encounters from './encounters'\nimport orders from './orders'\nimport currentPatient from './current_patient'\n\nconst rootReducer = combineReducers({\n    auth,\n    activities,\n    currentPatient\n});\n\nlet storeEnhancer;\n\nif (process.env.NODE_ENV !== 'production') {\n  const composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n  storeEnhancer = composeEnhancers(applyMiddleware(thunk));\n} else {\n  storeEnhancer = applyMiddleware(thunk);\n}\n\nexport default function configureStore(initialState) {\n  return createStore(\n    rootReducer,\n    initialState,\n    storeEnhancer\n  )\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport configureStore from './store/configureStore'\nimport {Provider} from 'react-redux'\n\nconst store = configureStore();\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n","import Cookies from 'js-cookie'\nimport {addOrder} from './current_patient'\n\nconst CREATE_ORDER_CURRENT_PATIENT = \"/orders/CREATE_ORDER_CURRENT_PATIENT\"\nconst SET_DEPARTMENT_APPOINTMENT_ORDERS = \"/orders/SET_DEPARTMENT_ORDERS\"\nconst REMOVE_APPOINTMENT_ORDER = \"/orders/REMOVE_APPOINTMENT_ORDER\"\n\n\nexport const loadDepartmentOrders = () => async (dispatch) => {\n    // const csrfToken = Cookies.get(\"XSRF-TOKEN\");\n    // const res = await fetch(`/api/orders/department`)\n    // if (res.ok) {\n    //     const data = await res.json()\n    //     dispatch(setDepartmentOrders(data.orders))\n    // }\n}\n\nexport const createOrder = (order) => async (dispatch) => {\n    const csrfToken = Cookies.get(\"XSRF-TOKEN\")\n    const jsonOrder = JSON.stringify(order)\n    const res = await fetch('/api/orders/create',{\n        method: \"POST\",\n        headers: {\n            \"Content-Type\": \"application/json\",\n            \"X-CSRF-TOKEN\": csrfToken,\n        },\n        body: jsonOrder\n    })\n    const data = await res.json()\n    console.log(data)\n    dispatch(makeOrder(data.order))\n    dispatch(addOrder(data.order))\n}\n\n\nexport const removeAppointmentOrder =(order)=>{\n    return {\n        type: REMOVE_APPOINTMENT_ORDER,\n        order\n    }\n}\n\n\nexport const makeOrder = (order) => {\n    return {\n        type:CREATE_ORDER_CURRENT_PATIENT,\n        order\n    }\n}\n\nexport const setDepartmentOrders = (orders) => {\n    console.log(orders)\n    return {\n        type:SET_DEPARTMENT_APPOINTMENT_ORDERS,\n        orders\n    }\n}\n\nexport default function ordersReducer(state={},action){\n    const newState = Object.assign({},state)\n    switch (action.type) {\n        case CREATE_ORDER_CURRENT_PATIENT:\n            console.log(\"order from reducer: \",action.order)\n            return state\n        case SET_DEPARTMENT_APPOINTMENT_ORDERS:\n            newState[\"appointment_requests\"] = {}\n            action.orders.forEach(order=>{\n                console.log(order)\n                newState[\"appointment_requests\"][order.id] = order\n            })\n            return newState\n        case REMOVE_APPOINTMENT_ORDER:\n            const apptRequests = Object.assign({},state.appointment_requests)\n            delete apptRequests[action.order.id]\n            newState[\"appointment_requests\"] = apptRequests;\n            return newState\n        default:\n            return state\n    }\n}","import Cookies from 'js-cookie'\nimport {removeAppointmentOrder} from './orders'\n\nconst LOAD_ENCOUNTERS = 'encounter/LOAD_ENCOUNTERS'\nconst ENCOUNTERS_BY_WEEK = 'encounter/ENCOUNTERS_BY_WEEK'\nconst OPEN_TAB = 'encounter/OPEN_TAB'\nconst OPEN_CHART = 'encounter/OPEN_CHART'\nconst ADD_ENCOUNTER = 'encounter/ADD_ENCOUNTER'\n\n// export const loadProviderEncounters = (id) => async (dispatch) => {\n//     const csrfToken = Cookies.get(\"XSRF-TOKEN\");\n//     const res = await fetch(`/api/encounters/provider/${id}`)\n//     if (res.ok) {\n//         const data = await res.json()\n//         // dispatch(setEncounters(data.encounters))\n//     }\n// }\n\nexport const loadDepartmentEncounters = () => async (dispatch) => {\n    const csrfToken = Cookies.get(\"XSRF-TOKEN\");\n    const res = await fetch(`/api/encounters/department`)\n    if (res.ok) {\n        const data = await res.json()\n        dispatch(setEncounters(data.encounters))\n    }\n}\n\nexport const createEncounterFromOrder = (encounterProps,order) => async (dispatch) => {\n    const csrfToken = Cookies.get(\"XSRF-TOKEN\")\n    const encounter = {...encounterProps, order}\n    const jsonEncounter = JSON.stringify(encounter)\n    const res = await fetch('/api/encounterfromorder/create',{\n        method: \"POST\",\n        headers: {\n            \"Content-Type\": \"application/json\",\n            \"X-CSRF-TOKEN\": csrfToken,\n        },\n        body: jsonEncounter\n    })\n    const data = await res.json()\n    console.log(data)\n    dispatch(removeAppointmentOrder(order))\n}\n\nexport const createNewEncounter=(encounter)=>async(dispatch)=>{\n        console.log(encounter)\n        const csrfToken = Cookies.get(\"XSRF-TOKEN\")\n        const jsonEncounter = JSON.stringify(encounter)\n        const res = await fetch('/api/encounters/create',{\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n                \"X-CSRF-TOKEN\": csrfToken,\n            },\n            body: jsonEncounter\n        })\n        const data = await res.json()\n        console.log(data)\n    }\n\nexport const addEncounter = (encounter) => {\n    return {\n        type: ADD_ENCOUNTER,\n        encounter\n    }\n}\n\n\nexport const setEncounters = (encounters) => {\n    return {\n        type: LOAD_ENCOUNTERS,\n        encounters\n    }\n}\n\n// export const openPatientChart = (patientId) => async (dispatch) => {\n//     const res = await fetch(`/api/patients/id/${patientId}`)\n//     const data = await res.json()\n//     console.log(data)\n//     dispatch(openChart(data.patient))\n// }\n\nconst getWeekNumber =(d)=>{\n    d = new Date(Date.UTC(d.getFullYear(), d.getMonth(), d.getDate()));\n    d.setUTCDate(d.getUTCDate() + 4 - (d.getUTCDay()||7));\n    const yearStart = new Date(Date.UTC(d.getUTCFullYear(),0,1));\n    const weekNo = Math.ceil(( ( (d - yearStart) / 86400000) + 1)/7);\n    return [d.getUTCFullYear(), weekNo];\n    }\n\nexport default function encountersReducer(state = {my_encounters: {}} ,action) {\n    let newState = Object.assign({},state);\n    switch (action.type){\n        case LOAD_ENCOUNTERS:\n            action.encounters.forEach(encounter=>{\n                newState[\"my_encounters\"][encounter.id] = encounter\n            })\n            const encsByWeek = {}\n            Object.values(action.encounters).forEach((encounter,index)=>{\n                    const newEncounterCard = {x:\"\",y:\"\",w:1,h:\"\",i:`${index + 2}`,minW: 1,maxW:1,encounter,patient:encounter.patient,start:\"\",end:\"\"}\n                    const dateStartArr = encounter.start.split(\" \")\n                    console.log(encounter.start)\n                    dateStartArr.pop()\n                    const newStartDateNoTZ = dateStartArr.join(\" \")\n                    const encStartTime = new Date(newStartDateNoTZ)\n                    const encounterWeekNumber = getWeekNumber(encStartTime)\n                    console.log(encounterWeekNumber)\n                    const encWeek = encounterWeekNumber[1]\n                    encsByWeek[encWeek] ? encsByWeek[encWeek][encounter.id]=encounter : encsByWeek[encWeek] = {[encounter.id]:encounter}\n                })\n                console.log(encsByWeek)\n            newState[\"by_week\"] = encsByWeek\n            return newState\n        // case ADD_ENCOUNTER:\n        //     const encounterWeeks = Object.assign({},state.by_week)\n        //     const newEncounterCard = {x:\"\",y:\"\",w:1,h:\"\",i:`${index + 2}`,minW: 1,maxW:1,encounter,patient:encounter.patient,start:\"\",end:\"\"}\n        //     const dateStartArr = encounter.start.split(\" \")\n        //     console.log(encounter.start)\n        //     dateStartArr.pop()\n        //     const newStartDateNoTZ = dateStartArr.join(\" \")\n        //     const encStartTime = new Date(newStartDateNoTZ)\n        //     const encounterWeekNumber = getWeekNumber(encStartTime)\n        //     console.log(encounterWeekNumber)\n        //     const encWeek = encounterWeekNumber[1]\n        //     encsByWeek[encWeek] ? encsByWeek[encWeek][encounter.id]=encounter : encsByWeek[encWeek] = {[encounter.id]:encounter}\n        default:\n            return state\n    }\n}","import { createContext } from 'react';\n\nconst WeekContext = createContext();\n\nexport default WeekContext;"],"sourceRoot":""}